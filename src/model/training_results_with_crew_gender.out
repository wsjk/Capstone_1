HBox(children=(IntProgress(value=1, bar_style='info', max=1), HTML(value='')))

/media/schoolsofthought/32B6D9C0B6D9852F/Users/schoolsofthought/Desktop/Code/springboard/Capstone_1
Traceback (most recent call last):
  File "rf_randomsearchcv.py", line 69, in <module>
    return_train_score=True
TypeError: __init__() got an unexpected keyword argument 'bootstrap'
HBox(children=(IntProgress(value=1, bar_style='info', max=1), HTML(value='')))

/media/schoolsofthought/32B6D9C0B6D9852F/Users/schoolsofthought/Desktop/Code/springboard/Capstone_1
/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/ensemble/forest.py:453: UserWarning: Some inputs do not have OOB scores. This probably means too few trees were used to compute any reliable oob estimates.
  warn("Some inputs do not have OOB scores. "
/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/ensemble/forest.py:458: RuntimeWarning: invalid value encountered in true_divide
  predictions[k].sum(axis=1)[:, np.newaxis])
/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/ensemble/forest.py:453: UserWarning: Some inputs do not have OOB scores. This probably means too few trees were used to compute any reliable oob estimates.
  warn("Some inputs do not have OOB scores. "
/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/ensemble/forest.py:458: RuntimeWarning: invalid value encountered in true_divide
  predictions[k].sum(axis=1)[:, np.newaxis])
/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/ensemble/forest.py:453: UserWarning: Some inputs do not have OOB scores. This probably means too few trees were used to compute any reliable oob estimates.
  warn("Some inputs do not have OOB scores. "
/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/ensemble/forest.py:458: RuntimeWarning: invalid value encountered in true_divide
  predictions[k].sum(axis=1)[:, np.newaxis])
{'max_features': None, 'oob_score': False, 'max_depth': 70, 'max_leaf_nodes': 25, 'min_samples_split': 95, 'n_estimators': 20, 'min_samples_leaf': 56, 'criterion': 'gini'}
{'param_max_depth': masked_array(data=[440, 130, 470, 60, 210, 380, 380, 310, 180, 120, 40,
                   240, 390, 40, 140, 100, 490, 380, 300, 310, 10, 450,
                   230, 220, 320, 350, 320, 310, 220, 340, 440, 310, 240,
                   70, 10, 240, 490, 160, 130, 140, 210, 250, 90, 80, 90,
                   160, 280, 160, 320, 440, 300, 490, 380, 110, 360, 460,
                   30, 220, 270, 30, 250, 250, 60, 150, 250, 70, 110, 10,
                   230, 90, 20, 60, 230, 380, 40, 220, 60, 220, 320, 470,
                   140, 100, 340, 270, 190, 40, 10, 390, 130, 40, 290,
                   250, 490, 110, 130, 30, 380, 90, 410, 150, 340, 50, 10,
                   210, 440, 120, 230, 440, 300, 490, 70, 110, 140, 160,
                   300, 40, 170, 460, 330, 40, 10, 110, 430, 260, 70, 120,
                   290, 100, 50, 300, 320, 450, 80, 120, 10, 220, 280,
                   460, 120, 210, 130, 170, 20, 440, 90, 430, 280, 20,
                   300, 190, 40, 110, 460, 10, 140, 410, 230, 140, 440,
                   20, 370, 300, 320, 40, 410, 180, 250, 190, 460, 390,
                   360, 440, 270, 200, 330, 90, 340, 440, 410, 160, 410,
                   430, 100, 280, 300, 420, 80, 420, 70, 210, 180, 390,
                   110, 430, 280, 430, 340, 120, 310, 200, 130, 350, 200,
                   180, 140, 140, 150, 270, 240, 440, 230, 90, 30, 150,
                   380, 300, 280, 110, 330, 470, 400, 270, 130, 320, 130,
                   170, 280, 450, 150, 60, 90, 120, 470, 20, 390, 190,
                   250, 60, 420, 90, 130, 490, 380, 30, 440, 110, 440,
                   330, 410, 370, 440, 310, 420, 260, 450, 80, 200, 230,
                   140, 250, 480, 10, 300, 10, 480, 300, 390, 340, 170,
                   150, 450, 20, 390, 470, 400, 160, 450, 110, 190, 260,
                   50, 210, 390, 200, 250, 320, 310, 280, 280, 250, 60,
                   70, 100, 310, 230, 420, 320, 240, 350, 430, 180, 110,
                   90, 80, 410, 230, 470, 10, 120, 310, 60, 20, 440, 170,
                   230, 330, 330, 20, 350, 410, 130, 400, 150, 390, 370,
                   470, 300, 240, 110, 280, 390, 190, 360, 470, 440, 80,
                   70, 110, 150, 70, 360, 270, 140, 470, 250, 400, 120,
                   80, 420, 250, 470, 30, 110, 160, 400, 420, 20, 140,
                   390, 410, 300, 40, 170, 440, 350, 190, 340, 230, 80,
                   280, 250, 100, 350, 130, 40, 80, 360, 280, 470, 10,
                   360, 460, 450, 390, 350, 380, 180, 110, 140, 160, 140,
                   220, 490, 170, 120, 390, 160, 250, 90, 90, 330, 350,
                   220, 240, 40, 400, 30, 60, 190, 270, 50, 260, 160, 170,
                   440, 450, 90, 420, 240, 160, 90, 80, 90, 70, 50, 340,
                   390, 160, 330, 120, 30, 280, 350, 230, 80, 330, 90,
                   170, 300, 380, 430, 60, 310, 200, 380, 350, 390, 260,
                   240, 420, 430, 80, 480, 170, 50, 350, 30, 200, 160,
                   330, 330, 430, 130, 450, 380, 10, 180, 220, 280, 130,
                   290, 440, 70, 70, 480, 130, 30, 480, 290, 340, 280,
                   330, 80, 410, 420, 350, 360, 420, 490, 130, 70, 150,
                   130, 400, 170, 380, 430, 480, 470, 320],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'split2_test_score': array([0.57755776, 0.58745875, 0.57425743, 0.58085809, 0.59075908,
       0.59075908, 0.58415842, 0.58415842, 0.56105611, 0.60066007,
       0.60066007, 0.58085809, 0.59405941, 0.59075908, 0.61056106,
       0.57425743, 0.60066007, 0.59405941, 0.58415842, 0.59075908,
       0.58415842, 0.60066007, 0.59075908, 0.59405941, 0.58085809,
       0.59075908, 0.60726073, 0.60726073, 0.59405941, 0.6039604 ,
       0.58085809, 0.59075908, 0.58415842, 0.58085809, 0.59075908,
       0.59405941, 0.57755776, 0.58085809, 0.59735974, 0.58745875,
       0.59405941, 0.58745875, 0.58745875, 0.58745875, 0.58745875,
       0.60726073, 0.59735974, 0.6039604 , 0.58085809, 0.59735974,
       0.58415842, 0.59075908, 0.62046205, 0.58085809, 0.59405941,
       0.57425743, 0.58745875, 0.6039604 , 0.59405941, 0.58745875,
       0.58415842, 0.59735974, 0.60066007, 0.59075908, 0.60726073,
       0.59735974, 0.61056106, 0.60066007, 0.58745875, 0.6039604 ,
       0.60066007, 0.57755776, 0.59075908, 0.60066007, 0.58415842,
       0.62046205, 0.62706271, 0.6039604 , 0.61716172, 0.59075908,
       0.59075908, 0.5709571 , 0.59735974, 0.62376238, 0.57755776,
       0.58745875, 0.57425743, 0.57755776, 0.59735974, 0.58415842,
       0.59405941, 0.58745875, 0.59735974, 0.58745875, 0.61386139,
       0.60066007, 0.57425743, 0.58415842, 0.58415842, 0.6039604 ,
       0.56435644, 0.58415842, 0.59075908, 0.61716172, 0.60066007,
       0.58745875, 0.59075908, 0.6039604 , 0.59075908, 0.56765677,
       0.58085809, 0.59075908, 0.59735974, 0.58745875, 0.57425743,
       0.58085809, 0.57755776, 0.59075908, 0.58415842, 0.59735974,
       0.59735974, 0.59405941, 0.60726073, 0.57425743, 0.6039604 ,
       0.62046205, 0.59075908, 0.58415842, 0.58745875, 0.58085809,
       0.58085809, 0.58085809, 0.57755776, 0.59405941, 0.60066007,
       0.60726073, 0.58745875, 0.59075908, 0.58415842, 0.60726073,
       0.59405941, 0.6039604 , 0.57425743, 0.58085809, 0.58415842,
       0.59075908, 0.58415842, 0.58415842, 0.58415842, 0.58415842,
       0.59075908, 0.5709571 , 0.59405941, 0.6039604 , 0.58745875,
       0.61716172, 0.59075908, 0.61716172, 0.57755776, 0.59075908,
       0.59405941, 0.58415842, 0.58085809, 0.58415842, 0.59075908,
       0.59735974, 0.58085809, 0.5709571 , 0.59075908, 0.59075908,
       0.56765677, 0.58745875, 0.59075908, 0.6039604 , 0.6039604 ,
       0.60726073, 0.5709571 , 0.58415842, 0.59405941, 0.58415842,
       0.58745875, 0.60066007, 0.58415842, 0.58745875, 0.58745875,
       0.57755776, 0.58085809, 0.58415842, 0.6369637 , 0.62376238,
       0.5709571 , 0.61056106, 0.58085809, 0.59075908, 0.56105611,
       0.60066007, 0.57755776, 0.59075908, 0.58085809, 0.5709571 ,
       0.5709571 , 0.58745875, 0.60066007, 0.59405941, 0.58745875,
       0.58085809, 0.59405941, 0.57755776, 0.56435644, 0.58085809,
       0.6039604 , 0.56105611, 0.59735974, 0.59075908, 0.59075908,
       0.59075908, 0.57425743, 0.59075908, 0.58745875, 0.58085809,
       0.61056106, 0.5709571 , 0.5709571 , 0.58415842, 0.58415842,
       0.58415842, 0.58415842, 0.5709571 , 0.61386139, 0.59735974,
       0.57425743, 0.61056106, 0.57755776, 0.59075908, 0.59075908,
       0.60726073, 0.60726073, 0.58415842, 0.59075908, 0.59075908,
       0.58745875, 0.61056106, 0.58085809, 0.59735974, 0.58415842,
       0.58085809, 0.59735974, 0.57425743, 0.58745875, 0.56765677,
       0.58085809, 0.5709571 , 0.59075908, 0.59405941, 0.58085809,
       0.6039604 , 0.58745875, 0.60726073, 0.58085809, 0.57755776,
       0.5709571 , 0.58415842, 0.58745875, 0.59735974, 0.57425743,
       0.56435644, 0.58745875, 0.60066007, 0.58415842, 0.59075908,
       0.59075908, 0.60726073, 0.59735974, 0.57755776, 0.60726073,
       0.57755776, 0.58085809, 0.58745875, 0.58745875, 0.58415842,
       0.61056106, 0.58415842, 0.58745875, 0.58745875, 0.57755776,
       0.59075908, 0.58085809, 0.58085809, 0.58085809, 0.58085809,
       0.57425743, 0.58745875, 0.58415842, 0.57425743, 0.6039604 ,
       0.61056106, 0.57755776, 0.61056106, 0.58415842, 0.57755776,
       0.6039604 , 0.5709571 , 0.58745875, 0.58745875, 0.58085809,
       0.59735974, 0.58745875, 0.58745875, 0.58415842, 0.58745875,
       0.59075908, 0.57755776, 0.58415842, 0.58745875, 0.58745875,
       0.62046205, 0.59075908, 0.59735974, 0.60066007, 0.59405941,
       0.59735974, 0.58745875, 0.59735974, 0.59735974, 0.58415842,
       0.58415842, 0.57425743, 0.58085809, 0.59075908, 0.58085809,
       0.59405941, 0.59075908, 0.6039604 , 0.59405941, 0.58745875,
       0.58415842, 0.60066007, 0.60066007, 0.59075908, 0.58745875,
       0.59075908, 0.6039604 , 0.58085809, 0.60066007, 0.57425743,
       0.59405941, 0.60726073, 0.59075908, 0.58085809, 0.61386139,
       0.6039604 , 0.61386139, 0.58085809, 0.57425743, 0.58085809,
       0.57755776, 0.59735974, 0.58415842, 0.5709571 , 0.58415842,
       0.58745875, 0.59075908, 0.58085809, 0.58415842, 0.59075908,
       0.59075908, 0.61056106, 0.58745875, 0.57755776, 0.58745875,
       0.60066007, 0.58745875, 0.58745875, 0.59075908, 0.59075908,
       0.59075908, 0.58745875, 0.58745875, 0.59075908, 0.58085809,
       0.57425743, 0.60726073, 0.57755776, 0.59735974, 0.59405941,
       0.57425743, 0.57425743, 0.60066007, 0.60066007, 0.59405941,
       0.58415842, 0.5709571 , 0.58745875, 0.58085809, 0.60066007,
       0.59405941, 0.58415842, 0.57755776, 0.59735974, 0.59405941,
       0.59075908, 0.5709571 , 0.58745875, 0.60726073, 0.58085809,
       0.60066007, 0.58085809, 0.59075908, 0.58415842, 0.58745875,
       0.58415842, 0.59075908, 0.58415842, 0.58745875, 0.58745875,
       0.59075908, 0.61056106, 0.58745875, 0.61716172, 0.58085809,
       0.57755776, 0.60066007, 0.58415842, 0.60066007, 0.58745875,
       0.58745875, 0.57755776, 0.58745875, 0.59735974, 0.58745875,
       0.58745875, 0.58085809, 0.59075908, 0.59075908, 0.58085809,
       0.59735974, 0.57425743, 0.58085809, 0.58745875, 0.59075908,
       0.58085809, 0.5709571 , 0.59405941, 0.58415842, 0.57755776,
       0.57755776, 0.6039604 , 0.59075908, 0.59075908, 0.58415842,
       0.56765677, 0.58745875, 0.59075908, 0.59075908, 0.57425743,
       0.59075908, 0.57425743, 0.59075908, 0.59405941, 0.59075908,
       0.59075908, 0.58085809, 0.59405941, 0.58085809, 0.58415842,
       0.56765677, 0.58085809, 0.55445545, 0.59405941, 0.58085809,
       0.59075908, 0.58745875, 0.58415842, 0.59075908, 0.60066007,
       0.57755776, 0.58415842, 0.58745875, 0.59075908, 0.63036304,
       0.58745875, 0.60726073, 0.57755776, 0.57425743, 0.60066007,
       0.58745875, 0.59075908, 0.58085809, 0.59075908, 0.58415842,
       0.60066007, 0.59735974, 0.59075908, 0.59735974, 0.59405941,
       0.5709571 , 0.5709571 , 0.6039604 , 0.58745875, 0.6039604 ]), 'std_train_score': array([0.01390683, 0.00851196, 0.01473589, 0.00928599, 0.00359586,
       0.01086242, 0.01796254, 0.01207971, 0.01107538, 0.01289748,
       0.00999232, 0.01390683, 0.01476202, 0.00174434, 0.00580502,
       0.00740604, 0.01288767, 0.02976489, 0.00808399, 0.00996837,
       0.00548931, 0.00476808, 0.01185217, 0.01013378, 0.01457908,
       0.0004067 , 0.01259219, 0.00583834, 0.01035696, 0.00394377,
       0.01742294, 0.0004067 , 0.01126412, 0.01419184, 0.00111112,
       0.00750238, 0.01663387, 0.01126277, 0.0103225 , 0.00391192,
       0.01130516, 0.01670804, 0.00501601, 0.00652435, 0.01558801,
       0.0136404 , 0.0098551 , 0.00997632, 0.0173293 , 0.00938303,
       0.00850452, 0.0004067 , 0.02008874, 0.00954868, 0.00630059,
       0.01726026, 0.01584797, 0.01981826, 0.01052059, 0.00349762,
       0.0039167 , 0.0145043 , 0.00900667, 0.0004067 , 0.01038758,
       0.00650746, 0.01046442, 0.01228529, 0.01197285, 0.01164198,
       0.01123227, 0.01262707, 0.01180829, 0.00832611, 0.00654082,
       0.01448656, 0.01326748, 0.0101593 , 0.00519545, 0.00993732,
       0.00893959, 0.00959809, 0.01366375, 0.01556623, 0.01159017,
       0.00898567, 0.0110556 , 0.01938367, 0.00652534, 0.00449626,
       0.00817802, 0.0092842 , 0.01070721, 0.00976002, 0.01283194,
       0.01522568, 0.01930716, 0.01041096, 0.01157455, 0.0079329 ,
       0.00441871, 0.0123511 , 0.00318209, 0.01910343, 0.01365978,
       0.00652061, 0.00454452, 0.01326044, 0.00835443, 0.01395408,
       0.01196752, 0.0004067 , 0.00698225, 0.00456673, 0.00172946,
       0.01246973, 0.01123722, 0.00187351, 0.01083236, 0.01913985,
       0.01468363, 0.01022617, 0.01445901, 0.01316775, 0.01378485,
       0.01226363, 0.01440979, 0.00697216, 0.00727501, 0.01179347,
       0.01592063, 0.01318607, 0.01905977, 0.01196325, 0.01447033,
       0.01127246, 0.00389119, 0.01903571, 0.00596806, 0.01354179,
       0.00968287, 0.01059909, 0.01513117, 0.00876325, 0.01012927,
       0.00187351, 0.00574467, 0.01259102, 0.00908434, 0.01428931,
       0.00111112, 0.01551659, 0.00423393, 0.00635203, 0.0035023 ,
       0.01278586, 0.01124743, 0.00829009, 0.01981044, 0.0116628 ,
       0.01108724, 0.01134287, 0.00252088, 0.00993482, 0.01178716,
       0.01701335, 0.01010041, 0.01126952, 0.0004067 , 0.0004067 ,
       0.01550722, 0.00574849, 0.0098155 , 0.01253075, 0.00164832,
       0.01895155, 0.01260029, 0.01060442, 0.01504778, 0.00236087,
       0.00985068, 0.01304245, 0.01263084, 0.00574664, 0.0150639 ,
       0.01344768, 0.01397374, 0.00671593, 0.01124501, 0.0124494 ,
       0.01069664, 0.0203518 , 0.0085413 , 0.01043785, 0.01757407,
       0.01366685, 0.01466848, 0.01784459, 0.01138668, 0.01611566,
       0.00236758, 0.01195808, 0.01172864, 0.01027372, 0.00448791,
       0.00899668, 0.012193  , 0.01408819, 0.00454688, 0.00924812,
       0.01126748, 0.01661855, 0.01011673, 0.00187351, 0.0004067 ,
       0.0004067 , 0.01186182, 0.00456083, 0.01564028, 0.01598472,
       0.00983676, 0.0123527 , 0.01487059, 0.01283755, 0.01026914,
       0.0138747 , 0.01118178, 0.01642798, 0.01354179, 0.00960477,
       0.01261719, 0.01799953, 0.0159235 , 0.00936055, 0.01049629,
       0.00432816, 0.00591488, 0.0102063 , 0.01032111, 0.0004067 ,
       0.0062001 , 0.00430616, 0.00759119, 0.0202844 , 0.00727795,
       0.01053535, 0.00989823, 0.01464141, 0.00496918, 0.01396456,
       0.00544384, 0.01394231, 0.00958659, 0.0134277 , 0.00724029,
       0.01413447, 0.00614012, 0.00502692, 0.00976002, 0.01104243,
       0.00950611, 0.01092308, 0.00620183, 0.01220205, 0.00432254,
       0.0017976 , 0.00823381, 0.00272486, 0.01332072, 0.01141394,
       0.0004067 , 0.00920561, 0.01516151, 0.0101784 , 0.01481845,
       0.01319089, 0.01273639, 0.00900174, 0.00922739, 0.01317877,
       0.01502105, 0.00243378, 0.01184348, 0.01350717, 0.01320342,
       0.0004067 , 0.01351095, 0.0153694 , 0.01366933, 0.00744722,
       0.01132783, 0.00583411, 0.01593665, 0.0186866 , 0.01302488,
       0.014516  , 0.0166999 , 0.01607677, 0.01438515, 0.01313056,
       0.00723603, 0.00923848, 0.01216221, 0.01722021, 0.0151643 ,
       0.00803782, 0.00583063, 0.00391192, 0.00923766, 0.00774061,
       0.00111112, 0.01084141, 0.0019536 , 0.0088527 , 0.00995855,
       0.01840522, 0.0004067 , 0.01083102, 0.01095511, 0.0109441 ,
       0.01077656, 0.01960735, 0.01510254, 0.02129392, 0.00859697,
       0.01156984, 0.01189285, 0.01255462, 0.0004067 , 0.00467427,
       0.01046807, 0.0004067 , 0.00233824, 0.00370585, 0.00728885,
       0.00365433, 0.01783237, 0.01585376, 0.00419212, 0.00696867,
       0.0004067 , 0.00984337, 0.01232078, 0.0050857 , 0.01254896,
       0.00577818, 0.0089793 , 0.00771865, 0.01466646, 0.01835059,
       0.00400302, 0.00297334, 0.01440663, 0.01793998, 0.01515991,
       0.01161168, 0.00807945, 0.01191722, 0.01335809, 0.01119111,
       0.00719665, 0.0004067 , 0.00885458, 0.00174434, 0.00214029,
       0.0004067 , 0.01241172, 0.0145941 , 0.01393448, 0.01103749,
       0.01099453, 0.00574478, 0.01456737, 0.00040648, 0.0004067 ,
       0.00187351, 0.00420315, 0.01306402, 0.00227709, 0.01124778,
       0.01790048, 0.01389298, 0.01325217, 0.0073885 , 0.01060769,
       0.01589928, 0.01084323, 0.00497709, 0.00518538, 0.02015815,
       0.00634558, 0.01587645, 0.00243511, 0.01027238, 0.00824694,
       0.00807945, 0.02051843, 0.0100358 , 0.00157075, 0.00401602,
       0.0004067 , 0.01795875, 0.00574478, 0.01666573, 0.01123896,
       0.00529562, 0.01274207, 0.0004067 , 0.01141746, 0.00727354,
       0.00876325, 0.0004067 , 0.00925289, 0.01183744, 0.0032046 ,
       0.0165733 , 0.01030337, 0.00934973, 0.01051999, 0.0067379 ,
       0.01515033, 0.01162373, 0.01322659, 0.01047056, 0.00511439,
       0.0175953 , 0.00775426, 0.01209723, 0.0105383 , 0.00801605,
       0.01103585, 0.01255462, 0.0004067 , 0.00187351, 0.01146605,
       0.01411999, 0.01134175, 0.01179513, 0.00857065, 0.00120117,
       0.01186066, 0.00410143, 0.00198627, 0.00621045, 0.01030809,
       0.01471932, 0.01896309, 0.00807086, 0.01539318, 0.01318881,
       0.01137312, 0.00174434, 0.0004067 , 0.00174434, 0.01567957,
       0.00174434, 0.01816117, 0.0004067 , 0.01186431, 0.0004067 ,
       0.0190252 , 0.01235628, 0.0132457 , 0.01041096, 0.01093394,
       0.01200119, 0.00899837, 0.01691389, 0.01097762, 0.00751756,
       0.00959255, 0.01013831, 0.02021383, 0.00543875, 0.01040113,
       0.01440829, 0.01157231, 0.00391192, 0.00187351, 0.01188495,
       0.0092842 , 0.01455286, 0.00742241, 0.01104407, 0.01103048,
       0.00443432, 0.0004067 , 0.00472248, 0.0004067 , 0.01390683,
       0.00814768, 0.00935283, 0.0004067 , 0.00662933, 0.00539475,
       0.00910908, 0.0156996 , 0.02077282, 0.0051263 , 0.01292044]), 'param_min_samples_split': masked_array(data=[10, 46, 116, 7, 149, 55, 128, 60, 27, 123, 137, 109,
                   33, 102, 149, 87, 146, 64, 64, 94, 146, 115, 6, 23, 56,
                   9, 71, 2, 16, 28, 32, 95, 83, 59, 46, 67, 106, 102, 4,
                   99, 84, 13, 112, 144, 66, 101, 76, 89, 87, 75, 102,
                   149, 67, 101, 78, 109, 42, 14, 3, 136, 149, 124, 91,
                   136, 88, 109, 44, 13, 5, 25, 14, 28, 79, 93, 140, 129,
                   147, 17, 68, 50, 148, 63, 130, 109, 58, 12, 4, 4, 20,
                   138, 28, 115, 51, 91, 112, 135, 58, 31, 22, 54, 35,
                   135, 121, 5, 82, 112, 55, 81, 55, 62, 32, 139, 28, 135,
                   75, 57, 19, 50, 50, 76, 80, 41, 48, 101, 131, 93, 58,
                   90, 8, 32, 94, 142, 72, 59, 13, 36, 33, 8, 90, 68, 60,
                   88, 113, 142, 31, 43, 97, 35, 96, 91, 107, 108, 41, 99,
                   38, 108, 47, 142, 118, 36, 82, 7, 32, 58, 77, 107, 118,
                   3, 135, 13, 33, 31, 30, 123, 130, 5, 144, 37, 24, 94,
                   41, 112, 97, 75, 71, 49, 63, 128, 95, 27, 98, 102, 88,
                   118, 82, 130, 55, 8, 79, 77, 57, 15, 114, 28, 14, 19,
                   89, 140, 7, 86, 125, 12, 51, 79, 61, 106, 88, 13, 90,
                   42, 117, 41, 9, 63, 135, 104, 84, 122, 97, 30, 30, 95,
                   109, 35, 149, 80, 65, 19, 77, 74, 28, 78, 116, 72, 32,
                   121, 5, 51, 26, 87, 119, 89, 16, 2, 148, 117, 119, 116,
                   126, 78, 92, 125, 47, 4, 68, 22, 49, 129, 24, 61, 138,
                   5, 103, 98, 116, 26, 2, 16, 114, 25, 24, 123, 96, 117,
                   76, 76, 21, 2, 43, 47, 19, 60, 112, 62, 95, 146, 52,
                   99, 117, 4, 132, 91, 10, 148, 19, 113, 89, 88, 30, 27,
                   113, 45, 101, 122, 142, 16, 130, 121, 62, 77, 73, 25,
                   99, 57, 142, 107, 42, 74, 101, 148, 23, 127, 114, 133,
                   36, 83, 140, 127, 63, 20, 126, 120, 146, 104, 132, 136,
                   11, 38, 32, 47, 127, 55, 30, 126, 39, 125, 64, 112, 30,
                   78, 136, 36, 91, 39, 144, 79, 16, 89, 78, 36, 59, 37,
                   37, 21, 27, 113, 149, 80, 87, 16, 68, 68, 138, 18, 46,
                   113, 47, 146, 124, 103, 68, 6, 73, 104, 119, 14, 112,
                   56, 49, 93, 20, 139, 131, 108, 31, 85, 58, 42, 138, 75,
                   111, 23, 126, 127, 91, 82, 55, 142, 138, 100, 105, 146,
                   126, 8, 44, 68, 81, 23, 32, 110, 120, 18, 124, 85, 135,
                   138, 38, 144, 38, 43, 47, 13, 117, 56, 145, 9, 119,
                   115, 31, 109, 36, 27, 139, 61, 134, 79, 27, 82, 92, 68,
                   123, 72, 57, 84, 138, 68, 104, 78, 6, 136, 43, 75, 35,
                   67, 123, 108, 63, 21, 50, 92, 7, 90, 76, 14, 104, 37,
                   92, 105, 58, 109, 59, 49, 7, 31, 70, 39, 58, 134, 144,
                   131],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'mean_test_score': array([0.58991228, 0.58662281, 0.58114035, 0.58662281, 0.59320175,
       0.58991228, 0.58333333, 0.58881579, 0.57675439, 0.60745614,
       0.5997807 , 0.58662281, 0.60197368, 0.58991228, 0.60197368,
       0.58881579, 0.59758772, 0.58991228, 0.58991228, 0.5877193 ,
       0.58552632, 0.60526316, 0.59758772, 0.59868421, 0.59758772,
       0.59100877, 0.59320175, 0.58991228, 0.59758772, 0.59320175,
       0.59429825, 0.59100877, 0.58881579, 0.59210526, 0.59100877,
       0.60087719, 0.59100877, 0.58662281, 0.58881579, 0.58881579,
       0.5997807 , 0.58552632, 0.59429825, 0.58552632, 0.5997807 ,
       0.59100877, 0.5997807 , 0.60745614, 0.5877193 , 0.60416667,
       0.5877193 , 0.59100877, 0.60635965, 0.58991228, 0.59210526,
       0.57894737, 0.58991228, 0.59320175, 0.58662281, 0.59868421,
       0.58881579, 0.59758772, 0.59100877, 0.59100877, 0.59100877,
       0.60416667, 0.58881579, 0.5997807 , 0.59868421, 0.59100877,
       0.59868421, 0.59429825, 0.60416667, 0.60526316, 0.5877193 ,
       0.60526316, 0.61403509, 0.58991228, 0.60087719, 0.60635965,
       0.59320175, 0.57675439, 0.60635965, 0.59539474, 0.57675439,
       0.59320175, 0.5877193 , 0.5745614 , 0.58223684, 0.58552632,
       0.60197368, 0.5877193 , 0.59429825, 0.5877193 , 0.60526316,
       0.60416667, 0.57675439, 0.59100877, 0.58881579, 0.58881579,
       0.58552632, 0.58881579, 0.59539474, 0.59758772, 0.59320175,
       0.58442982, 0.60197368, 0.58881579, 0.60307018, 0.57346491,
       0.59100877, 0.59100877, 0.59539474, 0.59100877, 0.58114035,
       0.59100877, 0.59539474, 0.59100877, 0.58662281, 0.60197368,
       0.59320175, 0.59320175, 0.60087719, 0.58881579, 0.60526316,
       0.60745614, 0.59539474, 0.58881579, 0.5877193 , 0.5877193 ,
       0.58552632, 0.58442982, 0.58004386, 0.58991228, 0.59758772,
       0.59539474, 0.59539474, 0.58114035, 0.58442982, 0.59758772,
       0.59100877, 0.60526316, 0.58662281, 0.58442982, 0.59100877,
       0.58991228, 0.59649123, 0.58881579, 0.5997807 , 0.58442982,
       0.59100877, 0.58333333, 0.59429825, 0.60416667, 0.59320175,
       0.60087719, 0.59758772, 0.61403509, 0.58662281, 0.59758772,
       0.60197368, 0.59649123, 0.58881579, 0.59100877, 0.58552632,
       0.59210526, 0.59210526, 0.58442982, 0.59100877, 0.59100877,
       0.57785088, 0.58442982, 0.58991228, 0.5997807 , 0.60526316,
       0.5997807 , 0.5877193 , 0.59539474, 0.60087719, 0.60197368,
       0.59100877, 0.60964912, 0.59100877, 0.58333333, 0.58881579,
       0.58223684, 0.5877193 , 0.5877193 , 0.61622807, 0.59758772,
       0.58552632, 0.59539474, 0.59210526, 0.59210526, 0.58223684,
       0.60745614, 0.57894737, 0.5877193 , 0.58552632, 0.58223684,
       0.58881579, 0.5877193 , 0.59429825, 0.60197368, 0.58662281,
       0.58662281, 0.60526316, 0.59320175, 0.57785088, 0.58662281,
       0.59758772, 0.57894737, 0.59649123, 0.58991228, 0.59100877,
       0.59100877, 0.58223684, 0.57894737, 0.59210526, 0.58662281,
       0.60307018, 0.58223684, 0.57894737, 0.58881579, 0.58881579,
       0.59429825, 0.58442982, 0.58223684, 0.59649123, 0.59758772,
       0.58333333, 0.61074561, 0.58333333, 0.58881579, 0.59320175,
       0.60416667, 0.59758772, 0.59210526, 0.58881579, 0.59100877,
       0.58881579, 0.60526316, 0.58991228, 0.60087719, 0.58442982,
       0.59539474, 0.59429825, 0.59100877, 0.58662281, 0.57785088,
       0.58881579, 0.58223684, 0.59429825, 0.5997807 , 0.58991228,
       0.59429825, 0.58662281, 0.60416667, 0.58662281, 0.58662281,
       0.58442982, 0.58662281, 0.58552632, 0.5997807 , 0.59868421,
       0.5877193 , 0.58552632, 0.59649123, 0.5877193 , 0.59429825,
       0.59100877, 0.61184211, 0.59539474, 0.58991228, 0.59320175,
       0.58114035, 0.58442982, 0.58881579, 0.59100877, 0.58662281,
       0.59649123, 0.58662281, 0.59539474, 0.5877193 , 0.58223684,
       0.59100877, 0.58881579, 0.5877193 , 0.60087719, 0.58223684,
       0.58662281, 0.60307018, 0.59649123, 0.58662281, 0.59649123,
       0.59868421, 0.59429825, 0.59539474, 0.59429825, 0.58991228,
       0.60307018, 0.58114035, 0.59320175, 0.59100877, 0.58991228,
       0.59649123, 0.5877193 , 0.58881579, 0.60197368, 0.58442982,
       0.58991228, 0.59100877, 0.60197368, 0.58991228, 0.59868421,
       0.5997807 , 0.59100877, 0.59649123, 0.58991228, 0.59429825,
       0.59429825, 0.58881579, 0.59320175, 0.59429825, 0.58881579,
       0.59539474, 0.58004386, 0.5877193 , 0.59100877, 0.58662281,
       0.59868421, 0.59100877, 0.60526316, 0.5997807 , 0.59539474,
       0.59210526, 0.60307018, 0.60307018, 0.59100877, 0.58442982,
       0.59100877, 0.59100877, 0.58881579, 0.60855263, 0.57894737,
       0.59100877, 0.60745614, 0.58552632, 0.59320175, 0.59429825,
       0.60635965, 0.60745614, 0.58442982, 0.58442982, 0.58552632,
       0.59320175, 0.59210526, 0.59649123, 0.57675439, 0.59100877,
       0.59539474, 0.59100877, 0.58662281, 0.58662281, 0.58662281,
       0.59100877, 0.59429825, 0.58991228, 0.58662281, 0.59210526,
       0.59649123, 0.58881579, 0.59320175, 0.59100877, 0.59100877,
       0.59100877, 0.5877193 , 0.60087719, 0.58662281, 0.59210526,
       0.57894737, 0.58991228, 0.58442982, 0.59539474, 0.59868421,
       0.58552632, 0.58662281, 0.60526316, 0.59868421, 0.59758772,
       0.58662281, 0.58552632, 0.58552632, 0.58662281, 0.60087719,
       0.58552632, 0.5877193 , 0.58442982, 0.59868421, 0.60416667,
       0.59100877, 0.58114035, 0.58552632, 0.59758772, 0.59210526,
       0.61622807, 0.59210526, 0.59100877, 0.58662281, 0.58552632,
       0.59210526, 0.59100877, 0.58881579, 0.59429825, 0.58333333,
       0.58442982, 0.59320175, 0.59320175, 0.60307018, 0.59868421,
       0.58991228, 0.59868421, 0.58223684, 0.59539474, 0.58662281,
       0.59210526, 0.58662281, 0.59100877, 0.59649123, 0.58662281,
       0.59210526, 0.5877193 , 0.59100877, 0.59100877, 0.58662281,
       0.60526316, 0.58552632, 0.58991228, 0.59320175, 0.59429825,
       0.58881579, 0.57565789, 0.60307018, 0.58333333, 0.58442982,
       0.58881579, 0.60197368, 0.58333333, 0.59100877, 0.58881579,
       0.58004386, 0.58881579, 0.59100877, 0.59100877, 0.58442982,
       0.58991228, 0.58333333, 0.59100877, 0.58881579, 0.59100877,
       0.58114035, 0.59100877, 0.59210526, 0.58881579, 0.59210526,
       0.58552632, 0.5877193 , 0.57127193, 0.59429825, 0.58442982,
       0.58552632, 0.60087719, 0.58223684, 0.59210526, 0.58881579,
       0.58552632, 0.58881579, 0.58881579, 0.58991228, 0.60307018,
       0.58881579, 0.59868421, 0.59758772, 0.58662281, 0.59649123,
       0.58552632, 0.59100877, 0.59758772, 0.59100877, 0.58991228,
       0.60745614, 0.5997807 , 0.59100877, 0.59100877, 0.60197368,
       0.57236842, 0.57565789, 0.60197368, 0.58881579, 0.60087719]), 'param_n_estimators': masked_array(data=[360, 480, 180, 490, 410, 110, 370, 310, 120, 330, 370,
                   330, 470, 140, 120, 470, 290, 150, 450, 290, 170, 320,
                   180, 160, 50, 110, 450, 370, 290, 220, 110, 130, 140,
                   20, 90, 150, 60, 160, 200, 210, 440, 220, 480, 280,
                   300, 480, 220, 370, 90, 130, 470, 120, 20, 110, 90,
                   400, 70, 180, 290, 300, 290, 30, 240, 440, 330, 230,
                   10, 380, 410, 310, 190, 430, 330, 470, 450, 90, 170,
                   100, 120, 40, 430, 100, 270, 380, 240, 460, 430, 350,
                   60, 370, 280, 450, 170, 160, 140, 490, 170, 310, 480,
                   60, 160, 440, 450, 330, 40, 160, 280, 340, 140, 400,
                   390, 450, 360, 200, 100, 370, 40, 130, 330, 280, 200,
                   120, 380, 410, 30, 50, 380, 270, 400, 90, 120, 260,
                   240, 230, 370, 160, 240, 10, 140, 90, 50, 400, 470, 40,
                   360, 330, 90, 40, 110, 190, 120, 410, 180, 320, 120,
                   160, 310, 20, 60, 220, 260, 280, 140, 250, 180, 120,
                   110, 390, 50, 190, 400, 190, 30, 270, 210, 250, 150,
                   220, 90, 100, 260, 70, 490, 30, 40, 160, 420, 220, 20,
                   260, 320, 250, 90, 310, 140, 180, 270, 140, 110, 150,
                   150, 290, 170, 50, 420, 440, 330, 200, 140, 340, 40,
                   110, 150, 240, 420, 190, 360, 90, 10, 90, 130, 380,
                   310, 300, 430, 240, 470, 260, 90, 260, 270, 40, 110,
                   90, 40, 200, 220, 200, 280, 220, 480, 190, 490, 20,
                   470, 230, 410, 120, 250, 200, 270, 460, 240, 330, 370,
                   210, 140, 230, 150, 220, 40, 180, 210, 410, 30, 150,
                   190, 210, 220, 430, 460, 180, 380, 320, 420, 180, 180,
                   240, 50, 50, 270, 10, 470, 50, 450, 120, 250, 140, 10,
                   260, 290, 270, 330, 30, 390, 470, 120, 120, 430, 210,
                   370, 320, 100, 110, 200, 140, 170, 210, 390, 290, 200,
                   280, 150, 440, 40, 270, 310, 300, 250, 400, 220, 30,
                   470, 20, 170, 130, 210, 190, 340, 70, 160, 370, 470,
                   460, 450, 490, 100, 30, 230, 320, 150, 160, 110, 430,
                   430, 10, 300, 460, 370, 280, 210, 200, 360, 310, 360,
                   470, 420, 400, 220, 330, 250, 120, 430, 10, 20, 240,
                   490, 20, 110, 350, 320, 140, 90, 150, 240, 160, 410,
                   280, 20, 330, 490, 170, 280, 160, 420, 150, 350, 430,
                   170, 320, 10, 110, 350, 80, 130, 270, 20, 250, 190,
                   360, 340, 100, 280, 80, 470, 420, 290, 440, 470, 480,
                   320, 170, 210, 60, 20, 220, 180, 430, 170, 150, 80,
                   330, 40, 300, 450, 290, 480, 60, 290, 330, 90, 190,
                   130, 110, 410, 10, 420, 290, 160, 480, 110, 60, 270,
                   480, 450, 160, 120, 30, 400, 240, 30, 400, 470, 440,
                   490, 360, 50, 10, 290, 60, 10, 320, 410, 280, 300, 450,
                   330, 290, 250, 440, 270, 310, 150, 30, 300, 60, 220,
                   240, 330, 50, 440, 270, 100, 400, 360, 420, 340, 490,
                   240, 140, 470, 310, 490, 90, 200, 130, 310, 470, 20,
                   100],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'std_score_time': array([5.15887575e-04, 1.81913324e-04, 1.01336279e-04, 1.83210161e-04,
       1.25812962e-02, 1.66955701e-04, 6.87726628e-04, 5.95021076e-04,
       2.23955506e-04, 7.48187900e-04, 4.35612660e-04, 3.54562034e-04,
       2.76918227e-04, 4.32987103e-04, 1.41265953e-04, 7.08895619e-04,
       8.41379560e-04, 7.05020048e-04, 5.05774408e-04, 5.50193920e-04,
       4.24501243e-04, 1.06024241e-04, 5.99129439e-05, 1.85615903e-04,
       2.18984866e-05, 1.50402256e-04, 2.09321284e-04, 7.05694673e-03,
       1.37224508e-03, 7.98638968e-04, 5.63765668e-04, 7.02921868e-04,
       8.62241318e-04, 9.28880334e-05, 1.57713765e-04, 2.83871092e-04,
       1.77777892e-04, 4.75557677e-04, 2.17359913e-04, 2.05465118e-04,
       8.24028706e-03, 2.01697922e-04, 1.52505596e-03, 6.98965649e-04,
       6.28074850e-04, 1.10263169e-03, 6.90814732e-04, 5.14882903e-04,
       3.36806748e-04, 7.32197245e-04, 8.45508008e-04, 3.38810222e-04,
       8.78919528e-05, 2.61560165e-04, 6.15955167e-05, 1.56563994e-04,
       2.92528294e-04, 1.35838513e-03, 3.52279638e-04, 6.01378318e-04,
       1.05525127e-03, 1.17260151e-04, 2.75152693e-04, 1.13130627e-03,
       8.33171053e-04, 7.73085795e-04, 1.26910817e-04, 1.99670165e-03,
       8.68065192e-04, 8.40437549e-04, 1.47460986e-04, 9.94681137e-04,
       2.40452462e-04, 1.22423347e-03, 1.48107015e-03, 5.49231074e-04,
       1.72868501e-03, 5.51650974e-04, 4.77236594e-04, 6.05258746e-05,
       1.69399081e-03, 5.58301936e-04, 8.85113925e-04, 2.07563965e-03,
       1.93687302e-03, 2.16652170e-03, 1.27602644e-03, 8.73016313e-04,
       3.31606695e-04, 1.22198480e-03, 3.82843739e-04, 1.22968853e-03,
       3.44081562e-04, 2.56231050e-04, 1.94135231e-04, 5.60080410e-04,
       2.06756186e-04, 2.12346246e-04, 7.72512473e-04, 3.41639173e-04,
       4.54423657e-04, 1.26975198e-04, 1.22785195e-03, 1.29909468e-03,
       9.60512941e-05, 6.45331796e-04, 1.94214239e-04, 7.66699758e-04,
       6.11226079e-04, 4.85814036e-04, 4.88330853e-04, 1.29810612e-03,
       2.01788347e-03, 1.02623223e-03, 7.32817606e-04, 7.50410251e-03,
       2.77227285e-04, 6.25686761e-04, 1.51759945e-03, 6.89681805e-04,
       5.24288726e-04, 5.66423449e-04, 2.16292706e-03, 2.09262502e-03,
       4.32234466e-05, 5.01617594e-04, 2.57266488e-03, 5.43135536e-04,
       5.23424013e-04, 4.81913186e-04, 3.03364031e-04, 4.28459127e-04,
       6.70650175e-05, 1.10252827e-03, 3.07389634e-03, 2.95353075e-04,
       1.45914797e-03, 7.09321875e-05, 3.63536364e-04, 3.39273036e-04,
       3.09891961e-04, 1.20698384e-03, 1.55873203e-03, 6.44237217e-05,
       7.75325130e-04, 6.87612225e-04, 5.76106429e-05, 2.98347170e-04,
       4.16590939e-05, 1.15172759e-03, 2.99668981e-04, 7.13729112e-05,
       4.91205783e-04, 4.14471726e-04, 7.75688275e-04, 2.80304032e-04,
       8.29622942e-04, 4.93230106e-05, 1.57763575e-04, 3.92279951e-04,
       9.23019012e-04, 7.17676226e-04, 7.30522653e-04, 1.76100473e-03,
       8.03427981e-04, 1.99640253e-04, 6.62557763e-04, 8.42542886e-04,
       1.40281777e-04, 5.11859512e-05, 4.38608560e-04, 5.08940086e-04,
       2.63646346e-05, 7.79415493e-04, 1.16727517e-03, 7.38999666e-04,
       6.28158621e-04, 1.64352389e-03, 6.35193641e-04, 5.54698278e-04,
       4.11096749e-04, 2.35154780e-04, 7.55403733e-04, 1.82028417e-04,
       1.17450670e-04, 4.44107552e-04, 4.16248296e-04, 7.93063780e-04,
       5.47997496e-05, 6.05302541e-04, 7.24844868e-04, 5.33591682e-04,
       1.87241734e-04, 1.00379343e-03, 1.05618283e-03, 1.57042896e-03,
       1.03080410e-03, 4.73161932e-04, 7.58405723e-04, 1.11142674e-04,
       8.62691250e-04, 2.00421475e-03, 6.40290780e-04, 3.41389783e-04,
       7.95772598e-04, 7.55498808e-04, 1.58150037e-03, 3.82926811e-04,
       7.86466664e-04, 4.27664245e-04, 3.49609989e-04, 5.98946710e-04,
       3.97647169e-04, 2.46744301e-04, 3.07433399e-03, 4.67348380e-04,
       1.61132572e-03, 3.64733796e-04, 8.49748106e-05, 2.95810176e-04,
       1.03997534e-03, 1.02005834e-03, 4.81570631e-04, 1.07520406e-04,
       5.06477274e-04, 6.12061961e-04, 9.66342635e-04, 1.14881346e-03,
       3.19725290e-04, 1.28351591e-03, 4.52343866e-04, 1.54435746e-04,
       3.07367467e-04, 2.59075501e-04, 2.62472833e-04, 8.00354571e-04,
       1.44150502e-03, 1.75549377e-04, 2.13768215e-03, 5.66503114e-04,
       4.75416491e-04, 2.17565543e-04, 1.65692314e-03, 4.38985230e-05,
       1.04622190e-03, 1.22359921e-03, 7.26951250e-04, 2.11784152e-04,
       8.56050451e-04, 8.90758933e-04, 1.42195549e-03, 1.00681288e-03,
       5.62673740e-04, 1.03347100e-03, 1.36506865e-03, 7.68694538e-04,
       9.09804722e-04, 5.91945314e-04, 4.14307026e-04, 3.16327120e-04,
       1.71452965e-04, 3.35428647e-04, 1.29694426e-03, 3.92027985e-03,
       2.46953341e-04, 3.99987763e-04, 7.52902645e-04, 1.06304866e-03,
       2.21466549e-04, 3.14571620e-03, 2.75407294e-03, 1.42469554e-03,
       1.76842092e-03, 1.75354463e-03, 1.76626277e-03, 2.85663953e-04,
       1.07775842e-03, 5.73027159e-03, 5.03225248e-04, 2.78924898e-04,
       6.86332687e-04, 5.41758971e-05, 4.64069419e-04, 3.46985513e-04,
       6.85720691e-04, 6.07240976e-04, 7.40107834e-05, 2.59835855e-04,
       9.77553003e-05, 4.78744665e-05, 6.82140911e-04, 1.18189737e-03,
       1.11081457e-02, 1.81017438e-04, 2.06124443e-03, 1.73620288e-03,
       4.30456644e-04, 7.78122036e-04, 5.89746571e-04, 6.99299815e-04,
       8.02713266e-04, 1.27169495e-03, 3.74621877e-04, 6.42910227e-04,
       5.32319881e-04, 9.83637360e-04, 1.07324577e-03, 8.21354377e-04,
       7.51403436e-04, 9.77061956e-04, 2.57589941e-04, 3.16093366e-04,
       4.83012636e-04, 1.69798392e-03, 3.26546679e-04, 1.08487061e-03,
       1.55437861e-03, 6.59968323e-04, 1.13743409e-03, 1.87901372e-03,
       8.30993539e-04, 3.76592357e-05, 5.70279986e-02, 3.13342852e-05,
       1.14922959e-03, 1.10792887e-03, 1.52780522e-03, 1.37313941e-03,
       1.34496563e-03, 3.39054710e-04, 4.19869988e-04, 1.14130690e-03,
       1.37836270e-03, 1.67013283e-03, 3.50662430e-03, 1.75244449e-04,
       8.46850584e-04, 9.65458856e-05, 9.50051267e-04, 1.67255112e-03,
       1.17204149e-03, 3.34984147e-04, 7.46743034e-03, 1.23127546e-03,
       9.05908454e-04, 1.35655353e-04, 1.22278774e-02, 1.28265273e-03,
       2.30883848e-03, 1.84036991e-03, 1.55750585e-05, 7.73422823e-04,
       3.10835352e-04, 1.64166837e-03, 1.41913735e-03, 2.91088212e-03,
       3.39375669e-04, 3.37894391e-03, 9.31942623e-04, 2.13616648e-03,
       1.49434095e-03, 6.94434712e-04, 6.08845339e-04, 9.40712288e-05,
       1.28043035e-04, 9.37454988e-04, 2.38247028e-03, 1.44668854e-04,
       4.76251972e-04, 1.98997047e-03, 3.08780074e-03, 1.14161273e-03,
       6.34103156e-04, 7.71477234e-05, 2.20155715e-04, 9.19221360e-04,
       5.11939056e-04, 1.03962712e-04, 6.79525018e-05, 8.87125361e-03,
       5.59145344e-04, 6.79321444e-04, 8.48351265e-04, 7.59119822e-04,
       1.53075665e-03, 1.92740675e-04, 1.59036062e-03, 2.42006093e-04,
       9.80922635e-04, 8.64227729e-04, 3.60689480e-05, 7.10996272e-04,
       1.07181972e-03, 4.05186762e-04, 2.62214363e-04, 3.21329797e-03,
       2.32188634e-05, 1.43949462e-03, 1.69834854e-03, 2.76171629e-04,
       8.08639210e-04, 8.70765501e-04, 4.47630330e-04, 7.05183638e-04,
       2.59979858e-03, 1.66893539e-03, 1.01544210e-03, 3.24239575e-03,
       1.87894205e-03, 3.05734574e-03, 2.78346314e-03, 5.24750440e-04,
       1.23381250e-04, 2.49929092e-04, 1.87301767e-04, 1.56948136e-03,
       2.11329969e-03, 1.45144490e-03, 8.04171703e-04, 2.51309473e-03,
       8.11177474e-04, 1.43043545e-03, 9.97500584e-05, 1.31704232e-03,
       3.81864204e-03, 2.26074216e-03, 3.28433475e-04, 5.75466604e-04,
       2.18692855e-03, 1.00527600e-03, 6.25856808e-04, 5.78901596e-04,
       5.21244996e-04, 7.65866742e-04, 1.07657145e-03, 4.37848997e-04,
       4.65360589e-04, 1.99331322e-03, 1.64181042e-04, 4.72096494e-04,
       8.54852585e-04, 2.71251686e-04, 6.67349915e-04, 2.32197396e-03,
       8.77894656e-04, 4.84993595e-04, 9.11990510e-04, 1.64675321e-04,
       5.87970799e-04, 9.45918634e-04, 3.48124238e-04, 1.53884085e-03,
       3.59515571e-03, 1.72316143e-03, 1.96026929e-03, 3.20237266e-03,
       2.50179452e-04, 3.98859691e-04, 1.16047629e-04, 1.12750283e-04,
       4.25432997e-05, 8.78458215e-04, 2.63658420e-03, 1.51280676e-03,
       1.88845609e-04, 5.30302950e-04, 2.23576198e-03, 9.55469118e-04,
       4.31942896e-04, 6.76037510e-03, 3.48586227e-03, 3.12617111e-03,
       9.26441165e-04, 7.17693977e-04, 1.90830577e-03, 1.21118724e-04,
       1.45259478e-03, 7.67501760e-04, 5.56074058e-04, 2.48587319e-04,
       3.29441991e-03, 2.25457864e-03, 1.75324359e-03, 5.63538221e-04,
       1.91247486e-03, 4.71120940e-03, 3.59010282e-03, 5.00618701e-04,
       2.65411195e-03, 3.16729389e-04, 7.49973793e-03, 1.78107084e-03,
       3.30113763e-03, 1.04546425e-03, 2.55386254e-04, 2.71374483e-03,
       1.99308046e-02, 2.85246365e-03, 1.14663887e-04, 1.54040064e-03]), 'split2_train_score': array([0.59934319, 0.59605911, 0.62561576, 0.59770115, 0.67323481,
       0.68801314, 0.63054187, 0.61247947, 0.64367816, 0.65681445,
       0.68472906, 0.59934319, 0.69622332, 0.59277504, 0.68308703,
       0.71264368, 0.70279146, 0.67487685, 0.60262726, 0.65353038,
       0.60755337, 0.69458128, 0.68965517, 0.68965517, 0.66666667,
       0.591133  , 0.69622332, 0.89162562, 0.68472906, 0.87520525,
       0.61576355, 0.591133  , 0.61083744, 0.61740558, 0.591133  ,
       0.69786535, 0.64367816, 0.6091954 , 0.64860427, 0.59277504,
       0.6683087 , 0.62397373, 0.68472906, 0.59605911, 0.70607553,
       0.69458128, 0.66502463, 0.66995074, 0.6272578 , 0.6863711 ,
       0.6091954 , 0.591133  , 0.7044335 , 0.63218391, 0.68965517,
       0.6272578 , 0.60262726, 0.69129721, 0.71921182, 0.68472906,
       0.59770115, 0.67980296, 0.71592775, 0.591133  , 0.69786535,
       0.69950739, 0.65517241, 0.71100164, 0.7635468 , 0.69786535,
       0.67159278, 0.66995074, 0.68308703, 0.69786535, 0.59605911,
       0.73399015, 0.71756979, 0.71100164, 0.70935961, 0.74220033,
       0.6863711 , 0.72085386, 0.65353038, 0.69786535, 0.73727422,
       0.65353038, 0.62397373, 0.63546798, 0.72577997, 0.60591133,
       0.68472906, 0.59605911, 0.71756979, 0.59770115, 0.7454844 ,
       0.65681445, 0.63711002, 0.60098522, 0.61083744, 0.68472906,
       0.6683087 , 0.63546798, 0.70114943, 0.69458128, 0.69293924,
       0.59277504, 0.67159278, 0.77175698, 0.7044335 , 0.63711002,
       0.60426929, 0.591133  , 0.82430213, 0.69293924, 0.71428571,
       0.59770115, 0.67816092, 0.591133  , 0.59770115, 0.75533662,
       0.66338259, 0.70935961, 0.7865353 , 0.6091954 , 0.68144499,
       0.67487685, 0.64860427, 0.59770115, 0.59770115, 0.60098522,
       0.59770115, 0.62561576, 0.64039409, 0.80952381, 0.71921182,
       0.69786535, 0.78325123, 0.61412151, 0.60098522, 0.68144499,
       0.69293924, 0.68308703, 0.61576355, 0.59770115, 0.75369458,
       0.591133  , 0.68144499, 0.60262726, 0.6683087 , 0.59770115,
       0.591133  , 0.63054187, 0.73727422, 0.6863711 , 0.72906404,
       0.68965517, 0.75862069, 0.66666667, 0.66666667, 0.71428571,
       0.67159278, 0.68308703, 0.72085386, 0.61247947, 0.727422  ,
       0.68801314, 0.63546798, 0.61740558, 0.591133  , 0.591133  ,
       0.61740558, 0.59605911, 0.60591133, 0.70279146, 0.69129721,
       0.73234811, 0.61412151, 0.67159278, 0.75533662, 0.69786535,
       0.65845649, 0.66009852, 0.65188834, 0.59441708, 0.59605911,
       0.61083744, 0.63711002, 0.59770115, 0.67323481, 0.68965517,
       0.65517241, 0.69622332, 0.65681445, 0.70114943, 0.63218391,
       0.65517241, 0.63382594, 0.69622332, 0.60262726, 0.63875205,
       0.66995074, 0.59605911, 0.68965517, 0.69950739, 0.59605911,
       0.59934319, 0.67651888, 0.60262726, 0.66995074, 0.59770115,
       0.70114943, 0.62397373, 0.65024631, 0.591133  , 0.591133  ,
       0.591133  , 0.64203612, 0.69950739, 0.61904762, 0.61576355,
       0.70935961, 0.63711002, 0.61740558, 0.60098522, 0.59605911,
       0.6453202 , 0.60426929, 0.61740558, 0.68144499, 0.68965517,
       0.62889984, 0.69786535, 0.63054187, 0.77011494, 0.61083744,
       0.7044335 , 0.69129721, 0.77339901, 0.64860427, 0.591133  ,
       0.59441708, 0.68801314, 0.69458128, 0.66174056, 0.60098522,
       0.60591133, 0.73891626, 0.65188834, 0.59277504, 0.62889984,
       0.68144499, 0.62233169, 0.72413793, 0.82922824, 0.68472906,
       0.75041051, 0.59277504, 0.69293924, 0.59770115, 0.61083744,
       0.67816092, 0.67980296, 0.59605911, 0.6863711 , 0.7865353 ,
       0.67487685, 0.59934319, 0.68144499, 0.60098522, 0.77832512,
       0.591133  , 0.81116585, 0.64696223, 0.60591133, 0.69458128,
       0.61904762, 0.59770115, 0.60426929, 0.61247947, 0.72085386,
       0.69458128, 0.59277504, 0.65024631, 0.59277504, 0.63875205,
       0.591133  , 0.59605911, 0.61412151, 0.727422  , 0.73891626,
       0.727422  , 0.68144499, 0.65024631, 0.65353038, 0.75862069,
       0.71264368, 0.61412151, 0.75369458, 0.60591133, 0.59934319,
       0.68144499, 0.64039409, 0.63711002, 0.61904762, 0.61247947,
       0.69950739, 0.7044335 , 0.59277504, 0.68308703, 0.59605911,
       0.591133  , 0.60591133, 0.67980296, 0.59605911, 0.68801314,
       0.68801314, 0.591133  , 0.70279146, 0.69622332, 0.70935961,
       0.77668309, 0.6091954 , 0.73234811, 0.63875205, 0.59934319,
       0.60591133, 0.61740558, 0.59934319, 0.591133  , 0.59770115,
       0.76683087, 0.591133  , 0.69786535, 0.69458128, 0.81937603,
       0.68965517, 0.71428571, 0.66009852, 0.591133  , 0.59441708,
       0.591133  , 0.7044335 , 0.60426929, 0.69950739, 0.63875205,
       0.59770115, 0.67816092, 0.72249589, 0.78489327, 0.69622332,
       0.68965517, 0.69129721, 0.6453202 , 0.62561576, 0.6453202 ,
       0.60262726, 0.727422  , 0.64860427, 0.63711002, 0.60426929,
       0.6863711 , 0.591133  , 0.59770115, 0.59277504, 0.591133  ,
       0.591133  , 0.69622332, 0.64860427, 0.61247947, 0.60591133,
       0.69293924, 0.59277504, 0.6683087 , 0.591133  , 0.591133  ,
       0.591133  , 0.60098522, 0.68308703, 0.591133  , 0.65353038,
       0.63711002, 0.70114943, 0.64367816, 0.78817734, 0.68308703,
       0.62889984, 0.60755337, 0.68144499, 0.69622332, 0.7454844 ,
       0.60755337, 0.61904762, 0.59441708, 0.59934319, 0.68308703,
       0.727422  , 0.60755337, 0.60755337, 0.71592775, 0.70279146,
       0.591133  , 0.62561576, 0.59277504, 0.727422  , 0.60262726,
       0.71264368, 0.60262726, 0.591133  , 0.63711002, 0.59605911,
       0.59770115, 0.591133  , 0.66174056, 0.60755337, 0.59770115,
       0.63546798, 0.69622332, 0.67980296, 0.73234811, 0.69950739,
       0.63546798, 0.69622332, 0.61083744, 0.69458128, 0.59605911,
       0.67487685, 0.71428571, 0.62889984, 0.70607553, 0.59770115,
       0.60426929, 0.59934319, 0.591133  , 0.591133  , 0.61740558,
       0.69786535, 0.64203612, 0.60262726, 0.67980296, 0.72249589,
       0.64039409, 0.78817734, 0.69786535, 0.60426929, 0.63546798,
       0.61083744, 0.72249589, 0.591133  , 0.64203612, 0.61576355,
       0.67159278, 0.59277504, 0.591133  , 0.59277504, 0.61740558,
       0.59277504, 0.61412151, 0.591133  , 0.6453202 , 0.591133  ,
       0.60262726, 0.60098522, 0.76026273, 0.60098522, 0.59770115,
       0.62889984, 0.60098522, 0.63546798, 0.78981938, 0.61247947,
       0.72249589, 0.71921182, 0.62889984, 0.72085386, 0.6863711 ,
       0.6272578 , 0.59441708, 0.59277504, 0.591133  , 0.70607553,
       0.59605911, 0.75205255, 0.70279146, 0.61247947, 0.66174056,
       0.59770115, 0.591133  , 0.70279146, 0.591133  , 0.59934319,
       0.75041051, 0.71592775, 0.591133  , 0.74384236, 0.75862069,
       0.73399015, 0.63875205, 0.73234811, 0.59770115, 0.67816092]), 'rank_test_score': array([274, 368, 470, 368, 171, 274, 449, 302, 490,   9,  73, 368,  49,
       274,  49, 302, 100, 274, 274, 344, 404,  20, 100,  86, 100, 212,
       171, 274, 100, 171, 150, 212, 302, 192, 212,  62, 212, 368, 302,
       302,  73, 404, 150, 404,  73, 212,  73,   9, 344,  32, 344, 212,
        16, 274, 192, 480, 274, 171, 368,  86, 302, 100, 212, 212, 212,
        32, 302,  73,  86, 212,  86, 150,  32,  20, 344,  20,   3, 274,
        62,  16, 171, 490,  16, 132, 490, 171, 344, 497, 458, 404,  49,
       344, 150, 344,  20,  32, 490, 212, 302, 302, 404, 302, 132, 100,
       171, 428,  49, 302,  40, 498, 212, 212, 132, 212, 470, 212, 132,
       212, 368,  49, 171, 171,  62, 302,  20,   9, 132, 302, 344, 344,
       404, 428, 477, 274, 100, 132, 132, 470, 428, 100, 212,  20, 368,
       428, 212, 274, 118, 302,  73, 428, 212, 449, 150,  32, 171,  62,
       100,   3, 368, 100,  49, 118, 302, 212, 404, 192, 192, 428, 212,
       212, 487, 428, 274,  73,  20,  73, 344, 132,  62,  49, 212,   7,
       212, 449, 302, 458, 344, 344,   1, 100, 404, 132, 192, 192, 458,
         9, 480, 344, 404, 458, 302, 344, 150,  49, 368, 368,  20, 171,
       487, 368, 100, 480, 118, 274, 212, 212, 458, 480, 192, 368,  40,
       458, 480, 302, 302, 150, 428, 458, 118, 100, 449,   6, 449, 302,
       171,  32, 100, 192, 302, 212, 302,  20, 274,  62, 428, 132, 150,
       212, 368, 487, 302, 458, 150,  73, 274, 150, 368,  32, 368, 368,
       428, 368, 404,  73,  86, 344, 404, 118, 344, 150, 212,   5, 132,
       274, 171, 470, 428, 302, 212, 368, 118, 368, 132, 344, 458, 212,
       302, 344,  62, 458, 368,  40, 118, 368, 118,  86, 150, 132, 150,
       274,  40, 470, 171, 212, 274, 118, 344, 302,  49, 428, 274, 212,
        49, 274,  86,  73, 212, 118, 274, 150, 150, 302, 171, 150, 302,
       132, 477, 344, 212, 368,  86, 212,  20,  73, 132, 192,  40,  40,
       212, 428, 212, 212, 302,   8, 480, 212,   9, 404, 171, 150,  16,
         9, 428, 428, 404, 171, 192, 118, 490, 212, 132, 212, 368, 368,
       368, 212, 150, 274, 368, 192, 118, 302, 171, 212, 212, 212, 344,
        62, 368, 192, 480, 274, 428, 132,  86, 404, 368,  20,  86, 100,
       368, 404, 404, 368,  62, 404, 344, 428,  86,  32, 212, 470, 404,
       100, 192,   1, 192, 212, 368, 404, 192, 212, 302, 150, 449, 428,
       171, 171,  40,  86, 274,  86, 458, 132, 368, 192, 368, 212, 118,
       368, 192, 344, 212, 212, 368,  20, 404, 274, 171, 150, 302, 495,
        40, 449, 428, 302,  49, 449, 212, 302, 477, 302, 212, 212, 428,
       274, 449, 212, 302, 212, 470, 212, 192, 302, 192, 404, 344, 500,
       150, 428, 404,  62, 458, 192, 302, 404, 302, 302, 274,  40, 302,
        86, 100, 368, 118, 404, 212, 100, 212, 274,   9,  73, 212, 212,
        49, 499, 495,  49, 302,  62], dtype=int32), 'param_criterion': masked_array(data=['entropy', 'entropy', 'gini', 'entropy', 'entropy',
                   'gini', 'entropy', 'entropy', 'entropy', 'gini',
                   'entropy', 'gini', 'entropy', 'entropy', 'entropy',
                   'entropy', 'entropy', 'entropy', 'entropy', 'gini',
                   'gini', 'entropy', 'entropy', 'entropy', 'gini',
                   'gini', 'gini', 'gini', 'gini', 'gini', 'gini',
                   'entropy', 'entropy', 'gini', 'gini', 'entropy',
                   'gini', 'gini', 'entropy', 'gini', 'gini', 'gini',
                   'entropy', 'entropy', 'gini', 'gini', 'gini', 'gini',
                   'gini', 'entropy', 'entropy', 'gini', 'entropy',
                   'entropy', 'gini', 'entropy', 'gini', 'entropy',
                   'entropy', 'entropy', 'gini', 'entropy', 'gini',
                   'gini', 'entropy', 'gini', 'gini', 'entropy',
                   'entropy', 'gini', 'gini', 'gini', 'entropy', 'gini',
                   'gini', 'gini', 'gini', 'gini', 'gini', 'entropy',
                   'gini', 'entropy', 'gini', 'entropy', 'entropy',
                   'entropy', 'entropy', 'entropy', 'entropy', 'gini',
                   'entropy', 'entropy', 'gini', 'entropy', 'entropy',
                   'entropy', 'entropy', 'gini', 'gini', 'gini',
                   'entropy', 'gini', 'entropy', 'entropy', 'gini',
                   'gini', 'entropy', 'gini', 'entropy', 'gini', 'gini',
                   'entropy', 'entropy', 'entropy', 'entropy', 'entropy',
                   'entropy', 'entropy', 'gini', 'gini', 'gini', 'gini',
                   'entropy', 'entropy', 'gini', 'gini', 'entropy',
                   'entropy', 'entropy', 'gini', 'entropy', 'entropy',
                   'entropy', 'entropy', 'gini', 'gini', 'entropy',
                   'entropy', 'entropy', 'gini', 'gini', 'entropy',
                   'gini', 'entropy', 'gini', 'gini', 'gini', 'entropy',
                   'gini', 'gini', 'gini', 'entropy', 'entropy',
                   'entropy', 'gini', 'entropy', 'gini', 'gini',
                   'entropy', 'gini', 'entropy', 'entropy', 'gini',
                   'gini', 'gini', 'entropy', 'entropy', 'gini',
                   'entropy', 'entropy', 'entropy', 'entropy', 'entropy',
                   'entropy', 'entropy', 'gini', 'entropy', 'entropy',
                   'entropy', 'gini', 'entropy', 'gini', 'gini', 'gini',
                   'entropy', 'entropy', 'gini', 'entropy', 'gini',
                   'entropy', 'entropy', 'gini', 'gini', 'gini', 'gini',
                   'gini', 'gini', 'gini', 'entropy', 'gini', 'entropy',
                   'gini', 'entropy', 'gini', 'entropy', 'entropy',
                   'gini', 'gini', 'entropy', 'entropy', 'gini',
                   'entropy', 'entropy', 'gini', 'gini', 'gini', 'gini',
                   'gini', 'entropy', 'entropy', 'entropy', 'entropy',
                   'gini', 'gini', 'gini', 'gini', 'gini', 'entropy',
                   'gini', 'gini', 'gini', 'gini', 'gini', 'gini',
                   'entropy', 'gini', 'entropy', 'entropy', 'entropy',
                   'entropy', 'gini', 'gini', 'entropy', 'gini', 'gini',
                   'entropy', 'gini', 'entropy', 'gini', 'entropy',
                   'entropy', 'gini', 'gini', 'gini', 'entropy',
                   'entropy', 'gini', 'entropy', 'gini', 'entropy',
                   'entropy', 'entropy', 'gini', 'entropy', 'entropy',
                   'entropy', 'gini', 'entropy', 'gini', 'gini',
                   'entropy', 'gini', 'entropy', 'entropy', 'entropy',
                   'entropy', 'entropy', 'entropy', 'entropy', 'gini',
                   'gini', 'gini', 'entropy', 'entropy', 'entropy',
                   'entropy', 'gini', 'gini', 'gini', 'entropy', 'gini',
                   'gini', 'gini', 'entropy', 'entropy', 'entropy',
                   'gini', 'gini', 'gini', 'entropy', 'gini', 'gini',
                   'gini', 'entropy', 'entropy', 'gini', 'gini', 'gini',
                   'gini', 'gini', 'gini', 'entropy', 'entropy', 'gini',
                   'entropy', 'gini', 'gini', 'entropy', 'entropy',
                   'entropy', 'gini', 'gini', 'entropy', 'entropy',
                   'gini', 'gini', 'entropy', 'entropy', 'entropy',
                   'entropy', 'gini', 'entropy', 'gini', 'entropy',
                   'entropy', 'entropy', 'entropy', 'gini', 'entropy',
                   'entropy', 'gini', 'gini', 'entropy', 'entropy',
                   'entropy', 'entropy', 'gini', 'gini', 'gini', 'gini',
                   'entropy', 'gini', 'gini', 'gini', 'entropy', 'gini',
                   'gini', 'gini', 'gini', 'entropy', 'gini', 'entropy',
                   'gini', 'entropy', 'gini', 'gini', 'gini', 'entropy',
                   'gini', 'entropy', 'entropy', 'entropy', 'gini',
                   'gini', 'entropy', 'gini', 'gini', 'gini', 'entropy',
                   'gini', 'entropy', 'gini', 'gini', 'entropy', 'gini',
                   'entropy', 'entropy', 'gini', 'entropy', 'gini',
                   'entropy', 'entropy', 'gini', 'gini', 'gini', 'gini',
                   'entropy', 'entropy', 'entropy', 'gini', 'gini',
                   'gini', 'entropy', 'gini', 'gini', 'entropy', 'gini',
                   'entropy', 'gini', 'entropy', 'gini', 'entropy',
                   'entropy', 'gini', 'entropy', 'entropy', 'entropy',
                   'gini', 'entropy', 'gini', 'entropy', 'gini', 'gini',
                   'entropy', 'entropy', 'entropy', 'entropy', 'gini',
                   'gini', 'entropy', 'gini', 'entropy', 'entropy',
                   'gini', 'entropy', 'entropy', 'entropy', 'entropy',
                   'gini', 'entropy', 'entropy', 'gini', 'entropy',
                   'entropy', 'entropy', 'entropy', 'gini', 'entropy',
                   'gini', 'entropy', 'entropy', 'gini', 'entropy',
                   'gini', 'gini', 'entropy', 'gini', 'gini', 'entropy',
                   'gini', 'gini', 'gini', 'gini', 'gini', 'entropy',
                   'entropy', 'gini', 'entropy', 'entropy', 'gini',
                   'entropy', 'entropy', 'gini', 'gini', 'entropy',
                   'entropy', 'entropy', 'entropy', 'gini', 'gini',
                   'entropy', 'gini', 'gini', 'entropy', 'gini',
                   'entropy', 'entropy', 'gini', 'entropy', 'gini',
                   'entropy', 'entropy', 'gini', 'gini', 'entropy',
                   'entropy', 'entropy', 'entropy', 'gini', 'entropy'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_oob_score': masked_array(data=[True, False, True, True, False, False, False, False,
                   True, True, True, False, False, False, True, True,
                   True, True, False, False, False, False, False, False,
                   False, False, False, False, False, True, True, False,
                   True, True, True, False, True, False, True, True,
                   False, True, False, True, True, True, True, True,
                   False, True, True, True, True, True, False, False,
                   True, False, False, False, True, True, True, True,
                   True, True, False, False, False, False, False, False,
                   False, True, True, False, True, False, False, False,
                   True, False, True, False, True, False, True, False,
                   True, True, True, False, False, False, True, False,
                   True, False, False, True, True, False, True, False,
                   False, False, True, True, True, True, True, True,
                   False, True, False, False, True, False, False, False,
                   False, False, False, False, False, False, True, False,
                   True, True, True, False, False, False, False, False,
                   False, False, False, True, False, False, False, False,
                   False, True, True, False, False, False, True, False,
                   False, False, False, False, True, False, False, False,
                   True, False, False, False, False, False, True, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, True, False, True, False,
                   False, False, True, True, False, True, False, False,
                   False, False, False, True, False, False, False, False,
                   False, True, True, True, True, True, False, True, True,
                   False, True, False, True, False, False, False, True,
                   True, False, False, False, True, False, True, False,
                   True, True, False, True, True, False, True, True,
                   False, True, True, True, False, True, False, False,
                   True, True, True, False, True, True, True, False, True,
                   False, True, True, False, False, False, False, True,
                   True, False, False, False, True, True, False, False,
                   False, False, True, True, False, True, True, True,
                   False, False, False, True, True, True, True, True,
                   False, False, True, False, False, False, False, True,
                   False, True, True, True, False, True, True, False,
                   True, True, False, False, True, True, True, True, True,
                   True, True, True, True, True, False, False, True,
                   False, False, False, True, False, True, True, True,
                   False, False, True, True, False, True, False, True,
                   False, False, False, False, True, True, True, False,
                   True, True, True, True, False, False, False, True,
                   False, False, True, True, False, True, False, True,
                   False, False, True, False, False, False, True, True,
                   False, True, True, False, True, True, True, False,
                   True, True, False, False, True, False, True, False,
                   True, False, False, True, False, False, True, True,
                   False, False, False, True, True, False, False, False,
                   False, True, True, True, False, False, True, False,
                   False, True, True, True, True, True, False, False,
                   True, True, True, True, True, False, False, True,
                   False, True, True, True, True, False, False, True,
                   True, True, False, False, True, True, True, False,
                   False, True, False, False, False, False, True, True,
                   False, False, True, True, True, True, False, False,
                   True, True, True, False, True, True, False, False,
                   True, True, True, False, True, True, False, True,
                   False, True, False, True, False, True, False, False,
                   False, False, True, True, False, True, False, False,
                   True, True, True, False, True, False, True, True, True,
                   False, True, False, False, False, False, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_min_samples_leaf': masked_array(data=[49, 54, 34, 52, 8, 47, 33, 33, 28, 17, 39, 49, 18, 49,
                   37, 30, 20, 12, 37, 21, 31, 8, 18, 9, 15, 2, 49, 4, 21,
                   2, 45, 57, 50, 39, 50, 9, 21, 48, 27, 46, 24, 42, 4,
                   36, 5, 50, 25, 21, 38, 11, 33, 52, 31, 25, 16, 39, 37,
                   58, 15, 7, 53, 48, 24, 49, 46, 6, 21, 39, 8, 49, 20,
                   24, 10, 8, 5, 3, 5, 12, 10, 5, 43, 32, 18, 53, 31, 27,
                   31, 39, 30, 30, 22, 54, 36, 57, 7, 17, 37, 50, 34, 47,
                   25, 26, 2, 57, 7, 43, 24, 2, 8, 36, 48, 51, 11, 6, 27,
                   51, 16, 51, 54, 13, 18, 37, 17, 44, 49, 58, 30, 58, 58,
                   55, 56, 30, 33, 4, 38, 45, 4, 36, 40, 58, 12, 18, 41,
                   58, 9, 50, 14, 46, 23, 56, 32, 32, 9, 14, 9, 51, 4, 45,
                   10, 13, 24, 10, 15, 35, 26, 58, 27, 45, 39, 52, 43, 42,
                   54, 27, 8, 14, 28, 25, 12, 12, 24, 16, 28, 49, 39, 47,
                   30, 59, 56, 52, 20, 58, 26, 30, 35, 18, 40, 50, 58, 33,
                   27, 56, 46, 40, 58, 53, 13, 48, 27, 52, 30, 41, 27, 50,
                   36, 39, 34, 34, 19, 44, 21, 34, 43, 38, 37, 29, 4, 27,
                   59, 21, 32, 4, 37, 6, 36, 10, 42, 20, 29, 56, 58, 15,
                   34, 19, 40, 48, 7, 30, 45, 34, 39, 42, 14, 6, 3, 3, 44,
                   8, 55, 46, 8, 2, 42, 21, 5, 25, 40, 40, 38, 7, 52, 14,
                   27, 46, 51, 45, 56, 37, 50, 13, 56, 53, 26, 45, 27, 15,
                   54, 46, 21, 29, 13, 22, 27, 16, 7, 16, 45, 4, 44, 51,
                   7, 34, 29, 37, 33, 34, 32, 48, 10, 43, 52, 48, 18, 54,
                   26, 59, 53, 31, 49, 39, 5, 47, 15, 32, 59, 45, 44, 57,
                   59, 55, 21, 52, 9, 2, 2, 35, 11, 11, 3, 43, 47, 27, 50,
                   8, 30, 39, 33, 33, 5, 54, 9, 13, 32, 32, 32, 44, 31,
                   27, 35, 34, 41, 53, 52, 56, 55, 19, 46, 25, 50, 36, 43,
                   45, 11, 53, 59, 51, 29, 9, 53, 29, 37, 51, 17, 17, 23,
                   32, 46, 33, 7, 9, 35, 45, 44, 57, 9, 32, 36, 46, 16, 9,
                   52, 30, 39, 12, 47, 8, 48, 55, 27, 26, 39, 53, 12, 44,
                   58, 37, 50, 44, 5, 2, 32, 20, 44, 42, 21, 18, 30, 33,
                   38, 58, 27, 57, 36, 52, 23, 13, 32, 45, 22, 15, 33, 8,
                   8, 34, 27, 33, 14, 25, 28, 31, 22, 48, 50, 49, 36, 49,
                   25, 45, 23, 15, 31, 48, 20, 50, 48, 29, 52, 34, 8, 22,
                   33, 5, 37, 25, 48, 29, 57, 47, 50, 17, 56, 7, 8, 46,
                   28, 59, 19, 5, 17, 51, 4, 9, 24, 11, 2, 28, 35, 9, 58,
                   13],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_leaf_nodes': masked_array(data=[16, 41, 51, 29, 40, 35, 42, 55, 8, 13, 16, 9, 48, 43,
                   45, 56, 46, 3, 40, 57, 25, 27, 19, 9, 28, 2, 37, 49,
                   37, 33, 59, 31, 23, 6, 23, 55, 34, 37, 37, 21, 33, 26,
                   8, 28, 43, 32, 48, 34, 42, 52, 40, 55, 6, 14, 59, 9,
                   18, 19, 45, 37, 46, 27, 57, 2, 8, 50, 41, 46, 35, 33,
                   43, 22, 49, 44, 4, 50, 30, 58, 14, 30, 50, 58, 46, 30,
                   13, 36, 23, 39, 55, 17, 49, 46, 27, 39, 20, 45, 52, 59,
                   46, 29, 48, 25, 12, 29, 30, 29, 4, 44, 15, 40, 33, 42,
                   27, 26, 13, 49, 46, 7, 46, 30, 36, 29, 51, 21, 8, 45,
                   52, 5, 18, 50, 57, 23, 25, 43, 50, 33, 28, 43, 52, 53,
                   40, 22, 38, 54, 45, 53, 25, 4, 26, 42, 3, 28, 14, 37,
                   50, 18, 30, 17, 14, 16, 9, 4, 38, 39, 46, 30, 50, 52,
                   2, 4, 13, 14, 18, 46, 59, 8, 35, 21, 15, 37, 15, 36,
                   56, 9, 54, 41, 7, 24, 25, 31, 36, 14, 54, 35, 59, 13,
                   9, 29, 18, 21, 34, 30, 24, 25, 18, 17, 22, 14, 13, 59,
                   28, 29, 41, 43, 3, 2, 58, 40, 6, 46, 34, 52, 15, 19, 4,
                   25, 4, 8, 50, 58, 16, 4, 51, 43, 28, 35, 20, 28, 12, 6,
                   44, 47, 23, 59, 47, 12, 19, 39, 42, 24, 42, 56, 33, 56,
                   39, 15, 30, 55, 7, 54, 24, 57, 7, 24, 47, 24, 16, 37,
                   31, 57, 2, 19, 11, 31, 55, 57, 23, 17, 43, 40, 6, 34,
                   29, 29, 38, 3, 13, 14, 27, 48, 53, 38, 13, 10, 56, 50,
                   42, 20, 35, 37, 28, 18, 11, 10, 42, 17, 50, 13, 4, 18,
                   14, 15, 22, 38, 44, 52, 56, 10, 56, 53, 56, 53, 34, 24,
                   5, 5, 17, 19, 28, 31, 43, 54, 41, 42, 32, 6, 22, 31, 3,
                   25, 2, 44, 24, 30, 41, 54, 4, 21, 45, 22, 26, 9, 22,
                   33, 21, 28, 27, 35, 55, 36, 13, 2, 54, 10, 40, 2, 10,
                   37, 12, 48, 21, 11, 9, 41, 24, 42, 31, 33, 12, 40, 58,
                   47, 40, 52, 44, 50, 33, 13, 20, 16, 52, 9, 37, 48, 39,
                   37, 7, 19, 21, 31, 2, 20, 50, 46, 14, 22, 17, 42, 53,
                   4, 4, 28, 37, 5, 31, 51, 50, 56, 55, 9, 59, 18, 28, 50,
                   4, 22, 54, 15, 31, 29, 5, 19, 3, 7, 50, 9, 47, 29, 12,
                   22, 22, 33, 18, 6, 57, 38, 55, 4, 7, 18, 41, 15, 30,
                   31, 7, 26, 5, 2, 19, 3, 22, 52, 41, 56, 26, 54, 42, 48,
                   30, 5, 12, 22, 23, 18, 6, 28, 48, 22, 54, 6, 26, 47,
                   27, 45, 3, 34, 2, 22, 3, 34, 34, 12, 2, 55, 48, 14, 32,
                   53, 51, 41],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'mean_score_time': array([0.0723718 , 0.09554362, 0.03675874, 0.09676766, 0.0909524 ,
       0.02269109, 0.07428201, 0.06271879, 0.02498881, 0.06533631,
       0.07418283, 0.06549708, 0.09628987, 0.02802149, 0.02455362,
       0.09700537, 0.05963039, 0.03016432, 0.09407004, 0.06124703,
       0.0359114 , 0.0686756 , 0.03895863, 0.0347391 , 0.01175388,
       0.02362561, 0.09554815, 0.09057991, 0.06427821, 0.05185819,
       0.02385918, 0.02822129, 0.03055278, 0.00539446, 0.02006952,
       0.03436009, 0.01416564, 0.03541827, 0.04455948, 0.04612954,
       0.1050628 , 0.04910525, 0.10797493, 0.06139056, 0.07011986,
       0.1061697 , 0.05172809, 0.08328319, 0.02162949, 0.03080789,
       0.10575104, 0.02763677, 0.00574414, 0.02568285, 0.0213968 ,
       0.09261799, 0.01659274, 0.04085875, 0.06936653, 0.06811412,
       0.06585662, 0.00797526, 0.05677382, 0.09618553, 0.07745274,
       0.05488594, 0.00361037, 0.08900189, 0.1001846 , 0.07171289,
       0.04575936, 0.10066358, 0.07934984, 0.11140458, 0.10147254,
       0.02195064, 0.04091835, 0.0253435 , 0.02993615, 0.01077016,
       0.10032543, 0.02503236, 0.06326493, 0.08862082, 0.05749416,
       0.1078337 , 0.10273314, 0.08448617, 0.01555832, 0.08864967,
       0.06957587, 0.1080575 , 0.04194228, 0.03818782, 0.03528158,
       0.12017059, 0.04125301, 0.0747366 , 0.11686683, 0.01576026,
       0.03989045, 0.10816081, 0.10984802, 0.08052945, 0.01116792,
       0.03813632, 0.06495523, 0.08555317, 0.03741566, 0.09836459,
       0.09535472, 0.10987401, 0.09061885, 0.04978363, 0.02556491,
       0.09596316, 0.01150219, 0.03193355, 0.08145285, 0.07015562,
       0.05093122, 0.03061549, 0.097073  , 0.10290051, 0.00843279,
       0.01365725, 0.09538976, 0.067005  , 0.09977055, 0.02341048,
       0.03009812, 0.06610274, 0.06113386, 0.06082416, 0.09804249,
       0.04023019, 0.06432009, 0.00388853, 0.03576525, 0.02359494,
       0.01441987, 0.10130517, 0.11797365, 0.01119359, 0.09611932,
       0.08194645, 0.02408632, 0.01122069, 0.02938755, 0.04956873,
       0.0309453 , 0.10379418, 0.04792078, 0.08132323, 0.03265937,
       0.04178079, 0.08188589, 0.00624069, 0.01710701, 0.0587364 ,
       0.06922587, 0.06857657, 0.03934081, 0.06473676, 0.04862682,
       0.03106769, 0.02922479, 0.09987529, 0.01375016, 0.04915754,
       0.10496346, 0.05015341, 0.00893442, 0.06877478, 0.05673265,
       0.06452783, 0.03833032, 0.05868506, 0.02519075, 0.02754752,
       0.0680023 , 0.0193274 , 0.12681953, 0.00895079, 0.01140149,
       0.04212372, 0.11000657, 0.05687817, 0.00653179, 0.06707923,
       0.08452749, 0.06727409, 0.0245285 , 0.08018637, 0.03839318,
       0.04735939, 0.07230425, 0.03764327, 0.0296363 , 0.04001792,
       0.04146258, 0.07585343, 0.04538536, 0.01432951, 0.10769725,
       0.11537743, 0.08903535, 0.05257893, 0.03934773, 0.09062131,
       0.01206374, 0.03055795, 0.0408628 , 0.06454706, 0.10649538,
       0.04922938, 0.09822702, 0.0258011 , 0.00402085, 0.02504063,
       0.03560591, 0.10126098, 0.08175492, 0.07988445, 0.11600828,
       0.06386328, 0.12601598, 0.06997236, 0.02537354, 0.07176534,
       0.07414603, 0.01201177, 0.0310777 , 0.02593509, 0.0120728 ,
       0.05605896, 0.05857404, 0.05665183, 0.07489355, 0.05861855,
       0.12933517, 0.05326915, 0.13337628, 0.00681051, 0.12600144,
       0.0611035 , 0.11624034, 0.03408289, 0.06683771, 0.05510926,
       0.07248131, 0.12490829, 0.06863952, 0.09572895, 0.10150075,
       0.05977209, 0.03676669, 0.06541713, 0.04126771, 0.06134454,
       0.01282859, 0.05113769, 0.05998715, 0.11637664, 0.00995509,
       0.04296668, 0.05363655, 0.05843902, 0.06109627, 0.12260707,
       0.1177969 , 0.05102475, 0.10461926, 0.08811466, 0.11815874,
       0.05012186, 0.05019291, 0.07291921, 0.01514983, 0.01562556,
       0.07626994, 0.00438372, 0.13103247, 0.01548696, 0.12787072,
       0.03298362, 0.07028492, 0.03994298, 0.00427842, 0.07529187,
       0.08426507, 0.07779415, 0.10143137, 0.00998545, 0.10806902,
       0.13253506, 0.03402964, 0.03475388, 0.12201007, 0.05988057,
       0.10656985, 0.09252866, 0.02939272, 0.03295175, 0.05633624,
       0.0405062 , 0.04950794, 0.05881063, 0.10993512, 0.08041946,
       0.05593069, 0.08061878, 0.04474004, 0.12325764, 0.01286252,
       0.07802701, 0.08809813, 0.08798933, 0.07267245, 0.11481245,
       0.06707096, 0.0104483 , 0.178895  , 0.00732255, 0.04886452,
       0.03819275, 0.06044857, 0.05604831, 0.09437585, 0.02096303,
       0.04973316, 0.10622899, 0.13672821, 0.13617802, 0.14021111,
       0.139455  , 0.0302213 , 0.00999355, 0.06409129, 0.0938921 ,
       0.04334458, 0.04586299, 0.03779658, 0.12860441, 0.12160977,
       0.00440407, 0.09354345, 0.1358916 , 0.1100382 , 0.08209435,
       0.06131784, 0.06016604, 0.10415626, 0.09100803, 0.10770313,
       0.13403924, 0.1276416 , 0.11719902, 0.06524841, 0.10092155,
       0.07423306, 0.03486713, 0.12440801, 0.00461324, 0.00738724,
       0.06855853, 0.14800255, 0.00735633, 0.03403624, 0.10503364,
       0.09546916, 0.04268829, 0.02780104, 0.04526329, 0.06911524,
       0.04859495, 0.12106808, 0.08321643, 0.00746417, 0.11048794,
       0.14531891, 0.051483  , 0.08355546, 0.05048974, 0.12755299,
       0.04586681, 0.1059339 , 0.12601829, 0.05340592, 0.09771101,
       0.00455292, 0.03298696, 0.10408362, 0.0248247 , 0.04047147,
       0.08162856, 0.00743326, 0.07398542, 0.05940413, 0.11094467,
       0.09706656, 0.03103582, 0.08687131, 0.02588058, 0.14028843,
       0.13134201, 0.0879515 , 0.13045557, 0.14195466, 0.14551242,
       0.0975914 , 0.05103819, 0.06561899, 0.01955533, 0.00774638,
       0.06928714, 0.0571959 , 0.13129616, 0.05128304, 0.04674729,
       0.02536233, 0.09957639, 0.01306526, 0.09286563, 0.13633919,
       0.09026949, 0.14573518, 0.01970998, 0.08825914, 0.10057592,
       0.02818274, 0.05880467, 0.03920269, 0.03410784, 0.12352276,
       0.00490212, 0.13060196, 0.08856972, 0.05046272, 0.1489354 ,
       0.03612645, 0.02120376, 0.08401585, 0.14461128, 0.13395977,
       0.049752  , 0.03764844, 0.01043932, 0.12209892, 0.07573724,
       0.01101859, 0.12411761, 0.14239653, 0.13674672, 0.15135797,
       0.11096629, 0.01698637, 0.00466267, 0.08954414, 0.01977738,
       0.00462437, 0.09967558, 0.12885054, 0.08740369, 0.09016768,
       0.1460042 , 0.10529979, 0.09022935, 0.0817283 , 0.13805429,
       0.08918333, 0.10160255, 0.04967507, 0.01170937, 0.09453821,
       0.01970045, 0.06775745, 0.07528687, 0.10208639, 0.01629853,
       0.14291859, 0.089336  , 0.03412906, 0.12615792, 0.10971053,
       0.13276386, 0.10403204, 0.15716855, 0.07466618, 0.04418071,
       0.14841278, 0.10396226, 0.14493163, 0.03054961, 0.07255507,
       0.04261653, 0.07504487, 0.08067314, 0.00762725, 0.03270928]), 'mean_fit_time': array([1.25434915, 1.54395326, 0.62647398, 1.72690852, 1.37106061,
       0.46054157, 1.23618539, 0.981505  , 0.43333968, 1.15099462,
       1.71260341, 1.03964845, 1.54012648, 0.43201844, 0.55300021,
       2.48540791, 1.53892843, 0.74002067, 1.48684295, 0.96979396,
       0.56447275, 1.15806691, 0.63161516, 0.58305248, 0.17326029,
       0.37155215, 2.05517681, 1.45450664, 1.03205649, 1.72878758,
       0.41198778, 0.43979843, 0.53247976, 0.07612324, 0.3497808 ,
       0.56296285, 0.22950355, 0.56340226, 0.77840869, 0.79350034,
       1.5999039 , 0.84871093, 1.84150362, 1.07772366, 1.22591869,
       2.44500081, 0.89546474, 1.49569027, 0.33319171, 0.53641184,
       1.86074432, 0.46029019, 0.12027995, 0.44097829, 0.3455735 ,
       1.49618824, 0.28058585, 0.90116771, 1.17550278, 1.17720342,
       1.14780442, 0.16068729, 1.38351051, 1.71260619, 1.84856009,
       0.96165538, 0.04003247, 2.13539322, 1.69710747, 1.53802983,
       0.71466541, 1.65493655, 1.27781248, 1.99778501, 1.82119528,
       0.53563921, 1.01901031, 0.39786355, 0.48716561, 0.17705266,
       2.26892535, 0.61349138, 1.12849092, 1.99852292, 1.56029296,
       1.83679271, 1.80906129, 1.38053632, 0.39216765, 1.53825982,
       1.23202737, 1.75509779, 0.92967844, 0.61895903, 1.07763982,
       1.95878887, 0.73992332, 1.22515988, 1.88293576, 0.3426795 ,
       0.71408057, 1.76437394, 2.09257682, 1.76098903, 0.16904855,
       0.61115368, 1.78226097, 2.47627815, 0.65948764, 1.73409367,
       1.67720302, 1.93455458, 3.19602704, 0.92820406, 0.65175947,
       1.45061231, 0.18719816, 0.52442416, 1.30822786, 1.81209246,
       0.82016341, 0.69186171, 2.88445441, 1.67424424, 0.15775657,
       0.26469858, 1.69168409, 1.08022841, 1.75667302, 0.39190173,
       0.52354407, 1.08589443, 1.02700909, 2.24514325, 2.1174341 ,
       0.90787546, 1.09508014, 0.04297209, 0.57078664, 0.5042274 ,
       0.21820482, 1.71295214, 1.92648292, 0.16398724, 1.59223159,
       1.44654163, 0.41675544, 0.16751019, 0.47135353, 0.77282492,
       0.53051551, 1.73879925, 0.82994111, 1.39181177, 0.51807221,
       0.92031535, 1.51164548, 0.10716287, 0.26219702, 0.96597918,
       1.21514304, 1.93189939, 0.63574775, 1.07707453, 1.12344591,
       0.69226853, 0.51290965, 1.63652134, 0.20687032, 0.78316879,
       1.69702713, 0.79845103, 0.13076814, 1.75197101, 0.96053274,
       1.7116545 , 0.62604904, 0.97865621, 0.8109165 , 0.44734828,
       1.22074684, 0.30564404, 2.27303576, 0.12599262, 0.17346446,
       0.69593851, 1.96442612, 0.99884001, 0.1094989 , 1.65760628,
       1.39333002, 1.37240974, 0.39256771, 1.84348798, 0.61430526,
       0.8415006 , 1.16179077, 0.81260316, 0.48015936, 0.66050863,
       0.67761421, 1.3552107 , 1.08803391, 0.32560722, 1.96792245,
       2.03309361, 1.42854301, 0.92340128, 0.68526109, 1.49061871,
       0.2546885 , 0.48424244, 0.72550201, 1.03246697, 1.8206652 ,
       0.82013655, 1.6987168 , 0.59381302, 0.04656172, 0.41170343,
       0.9244899 , 1.85470335, 1.36167177, 1.42197188, 1.88885252,
       1.15942685, 2.27944946, 1.16719278, 0.53906186, 1.3076086 ,
       1.20077316, 0.26263054, 0.53455321, 0.43922321, 0.19576494,
       0.9985218 , 1.52499016, 1.63555384, 1.37245703, 0.95576183,
       2.12970352, 0.95443511, 3.35462292, 0.10105022, 2.03817558,
       1.09930261, 2.09053818, 0.61087863, 1.09519045, 0.98461644,
       1.71865702, 2.21672614, 1.24189115, 1.66968552, 1.79563705,
       1.90567247, 0.60078589, 1.18745931, 0.72974753, 1.02173106,
       0.19219255, 0.866172  , 1.03248445, 2.16345811, 0.31463416,
       0.71577668, 0.85850414, 1.36869899, 1.07744948, 3.60208472,
       2.01341526, 1.53041673, 1.92353288, 1.60412494, 2.62014524,
       0.83898123, 0.82955281, 1.18956025, 0.25289989, 0.26877824,
       1.72945333, 0.05398885, 2.22487942, 0.23027786, 2.2765278 ,
       0.54751857, 1.13892372, 0.65051436, 0.07792846, 2.09768303,
       1.43176206, 1.41736603, 1.67384084, 0.15780743, 3.58923721,
       3.6925199 , 0.5988512 , 0.9255    , 2.15841262, 1.05681094,
       1.78585649, 1.51485411, 0.51277224, 0.5655822 , 1.03635311,
       0.94917814, 1.18384004, 1.05507469, 2.74401196, 1.41727297,
       1.00221634, 1.44324708, 0.74169405, 2.05987628, 0.30454326,
       1.6337359 , 1.43083461, 2.08752815, 1.76031351, 2.8536884 ,
       1.94540612, 0.15820201, 4.05111893, 0.09813722, 0.77083691,
       0.67761914, 1.09809446, 0.9254845 , 1.70063965, 0.33666356,
       1.27954578, 1.71572502, 2.31835302, 2.37078134, 2.62782931,
       3.74860732, 0.86416292, 0.16292278, 1.08673143, 1.66024486,
       0.75658075, 1.14344557, 0.56894422, 2.2116514 , 2.1048007 ,
       0.04966275, 2.09150028, 3.21534928, 1.95883505, 1.88809363,
       1.15799173, 1.0449783 , 1.91583125, 1.49243228, 1.94403283,
       2.28645817, 3.02761348, 2.09345857, 1.08212113, 1.64045509,
       1.63385765, 0.76913484, 2.25962853, 0.05154792, 0.1071287 ,
       1.23795183, 3.22916826, 0.11000864, 0.58607864, 1.86626887,
       2.32513618, 0.74405209, 0.48553443, 0.72544861, 1.13607502,
       0.83410223, 2.00813262, 1.53486562, 0.09979351, 1.81719589,
       2.47387338, 1.12714362, 1.49208983, 1.52370373, 2.14039842,
       0.8211139 , 1.91016157, 2.86222506, 0.92193524, 2.49674376,
       0.05602511, 0.5987525 , 1.69938493, 0.39508859, 0.67541091,
       1.96314804, 0.11139313, 1.34290361, 1.14114412, 1.8833007 ,
       1.66900571, 0.54272739, 1.41259456, 0.63690058, 2.57203539,
       2.47290015, 1.57078139, 2.38156406, 2.57679574, 2.46806057,
       1.61305881, 0.93858139, 1.20418159, 0.33139531, 0.11258817,
       1.25481749, 1.30108563, 2.84572832, 1.73767447, 0.79393307,
       0.44251339, 2.55261946, 0.22236633, 2.39797449, 2.35300239,
       1.51547893, 4.06654127, 0.33419331, 2.24797416, 1.66879368,
       0.45036689, 1.04579981, 0.71335387, 0.60141985, 2.12235975,
       0.08898211, 2.38964963, 1.49074674, 0.84413385, 2.67931414,
       0.59201717, 0.3718218 , 1.602995  , 2.46312801, 2.35541272,
       0.89880013, 0.97469926, 0.16390181, 2.26422024, 1.23328265,
       0.17581868, 2.21653819, 2.59854857, 2.43392293, 2.54109295,
       1.99065924, 0.28724392, 0.05442516, 1.51880344, 0.32972542,
       0.0583787 , 1.78632116, 3.40810927, 1.58348521, 1.72250501,
       2.36549934, 1.84799385, 1.55519517, 1.64004246, 2.27368212,
       2.34155305, 1.84002519, 0.88010406, 0.24306552, 2.13325111,
       0.3168846 , 1.14446092, 1.33060646, 1.82292779, 0.38527751,
       2.51461879, 2.36698572, 0.55210948, 2.3172845 , 2.57052128,
       2.35435462, 1.76239038, 2.92666284, 1.28744984, 0.80125618,
       3.05740237, 1.94670765, 2.53358801, 0.54726386, 1.25335566,
       1.19951026, 1.6184938 , 3.03637075, 0.1059142 , 0.59698168]), 'split1_train_score': array([0.60032895, 0.59375   , 0.62335526, 0.59539474, 0.67763158,
       0.66447368, 0.61184211, 0.60855263, 0.63815789, 0.65296053,
       0.66118421, 0.60032895, 0.66611842, 0.59046053, 0.67105263,
       0.69572368, 0.69407895, 0.60197368, 0.60197368, 0.63815789,
       0.59703947, 0.70559211, 0.66776316, 0.69078947, 0.67269737,
       0.59046053, 0.66611842, 0.90460526, 0.67927632, 0.88157895,
       0.60032895, 0.59046053, 0.60032895, 0.60690789, 0.59046053,
       0.70065789, 0.62664474, 0.59868421, 0.62993421, 0.59046053,
       0.65131579, 0.60855263, 0.69243421, 0.59539474, 0.74013158,
       0.66118421, 0.65296053, 0.65460526, 0.61019737, 0.68421053,
       0.60032895, 0.59046053, 0.68585526, 0.62664474, 0.6875    ,
       0.60855263, 0.60197368, 0.64309211, 0.74013158, 0.69243421,
       0.59539474, 0.64473684, 0.71217105, 0.59046053, 0.67269737,
       0.71052632, 0.67763158, 0.68092105, 0.79276316, 0.66940789,
       0.65953947, 0.66447368, 0.6875    , 0.71710526, 0.59046053,
       0.71546053, 0.72203947, 0.71217105, 0.72203947, 0.76644737,
       0.66447368, 0.69736842, 0.64473684, 0.66118421, 0.71381579,
       0.65625   , 0.61842105, 0.60690789, 0.71546053, 0.60197368,
       0.68421053, 0.59375   , 0.69243421, 0.59375   , 0.73684211,
       0.63815789, 0.61677632, 0.60032895, 0.60361842, 0.67269737,
       0.67105263, 0.62828947, 0.70230263, 0.64802632, 0.72039474,
       0.59210526, 0.66776316, 0.76644737, 0.71546053, 0.62335526,
       0.60361842, 0.59046053, 0.83881579, 0.70394737, 0.71217105,
       0.60197368, 0.66611842, 0.59046053, 0.59539474, 0.74835526,
       0.64144737, 0.68585526, 0.77138158, 0.60690789, 0.64967105,
       0.64638158, 0.63980263, 0.59539474, 0.59210526, 0.59539474,
       0.59375   , 0.62335526, 0.62664474, 0.80592105, 0.68421053,
       0.67105263, 0.79276316, 0.60032895, 0.59703947, 0.64967105,
       0.70559211, 0.66776316, 0.60690789, 0.59210526, 0.77631579,
       0.59046053, 0.68585526, 0.59046053, 0.64638158, 0.59703947,
       0.59046053, 0.62828947, 0.74342105, 0.69243421, 0.73684211,
       0.65953947, 0.78289474, 0.64638158, 0.63322368, 0.74177632,
       0.65131579, 0.66118421, 0.71710526, 0.60361842, 0.72203947,
       0.64638158, 0.63322368, 0.60690789, 0.59046053, 0.59046053,
       0.60526316, 0.59539474, 0.59375   , 0.68914474, 0.69407895,
       0.73190789, 0.60197368, 0.66776316, 0.79111842, 0.69243421,
       0.64638158, 0.66611842, 0.63980263, 0.59375   , 0.59539474,
       0.60032895, 0.63486842, 0.59375   , 0.64967105, 0.65953947,
       0.63815789, 0.64638158, 0.64802632, 0.67927632, 0.61842105,
       0.65131579, 0.61184211, 0.65460526, 0.59375   , 0.625     ,
       0.66447368, 0.59539474, 0.66118421, 0.67434211, 0.59210526,
       0.59539474, 0.66776316, 0.59703947, 0.66282895, 0.59868421,
       0.67598684, 0.60690789, 0.63322368, 0.59046053, 0.59046053,
       0.59046053, 0.62828947, 0.69243421, 0.61348684, 0.60032895,
       0.69572368, 0.62993421, 0.61184211, 0.59703947, 0.59046053,
       0.63815789, 0.59210526, 0.60690789, 0.64967105, 0.68421053,
       0.61019737, 0.65460526, 0.60855263, 0.79111842, 0.59868421,
       0.70888158, 0.67763158, 0.76809211, 0.64309211, 0.59046053,
       0.59210526, 0.69243421, 0.67598684, 0.62171053, 0.59539474,
       0.60197368, 0.76151316, 0.64473684, 0.59210526, 0.62664474,
       0.66940789, 0.60855263, 0.74671053, 0.86184211, 0.68914474,
       0.74013158, 0.59375   , 0.70065789, 0.59375   , 0.60526316,
       0.68256579, 0.67763158, 0.59375   , 0.67763158, 0.78125   ,
       0.67269737, 0.59539474, 0.67598684, 0.59539474, 0.78453947,
       0.59046053, 0.80427632, 0.63815789, 0.61019737, 0.65953947,
       0.60197368, 0.59703947, 0.60032895, 0.59868421, 0.75164474,
       0.65789474, 0.59046053, 0.64473684, 0.59210526, 0.62171053,
       0.59046053, 0.59539474, 0.60032895, 0.74177632, 0.72532895,
       0.75493421, 0.67434211, 0.63322368, 0.63486842, 0.75164474,
       0.69572368, 0.59868421, 0.74671053, 0.60197368, 0.60032895,
       0.68585526, 0.63157895, 0.61677632, 0.59868421, 0.60855263,
       0.68585526, 0.69901316, 0.59046053, 0.66118421, 0.59375   ,
       0.59046053, 0.60361842, 0.67598684, 0.59539474, 0.67927632,
       0.64309211, 0.59046053, 0.67927632, 0.66940789, 0.68256579,
       0.77467105, 0.59375   , 0.72368421, 0.61513158, 0.59210526,
       0.59868421, 0.60526316, 0.59375   , 0.59046053, 0.59539474,
       0.75657895, 0.59046053, 0.69243421, 0.70065789, 0.83717105,
       0.68092105, 0.72368421, 0.68421053, 0.59046053, 0.59210526,
       0.59046053, 0.69078947, 0.59703947, 0.71052632, 0.625     ,
       0.59046053, 0.65789474, 0.70394737, 0.81907895, 0.65131579,
       0.69901316, 0.69407895, 0.63651316, 0.61513158, 0.63651316,
       0.60032895, 0.71052632, 0.63651316, 0.63157895, 0.60361842,
       0.66940789, 0.59046053, 0.59703947, 0.59046053, 0.59375   ,
       0.59046053, 0.66940789, 0.62828947, 0.59868421, 0.60032895,
       0.66776316, 0.59210526, 0.65131579, 0.59210526, 0.59046053,
       0.59046053, 0.60032895, 0.70723684, 0.59210526, 0.65296053,
       0.61513158, 0.66776316, 0.625     , 0.78453947, 0.67269737,
       0.62006579, 0.60526316, 0.66940789, 0.70888158, 0.73519737,
       0.59210526, 0.60032895, 0.59210526, 0.59375   , 0.69901316,
       0.71052632, 0.59375   , 0.60855263, 0.71710526, 0.71217105,
       0.59046053, 0.60690789, 0.59210526, 0.73026316, 0.60526316,
       0.72532895, 0.60197368, 0.59046053, 0.62828947, 0.59046053,
       0.59210526, 0.59046053, 0.64802632, 0.59375   , 0.59210526,
       0.61677632, 0.67105263, 0.66118421, 0.72861842, 0.70230263,
       0.62664474, 0.69736842, 0.59703947, 0.67269737, 0.59046053,
       0.64638158, 0.69901316, 0.625     , 0.68092105, 0.59210526,
       0.59868421, 0.59375   , 0.59046053, 0.59046053, 0.62335526,
       0.69243421, 0.63815789, 0.59703947, 0.68092105, 0.72039474,
       0.62664474, 0.79769737, 0.70230263, 0.60197368, 0.62993421,
       0.60855263, 0.72203947, 0.59046053, 0.63486842, 0.59868421,
       0.66776316, 0.59046053, 0.59046053, 0.59046053, 0.60690789,
       0.59046053, 0.60526316, 0.59046053, 0.62993421, 0.59046053,
       0.58881579, 0.60197368, 0.74835526, 0.60032895, 0.60197368,
       0.61842105, 0.59703947, 0.62828947, 0.81085526, 0.59868421,
       0.69901316, 0.74342105, 0.61184211, 0.71052632, 0.66118421,
       0.62335526, 0.59539474, 0.59046053, 0.59046053, 0.68914474,
       0.59375   , 0.74506579, 0.70230263, 0.60690789, 0.63486842,
       0.59210526, 0.59046053, 0.71217105, 0.59046053, 0.60032895,
       0.76809211, 0.73684211, 0.59046053, 0.75986842, 0.75657895,
       0.72203947, 0.62828947, 0.71381579, 0.59046053, 0.67434211]), 'param_max_features': masked_array(data=['auto', 'auto', 'auto', 'auto', 'auto', None, 'sqrt',
                   'log2', 'sqrt', 'sqrt', None, 'auto', 'log2', 'log2',
                   None, None, None, None, 'log2', 'log2', 'log2', 'auto',
                   'log2', 'auto', 'log2', 'sqrt', None, 'sqrt', 'auto',
                   None, 'auto', 'log2', 'auto', 'sqrt', 'log2', 'log2',
                   'log2', 'sqrt', 'log2', 'log2', 'auto', 'auto', 'auto',
                   'log2', 'log2', None, 'auto', 'sqrt', 'sqrt', 'log2',
                   'log2', 'log2', None, 'log2', 'sqrt', 'sqrt', 'log2',
                   None, 'auto', 'auto', 'sqrt', None, None, 'log2', None,
                   'sqrt', 'sqrt', None, 'log2', None, 'log2', 'sqrt',
                   'log2', 'sqrt', 'log2', None, None, 'log2', 'auto',
                   'sqrt', None, None, 'sqrt', None, None, 'auto', 'log2',
                   'sqrt', None, 'log2', 'auto', 'auto', None, 'sqrt',
                   None, 'sqrt', 'sqrt', 'sqrt', 'log2', None, 'auto',
                   'sqrt', 'auto', None, 'sqrt', 'log2', None, None,
                   'log2', 'auto', 'auto', 'log2', None, 'sqrt', None,
                   'auto', 'log2', 'log2', 'sqrt', None, 'log2', None,
                   None, 'auto', None, None, 'auto', 'auto', 'sqrt',
                   'sqrt', 'sqrt', 'auto', 'sqrt', None, None, None,
                   'log2', 'auto', 'log2', None, 'auto', 'sqrt', 'sqrt',
                   'auto', 'sqrt', 'log2', 'sqrt', 'sqrt', 'auto', 'sqrt',
                   'auto', 'sqrt', 'sqrt', 'sqrt', 'log2', None, 'auto',
                   None, 'log2', 'sqrt', 'sqrt', None, 'sqrt', 'log2',
                   None, None, 'auto', 'auto', 'auto', 'log2', 'sqrt',
                   'log2', 'auto', None, 'sqrt', None, 'log2', 'auto',
                   None, 'auto', 'log2', 'auto', 'sqrt', 'log2', 'log2',
                   'sqrt', 'sqrt', 'auto', None, None, 'log2', None,
                   'auto', None, 'sqrt', 'sqrt', 'auto', None, 'sqrt',
                   'auto', 'sqrt', 'sqrt', None, None, 'auto', 'auto',
                   'log2', 'sqrt', 'auto', 'sqrt', None, 'sqrt', 'log2',
                   'log2', 'auto', 'sqrt', 'sqrt', None, 'log2', 'sqrt',
                   None, 'auto', 'auto', 'log2', 'sqrt', 'auto', 'sqrt',
                   'log2', None, 'auto', 'log2', None, 'auto', 'auto',
                   'auto', 'sqrt', None, None, 'auto', 'log2', 'auto',
                   'sqrt', None, 'log2', 'log2', 'sqrt', 'log2', 'auto',
                   'log2', 'auto', None, 'sqrt', 'sqrt', 'auto', 'auto',
                   None, 'log2', 'auto', 'auto', 'sqrt', 'log2', 'log2',
                   'log2', 'sqrt', None, 'sqrt', 'log2', None, 'log2',
                   None, 'log2', None, 'sqrt', 'auto', None, 'auto',
                   'sqrt', 'log2', 'sqrt', 'sqrt', None, 'auto', 'auto',
                   'log2', 'log2', 'log2', 'sqrt', 'auto', None, None,
                   'sqrt', 'auto', 'auto', 'log2', None, None, 'auto',
                   None, 'auto', 'sqrt', 'auto', 'sqrt', 'log2', 'sqrt',
                   'log2', None, None, 'log2', None, 'log2', 'log2',
                   'auto', 'sqrt', 'sqrt', None, None, 'log2', None, None,
                   None, None, 'sqrt', None, 'sqrt', 'auto', 'auto',
                   'auto', 'sqrt', 'log2', 'auto', None, 'log2', 'sqrt',
                   'sqrt', 'sqrt', None, None, 'auto', 'log2', 'log2',
                   'log2', None, 'auto', 'sqrt', 'sqrt', 'sqrt', None,
                   None, 'sqrt', None, 'auto', 'auto', 'sqrt', 'auto',
                   'auto', 'auto', None, 'auto', 'sqrt', 'log2', None,
                   None, 'auto', 'auto', 'log2', 'sqrt', None, 'auto',
                   'sqrt', 'log2', None, 'log2', 'log2', 'log2', 'log2',
                   'log2', 'log2', 'log2', 'log2', 'auto', 'sqrt', None,
                   'log2', None, 'sqrt', 'auto', 'auto', None, 'auto',
                   None, 'log2', 'sqrt', 'log2', 'auto', 'sqrt', None,
                   'sqrt', 'auto', 'auto', 'auto', 'auto', 'auto', 'log2',
                   None, 'auto', 'auto', 'sqrt', 'log2', 'sqrt', 'auto',
                   'sqrt', 'log2', 'log2', 'sqrt', 'auto', 'auto', None,
                   None, None, 'auto', 'sqrt', None, 'sqrt', None, 'sqrt',
                   'log2', None, 'sqrt', None, 'sqrt', 'log2', 'auto',
                   'auto', 'log2', 'log2', None, 'auto', 'auto', 'sqrt',
                   'auto', 'auto', 'sqrt', 'auto', 'log2', 'auto', 'log2',
                   None, 'log2', 'sqrt', 'log2', 'sqrt', 'log2', 'log2',
                   'log2', 'sqrt', 'log2', 'sqrt', 'auto', 'log2', 'log2',
                   'sqrt', 'auto', None, 'sqrt', 'auto', 'log2', 'auto',
                   'sqrt', 'auto', 'log2', None, 'auto', 'sqrt', None,
                   None, 'sqrt', 'sqrt', 'log2', 'log2', None, 'sqrt',
                   None, 'log2', 'sqrt', None, 'sqrt', 'sqrt', 'auto',
                   'auto', 'auto', 'auto', 'sqrt', 'log2', 'sqrt', 'auto',
                   None, 'auto', None, 'sqrt', 'auto'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'split0_test_score': array([0.59344262, 0.58360656, 0.58688525, 0.59016393, 0.57377049,
       0.56065574, 0.58032787, 0.59344262, 0.57704918, 0.59016393,
       0.58688525, 0.58032787, 0.58360656, 0.58688525, 0.58688525,
       0.57377049, 0.58360656, 0.58688525, 0.59016393, 0.57377049,
       0.57704918, 0.58688525, 0.58032787, 0.59016393, 0.59016393,
       0.59016393, 0.56393443, 0.57704918, 0.59016393, 0.59344262,
       0.59672131, 0.59016393, 0.59016393, 0.58688525, 0.59016393,
       0.57704918, 0.57377049, 0.58360656, 0.58688525, 0.58688525,
       0.59016393, 0.58360656, 0.57377049, 0.57377049, 0.58032787,
       0.56393443, 0.58360656, 0.59016393, 0.59016393, 0.58360656,
       0.59016393, 0.59016393, 0.57704918, 0.59344262, 0.5704918 ,
       0.57704918, 0.59344262, 0.57704918, 0.56393443, 0.59016393,
       0.59016393, 0.57377049, 0.56721311, 0.59016393, 0.56721311,
       0.58360656, 0.58032787, 0.58032787, 0.57377049, 0.55737705,
       0.57704918, 0.58360656, 0.58360656, 0.57704918, 0.59016393,
       0.58360656, 0.6       , 0.55737705, 0.56065574, 0.59344262,
       0.58032787, 0.57377049, 0.58688525, 0.56065574, 0.57377049,
       0.58032787, 0.60327869, 0.57377049, 0.56721311, 0.57704918,
       0.59344262, 0.58688525, 0.57377049, 0.58360656, 0.58688525,
       0.58688525, 0.57704918, 0.59344262, 0.58688525, 0.55409836,
       0.57377049, 0.58360656, 0.56721311, 0.57704918, 0.5704918 ,
       0.57704918, 0.57704918, 0.5704918 , 0.58360656, 0.56721311,
       0.59672131, 0.59016393, 0.59016393, 0.57704918, 0.57377049,
       0.59344262, 0.57377049, 0.59016393, 0.58360656, 0.59344262,
       0.58360656, 0.5704918 , 0.59016393, 0.59344262, 0.58360656,
       0.58360656, 0.58688525, 0.59016393, 0.58360656, 0.58688525,
       0.58032787, 0.58032787, 0.5704918 , 0.58032787, 0.57377049,
       0.56393443, 0.58032787, 0.55409836, 0.57704918, 0.56721311,
       0.56065574, 0.58360656, 0.59016393, 0.58032787, 0.58032787,
       0.58688525, 0.56721311, 0.59016393, 0.58688525, 0.57704918,
       0.59016393, 0.57704918, 0.58360656, 0.57377049, 0.58360656,
       0.5704918 , 0.58688525, 0.58360656, 0.57377049, 0.58032787,
       0.59016393, 0.58360656, 0.5704918 , 0.59672131, 0.56721311,
       0.56721311, 0.58360656, 0.58688525, 0.59016393, 0.59016393,
       0.58360656, 0.57704918, 0.58688525, 0.57704918, 0.59016393,
       0.58032787, 0.6       , 0.58032787, 0.61311475, 0.57704918,
       0.57704918, 0.58688525, 0.58032787, 0.57377049, 0.58360656,
       0.58360656, 0.58032787, 0.58688525, 0.58688525, 0.56393443,
       0.58032787, 0.57704918, 0.59016393, 0.57377049, 0.59672131,
       0.59016393, 0.57704918, 0.55737705, 0.58360656, 0.58688525,
       0.58032787, 0.58360656, 0.57377049, 0.59672131, 0.58032787,
       0.59016393, 0.59016393, 0.60983607, 0.57704918, 0.58360656,
       0.58688525, 0.59344262, 0.59344262, 0.58688525, 0.59016393,
       0.59016393, 0.58360656, 0.56721311, 0.59672131, 0.59672131,
       0.59344262, 0.57377049, 0.58032787, 0.59016393, 0.59016393,
       0.58688525, 0.57704918, 0.59344262, 0.56393443, 0.59016393,
       0.59016393, 0.59016393, 0.58688525, 0.56721311, 0.59344262,
       0.57377049, 0.5704918 , 0.60327869, 0.57704918, 0.59016393,
       0.58688525, 0.58032787, 0.58032787, 0.58360656, 0.58032787,
       0.60655738, 0.56721311, 0.58688525, 0.58360656, 0.58360656,
       0.5704918 , 0.59016393, 0.57377049, 0.58360656, 0.56393443,
       0.5704918 , 0.58032787, 0.58688525, 0.58360656, 0.59344262,
       0.56721311, 0.5704918 , 0.58032787, 0.58688525, 0.60327869,
       0.57704918, 0.58032787, 0.58032787, 0.59016393, 0.6       ,
       0.59016393, 0.6       , 0.58360656, 0.59672131, 0.5704918 ,
       0.58360656, 0.58360656, 0.59344262, 0.58688525, 0.56393443,
       0.57704918, 0.58360656, 0.57704918, 0.58360656, 0.58032787,
       0.59016393, 0.58688525, 0.58688525, 0.61967213, 0.57377049,
       0.57704918, 0.59344262, 0.58688525, 0.57704918, 0.57704918,
       0.57704918, 0.59672131, 0.57704918, 0.59672131, 0.59344262,
       0.57377049, 0.57704918, 0.6       , 0.59672131, 0.59672131,
       0.58360656, 0.57704918, 0.58688525, 0.58688525, 0.57704918,
       0.58688525, 0.6       , 0.59344262, 0.59016393, 0.57377049,
       0.57704918, 0.59016393, 0.57704918, 0.56065574, 0.57377049,
       0.58360656, 0.58360656, 0.5704918 , 0.58032787, 0.59016393,
       0.6       , 0.58688525, 0.59344262, 0.59016393, 0.59016393,
       0.60655738, 0.59016393, 0.57377049, 0.57377049, 0.57704918,
       0.57704918, 0.60327869, 0.58032787, 0.59016393, 0.57704918,
       0.59016393, 0.5704918 , 0.59344262, 0.58032787, 0.57704918,
       0.58688525, 0.59672131, 0.57704918, 0.58032787, 0.56393443,
       0.58688525, 0.58032787, 0.57377049, 0.59016393, 0.57377049,
       0.6       , 0.58032787, 0.59016393, 0.56721311, 0.59672131,
       0.59016393, 0.59016393, 0.59016393, 0.58360656, 0.57377049,
       0.59016393, 0.56393443, 0.58360656, 0.57377049, 0.59344262,
       0.57704918, 0.58688525, 0.56721311, 0.59016393, 0.59016393,
       0.59016393, 0.57704918, 0.58032787, 0.5704918 , 0.57704918,
       0.58360656, 0.55737705, 0.57704918, 0.58688525, 0.58360656,
       0.59016393, 0.58688525, 0.59344262, 0.58360656, 0.58688525,
       0.58360656, 0.58688525, 0.58032787, 0.58688525, 0.58032787,
       0.57704918, 0.58688525, 0.59016393, 0.58688525, 0.58032787,
       0.59016393, 0.58688525, 0.57704918, 0.58360656, 0.59016393,
       0.59672131, 0.6       , 0.59016393, 0.58360656, 0.57704918,
       0.6       , 0.59016393, 0.57704918, 0.58688525, 0.5704918 ,
       0.58032787, 0.56393443, 0.58360656, 0.57704918, 0.58360656,
       0.59344262, 0.58032787, 0.5704918 , 0.57704918, 0.58032787,
       0.58032787, 0.5704918 , 0.58360656, 0.5704918 , 0.58360656,
       0.58688525, 0.59344262, 0.59016393, 0.59016393, 0.58688525,
       0.58688525, 0.58032787, 0.59672131, 0.58688525, 0.58032787,
       0.58688525, 0.55409836, 0.58688525, 0.57377049, 0.58360656,
       0.59672131, 0.58688525, 0.56393443, 0.57704918, 0.59672131,
       0.55409836, 0.58688525, 0.59016393, 0.59016393, 0.59016393,
       0.58688525, 0.58360656, 0.59016393, 0.58032787, 0.59016393,
       0.56065574, 0.59672131, 0.58688525, 0.59016393, 0.6       ,
       0.60327869, 0.59016393, 0.56721311, 0.58032787, 0.58032787,
       0.58360656, 0.58360656, 0.58360656, 0.57704918, 0.56721311,
       0.58360656, 0.59344262, 0.58688525, 0.58688525, 0.56721311,
       0.58688525, 0.58360656, 0.59344262, 0.58688525, 0.58032787,
       0.57704918, 0.59016393, 0.5704918 , 0.59016393, 0.59016393,
       0.58032787, 0.58360656, 0.59016393, 0.58032787, 0.5704918 ,
       0.56721311, 0.56393443, 0.58360656, 0.58688525, 0.58032787]), 'std_fit_time': array([0.00409308, 0.00748269, 0.01155614, 0.00858887, 0.01584632,
       0.00467977, 0.03231935, 0.01093051, 0.00177253, 0.00626906,
       0.00313094, 0.00360939, 0.00772549, 0.00218092, 0.00541755,
       0.0149989 , 0.0212228 , 0.00634075, 0.00573792, 0.01482337,
       0.00845419, 0.00893582, 0.00360297, 0.00849158, 0.00336523,
       0.00191126, 0.00420867, 0.00952355, 0.00201214, 0.01843168,
       0.01363683, 0.0161052 , 0.01451885, 0.00041629, 0.00283118,
       0.0046066 , 0.00374824, 0.00284325, 0.0024412 , 0.00729788,
       0.00602205, 0.01100102, 0.01397205, 0.01255631, 0.00754773,
       0.0115159 , 0.00175102, 0.02552405, 0.00118572, 0.00388606,
       0.00875357, 0.00085684, 0.00070971, 0.00629596, 0.01151698,
       0.01812022, 0.0019511 , 0.00764   , 0.00844235, 0.00770619,
       0.00645834, 0.0016689 , 0.01894463, 0.00592036, 0.02239472,
       0.02231462, 0.00023041, 0.02393163, 0.01105884, 0.00440977,
       0.00597824, 0.00488514, 0.01392271, 0.00169998, 0.01310545,
       0.00588228, 0.01226639, 0.00855141, 0.00328574, 0.00017318,
       0.01047   , 0.00547226, 0.00986995, 0.02098687, 0.01998594,
       0.00426226, 0.0091791 , 0.01464565, 0.00629851, 0.00880112,
       0.0166612 , 0.00255186, 0.00485559, 0.00602537, 0.01366184,
       0.00559076, 0.00956335, 0.00437816, 0.00290202, 0.00826508,
       0.00500217, 0.00287496, 0.00859301, 0.01982345, 0.00048975,
       0.01467544, 0.01838585, 0.03247663, 0.00332103, 0.01061469,
       0.02040303, 0.00814416, 0.0555327 , 0.02774278, 0.01054401,
       0.01446495, 0.00468013, 0.00254264, 0.00847686, 0.03057296,
       0.01259137, 0.00405844, 0.03148585, 0.01967729, 0.00054527,
       0.00292732, 0.01811761, 0.02801807, 0.00023685, 0.00259521,
       0.00314644, 0.01060582, 0.00246169, 0.04523604, 0.01493691,
       0.00380907, 0.00444876, 0.00023013, 0.00455282, 0.00713014,
       0.00066221, 0.01077639, 0.00795712, 0.00191334, 0.01978506,
       0.01629311, 0.00070107, 0.0012532 , 0.01420045, 0.00834331,
       0.00185898, 0.00731676, 0.00433184, 0.01390977, 0.00419798,
       0.00650277, 0.01205754, 0.00111221, 0.00180506, 0.00920738,
       0.0136766 , 0.02252296, 0.01232199, 0.00835437, 0.00983326,
       0.00778173, 0.00354374, 0.00303235, 0.0032619 , 0.00294784,
       0.00901595, 0.00712442, 0.00040583, 0.01503656, 0.01013134,
       0.02386563, 0.00733974, 0.00730344, 0.00597518, 0.00695306,
       0.00497263, 0.00252605, 0.02788383, 0.00071009, 0.0011595 ,
       0.00277805, 0.00411411, 0.00471618, 0.00115253, 0.01180048,
       0.01596491, 0.01207085, 0.0094311 , 0.01375117, 0.01073598,
       0.00286683, 0.01390927, 0.00720922, 0.00293121, 0.0009087 ,
       0.00703212, 0.0132503 , 0.00473001, 0.00191657, 0.00958671,
       0.01339716, 0.01579737, 0.01094647, 0.0083531 , 0.01777677,
       0.00329845, 0.00260996, 0.00450494, 0.00501325, 0.00555792,
       0.00498052, 0.00290675, 0.00585458, 0.00050981, 0.00147239,
       0.01731016, 0.01483744, 0.00767124, 0.00812292, 0.00792976,
       0.00827614, 0.0131633 , 0.00676109, 0.00277739, 0.00475117,
       0.00686538, 0.00488225, 0.00365487, 0.00476685, 0.00318579,
       0.00162149, 0.00698058, 0.01863491, 0.01196349, 0.00901072,
       0.00938119, 0.00888488, 0.02534407, 0.00069204, 0.03324776,
       0.01045255, 0.00362777, 0.00295623, 0.00376471, 0.01125618,
       0.00837353, 0.01030419, 0.01369924, 0.01298538, 0.0062442 ,
       0.04577341, 0.01220733, 0.02303828, 0.00305238, 0.00467739,
       0.00157597, 0.00516685, 0.01585393, 0.00193222, 0.00447236,
       0.00731166, 0.00503635, 0.01712428, 0.00693866, 0.04612607,
       0.02073613, 0.02403679, 0.00585536, 0.02026573, 0.02547974,
       0.00721091, 0.00355148, 0.01603572, 0.00093012, 0.00019264,
       0.00764619, 0.00059455, 0.0153118 , 0.00129386, 0.01632863,
       0.00326276, 0.00738563, 0.00591864, 0.00064784, 0.02220245,
       0.00891205, 0.02022191, 0.01449572, 0.0024773 , 0.06825865,
       0.04676013, 0.00512974, 0.0149668 , 0.02448651, 0.02494264,
       0.01791681, 0.02016908, 0.00404916, 0.00468632, 0.01262815,
       0.0072825 , 0.000628  , 0.00554807, 0.01204671, 0.01015236,
       0.00887448, 0.02187769, 0.00827798, 0.01331712, 0.00343892,
       0.01186102, 0.01381432, 0.01671714, 0.01058716, 0.00594769,
       0.040861  , 0.00064396, 0.08516078, 0.00031032, 0.00860073,
       0.02532405, 0.02736467, 0.00597403, 0.01409776, 0.00541578,
       0.00666081, 0.0259613 , 0.00918634, 0.01446077, 0.01026179,
       0.03164275, 0.01486453, 0.00102578, 0.02086731, 0.00576345,
       0.01110017, 0.00978003, 0.00096699, 0.01831261, 0.0084746 ,
       0.00113283, 0.01842611, 0.01129634, 0.00979248, 0.01628543,
       0.01897113, 0.05079297, 0.01251451, 0.01697855, 0.01397129,
       0.00874349, 0.036685  , 0.04393631, 0.01598257, 0.01591234,
       0.00380609, 0.01052472, 0.00702778, 0.00057701, 0.00238068,
       0.00167418, 0.02164013, 0.00023847, 0.0081159 , 0.01652492,
       0.07212208, 0.01091122, 0.00539904, 0.00942963, 0.02305769,
       0.00805107, 0.00473317, 0.00788111, 0.00042679, 0.02365441,
       0.01620433, 0.01437012, 0.02871537, 0.04463638, 0.03413973,
       0.00623045, 0.00723408, 0.00565165, 0.01585619, 0.03465461,
       0.00132755, 0.00681993, 0.03499115, 0.00905537, 0.0071453 ,
       0.009093  , 0.00105887, 0.02115586, 0.04951237, 0.01488332,
       0.00898695, 0.00546369, 0.00423293, 0.00834856, 0.00500751,
       0.01876845, 0.02369947, 0.00931336, 0.01171477, 0.00518543,
       0.01821435, 0.00983116, 0.0057116 , 0.00395605, 0.00117973,
       0.01868149, 0.01923064, 0.01250507, 0.04094106, 0.00915073,
       0.00165964, 0.03563098, 0.001593  , 0.00933318, 0.01807046,
       0.0067702 , 0.02097716, 0.00480012, 0.00939433, 0.02324771,
       0.00702215, 0.0134266 , 0.00417665, 0.00781701, 0.00845964,
       0.00447069, 0.01985525, 0.013509  , 0.01289991, 0.00895567,
       0.0137157 , 0.00433281, 0.01350834, 0.007602  , 0.00806978,
       0.00174622, 0.01874327, 0.00095986, 0.00617875, 0.00486502,
       0.01118249, 0.02307725, 0.01273754, 0.0002733 , 0.02781888,
       0.01154506, 0.00540781, 0.00046974, 0.01003339, 0.00304304,
       0.00160744, 0.02746848, 0.03932878, 0.01460081, 0.04749571,
       0.03175244, 0.02978548, 0.00889284, 0.00251533, 0.01096445,
       0.0292805 , 0.01776799, 0.00196431, 0.00580626, 0.02079405,
       0.00680181, 0.0041157 , 0.01975762, 0.01642903, 0.0058575 ,
       0.01365325, 0.07546637, 0.00747337, 0.0159335 , 0.02537154,
       0.03402651, 0.0155296 , 0.0115576 , 0.01380092, 0.00285843,
       0.02820556, 0.02251275, 0.0106863 , 0.00267847, 0.02755371,
       0.01511308, 0.05770896, 0.09511648, 0.00055443, 0.01748584]), 'mean_train_score': array([0.60966556, 0.6008864 , 0.63488491, 0.60308029, 0.67763641,
       0.679824  , 0.63268922, 0.61898215, 0.64858566, 0.66393927,
       0.67488707, 0.60966556, 0.68695301, 0.59265458, 0.67488346,
       0.70229489, 0.68967619, 0.63868659, 0.6080136 , 0.65132058,
       0.60471601, 0.70121101, 0.68421358, 0.69738051, 0.67984293,
       0.59100894, 0.68310897, 0.89638229, 0.68915501, 0.88048765,
       0.6195322 , 0.59100894, 0.61294783, 0.62172338, 0.59155809,
       0.704505  , 0.64584624, 0.61130309, 0.64419157, 0.59430203,
       0.66612414, 0.62720675, 0.69134438, 0.60033635, 0.72808771,
       0.67817114, 0.66502855, 0.66776798, 0.62994799, 0.69189624,
       0.61020389, 0.59100894, 0.68199082, 0.63597418, 0.69298912,
       0.62885059, 0.61350509, 0.66884916, 0.72532754, 0.68750033,
       0.59923625, 0.66391854, 0.70777374, 0.59100894, 0.68420185,
       0.70834182, 0.66996816, 0.69571503, 0.77741908, 0.68310536,
       0.67270581, 0.67599979, 0.69354548, 0.70943831, 0.59759331,
       0.71598932, 0.71051226, 0.71876212, 0.71601276, 0.75494187,
       0.67543261, 0.7094239 , 0.6584559 , 0.67652009, 0.72092896,
       0.66119533, 0.62884878, 0.63213737, 0.71709664, 0.6069117 ,
       0.69025059, 0.60143555, 0.70284043, 0.60253204, 0.73243942,
       0.65680846, 0.63926908, 0.60801631, 0.61514262, 0.68311798,
       0.67270309, 0.64036286, 0.70395134, 0.66994114, 0.71218766,
       0.59704687, 0.66666065, 0.75985175, 0.71492349, 0.63926547,
       0.61240409, 0.59100894, 0.82894705, 0.69901712, 0.71216873,
       0.60856816, 0.67928477, 0.59210723, 0.60417858, 0.73846292,
       0.66064349, 0.70010732, 0.76971749, 0.61733921, 0.66885636,
       0.6633739 , 0.65407083, 0.60143284, 0.5997872 , 0.60637157,
       0.60692523, 0.63378661, 0.64639899, 0.79932731, 0.7000974 ,
       0.68255531, 0.78783127, 0.62008316, 0.60307578, 0.66830722,
       0.70505685, 0.68147505, 0.62172519, 0.6008855 , 0.76206276,
       0.59210723, 0.68750755, 0.60472503, 0.65843877, 0.60747257,
       0.59155809, 0.64036827, 0.73793632, 0.69353917, 0.73190831,
       0.67707916, 0.76699608, 0.65679313, 0.66009525, 0.73027438,
       0.66666969, 0.66720079, 0.72039604, 0.61459167, 0.71654207,
       0.66665436, 0.64145845, 0.61952679, 0.59100894, 0.59100894,
       0.62172429, 0.5997872 , 0.60581792, 0.68803145, 0.69353285,
       0.71872784, 0.61623821, 0.67709448, 0.77578155, 0.69572314,
       0.65844959, 0.67216567, 0.65406723, 0.59814246, 0.60637698,
       0.61459528, 0.64584894, 0.60033545, 0.66557049, 0.67598086,
       0.65241708, 0.67158768, 0.65790134, 0.68639123, 0.637077  ,
       0.66284368, 0.63103817, 0.67927125, 0.60582152, 0.64255766,
       0.66776256, 0.60418039, 0.67652911, 0.68694489, 0.59704326,
       0.60362763, 0.68038396, 0.60966376, 0.66886176, 0.60472593,
       0.68529474, 0.62610936, 0.64693371, 0.59210723, 0.59100894,
       0.59100894, 0.64255225, 0.69846708, 0.62720946, 0.61843391,
       0.69680701, 0.6420076 , 0.62501557, 0.60801812, 0.60033906,
       0.6513296 , 0.60527148, 0.62337083, 0.66830722, 0.69354008,
       0.62665129, 0.67377796, 0.62884699, 0.77796192, 0.61130129,
       0.70943561, 0.6858538 , 0.76369309, 0.65297073, 0.59100894,
       0.59759421, 0.69298822, 0.68530195, 0.6502223 , 0.60307668,
       0.61130489, 0.75275159, 0.65845771, 0.59594857, 0.63762524,
       0.67708276, 0.62446281, 0.73355575, 0.84430516, 0.69189533,
       0.7357271 , 0.59759511, 0.69956807, 0.60253204, 0.61569086,
       0.68696382, 0.68641558, 0.59923895, 0.6902524 , 0.7812442 ,
       0.67489157, 0.60307848, 0.67982489, 0.60746987, 0.77356332,
       0.59100894, 0.801523  , 0.65297524, 0.61514442, 0.67432801,
       0.6184294 , 0.60637428, 0.60856185, 0.61075033, 0.73904813,
       0.67542721, 0.59320373, 0.65571377, 0.60198921, 0.63816627,
       0.59100894, 0.60527869, 0.61733741, 0.72586677, 0.72860892,
       0.74013741, 0.68147324, 0.65187605, 0.65626473, 0.74614559,
       0.69515595, 0.61733832, 0.73901477, 0.61405063, 0.60911641,
       0.68860585, 0.64200309, 0.63322845, 0.6195295 , 0.62117874,
       0.68858601, 0.69790891, 0.59430203, 0.67049568, 0.60033725,
       0.59155809, 0.61240228, 0.67872839, 0.60198379, 0.67707012,
       0.66665617, 0.59100894, 0.68748772, 0.68310716, 0.69571593,
       0.76807906, 0.61460069, 0.71763406, 0.64036648, 0.60143284,
       0.6102084 , 0.61897854, 0.60527598, 0.59100894, 0.59978539,
       0.75492024, 0.59100894, 0.69462484, 0.69956627, 0.82785507,
       0.6858538 , 0.70667092, 0.68094212, 0.59375468, 0.59814336,
       0.59100894, 0.69187279, 0.60911281, 0.70669438, 0.63981191,
       0.59759151, 0.66556056, 0.71216423, 0.79879799, 0.67433072,
       0.69517939, 0.69463115, 0.65078135, 0.63269283, 0.6513305 ,
       0.60966195, 0.71599925, 0.6502286 , 0.64365415, 0.61185494,
       0.67927394, 0.59100894, 0.60362853, 0.59265458, 0.59375287,
       0.59100894, 0.68695121, 0.64693822, 0.61459437, 0.61075664,
       0.68311167, 0.59649772, 0.66886989, 0.59155718, 0.59100894,
       0.59210723, 0.60362312, 0.70122273, 0.59320463, 0.66119713,
       0.63707339, 0.68255351, 0.6420031 , 0.78124059, 0.68476723,
       0.63543225, 0.61404702, 0.67598446, 0.70285484, 0.72639969,
       0.60032553, 0.6195286 , 0.59484847, 0.60362854, 0.69463746,
       0.71599925, 0.61460249, 0.61514351, 0.71545911, 0.70833731,
       0.59100894, 0.627755  , 0.59649772, 0.71708671, 0.61185584,
       0.71820394, 0.6113085 , 0.59100894, 0.64036106, 0.59814246,
       0.6008855 , 0.59100894, 0.66009253, 0.60801271, 0.59649231,
       0.63652514, 0.68310626, 0.67434333, 0.72312284, 0.70560059,
       0.64146206, 0.6885833 , 0.61240049, 0.68750035, 0.59649501,
       0.66996368, 0.70338957, 0.63542954, 0.69517129, 0.60033635,
       0.6091119 , 0.60527598, 0.59100894, 0.59210723, 0.62830414,
       0.68528931, 0.64803831, 0.60801631, 0.68641377, 0.72203988,
       0.64090751, 0.79386378, 0.70066006, 0.60746265, 0.63981281,
       0.62008225, 0.7088594 , 0.59650042, 0.64913842, 0.61513992,
       0.67764363, 0.59265458, 0.59100894, 0.59265458, 0.62282168,
       0.59265458, 0.62227704, 0.59100894, 0.64474433, 0.59100894,
       0.60856998, 0.610212  , 0.74559644, 0.60801631, 0.60746986,
       0.63158912, 0.60527237, 0.64365776, 0.7955022 , 0.60910289,
       0.71051949, 0.72971892, 0.63378932, 0.71326072, 0.67488527,
       0.63543225, 0.60308389, 0.59430203, 0.59210723, 0.69077359,
       0.60143555, 0.73846833, 0.70779358, 0.6173356 , 0.64911678,
       0.59759061, 0.59100894, 0.70943561, 0.59100894, 0.60966556,
       0.7565794 , 0.7236855 , 0.59100894, 0.75109964, 0.75383096,
       0.7225755 , 0.6442033 , 0.70940224, 0.59704236, 0.68532089]), 'split0_train_score': array([0.62932455, 0.61285008, 0.65568369, 0.61614498, 0.68204283,
       0.68698517, 0.65568369, 0.63591433, 0.66392092, 0.68204283,
       0.67874794, 0.62932455, 0.6985173 , 0.59472817, 0.67051071,
       0.6985173 , 0.67215815, 0.63920923, 0.61943987, 0.66227348,
       0.60955519, 0.70345964, 0.69522241, 0.71169687, 0.70016474,
       0.59143328, 0.68698517, 0.89291598, 0.70345964, 0.88467875,
       0.64250412, 0.59143328, 0.6276771 , 0.64085667, 0.59308072,
       0.71499176, 0.66721582, 0.62602965, 0.65403624, 0.59967051,
       0.67874794, 0.6490939 , 0.69686985, 0.60955519, 0.73805601,
       0.67874794, 0.67710049, 0.67874794, 0.6523888 , 0.70510708,
       0.62108731, 0.59143328, 0.65568369, 0.6490939 , 0.70181219,
       0.65074135, 0.63591433, 0.67215815, 0.71663921, 0.68533773,
       0.60461285, 0.66721582, 0.69522241, 0.59143328, 0.68204283,
       0.71499176, 0.67710049, 0.69522241, 0.77594728, 0.68204283,
       0.68698517, 0.69357496, 0.71004942, 0.71334432, 0.6062603 ,
       0.6985173 , 0.69192751, 0.73311367, 0.71663921, 0.75617792,
       0.67545305, 0.71004942, 0.67710049, 0.67051071, 0.71169687,
       0.6738056 , 0.64415157, 0.65403624, 0.71004942, 0.61285008,
       0.70181219, 0.61449753, 0.6985173 , 0.61614498, 0.71499176,
       0.67545305, 0.66392092, 0.62273476, 0.63097199, 0.69192751,
       0.67874794, 0.65733114, 0.70840198, 0.66721582, 0.723229  ,
       0.6062603 , 0.66062603, 0.74135091, 0.72487644, 0.65733114,
       0.62932455, 0.59143328, 0.82372323, 0.70016474, 0.71004942,
       0.62602965, 0.69357496, 0.59472817, 0.61943987, 0.71169687,
       0.67710049, 0.70510708, 0.75123558, 0.63591433, 0.67545305,
       0.66886326, 0.6738056 , 0.61120264, 0.60955519, 0.62273476,
       0.62932455, 0.6523888 , 0.67215815, 0.78253707, 0.69686985,
       0.67874794, 0.78747941, 0.64579901, 0.61120264, 0.6738056 ,
       0.71663921, 0.69357496, 0.64250412, 0.61285008, 0.75617792,
       0.59472817, 0.69522241, 0.62108731, 0.66062603, 0.6276771 ,
       0.59308072, 0.66227348, 0.73311367, 0.70181219, 0.72981878,
       0.68204283, 0.75947282, 0.65733114, 0.68039539, 0.73476112,
       0.67710049, 0.65733114, 0.723229  , 0.6276771 , 0.70016474,
       0.66556837, 0.65568369, 0.63426689, 0.59143328, 0.59143328,
       0.64250412, 0.60790774, 0.61779242, 0.67215815, 0.69522241,
       0.69192751, 0.63261944, 0.69192751, 0.78088962, 0.69686985,
       0.67051071, 0.69028007, 0.67051071, 0.6062603 , 0.6276771 ,
       0.63261944, 0.66556837, 0.60955519, 0.6738056 , 0.67874794,
       0.66392092, 0.67215815, 0.66886326, 0.67874794, 0.66062603,
       0.68204283, 0.64744646, 0.68698517, 0.62108731, 0.66392092,
       0.66886326, 0.62108731, 0.67874794, 0.68698517, 0.6029654 ,
       0.61614498, 0.69686985, 0.62932455, 0.6738056 , 0.61779242,
       0.67874794, 0.64744646, 0.65733114, 0.59472817, 0.59143328,
       0.59143328, 0.65733114, 0.70345964, 0.6490939 , 0.63920923,
       0.68533773, 0.65897858, 0.64579901, 0.62602965, 0.61449753,
       0.67051071, 0.61943987, 0.64579901, 0.6738056 , 0.70675453,
       0.64085667, 0.66886326, 0.64744646, 0.77265239, 0.62438221,
       0.71499176, 0.68863262, 0.74958814, 0.66721582, 0.59143328,
       0.6062603 , 0.6985173 , 0.68533773, 0.66721582, 0.61285008,
       0.62602965, 0.75782537, 0.67874794, 0.6029654 , 0.65733114,
       0.68039539, 0.64250412, 0.72981878, 0.84184514, 0.70181219,
       0.71663921, 0.6062603 , 0.70510708, 0.61614498, 0.63097199,
       0.70016474, 0.70181219, 0.60790774, 0.70675453, 0.77594728,
       0.67710049, 0.61449753, 0.68204283, 0.62602965, 0.75782537,
       0.59143328, 0.78912685, 0.6738056 , 0.62932455, 0.66886326,
       0.63426689, 0.62438221, 0.62108731, 0.62108731, 0.7446458 ,
       0.6738056 , 0.59637562, 0.67215815, 0.62108731, 0.65403624,
       0.59143328, 0.62438221, 0.63756178, 0.70840198, 0.72158155,
       0.73805601, 0.68863262, 0.67215815, 0.68039539, 0.72817133,
       0.67710049, 0.63920923, 0.71663921, 0.63426689, 0.6276771 ,
       0.6985173 , 0.65403624, 0.64579901, 0.64085667, 0.64250412,
       0.68039539, 0.69028007, 0.59967051, 0.66721582, 0.61120264,
       0.59308072, 0.6276771 , 0.68039539, 0.61449753, 0.66392092,
       0.66886326, 0.59143328, 0.68039539, 0.68369028, 0.69522241,
       0.75288303, 0.64085667, 0.69686985, 0.66721582, 0.61285008,
       0.62602965, 0.63426689, 0.62273476, 0.59143328, 0.6062603 ,
       0.74135091, 0.59143328, 0.69357496, 0.70345964, 0.82701812,
       0.68698517, 0.68204283, 0.6985173 , 0.59967051, 0.60790774,
       0.59143328, 0.68039539, 0.62602965, 0.71004942, 0.65568369,
       0.60461285, 0.66062603, 0.71004942, 0.79242175, 0.67545305,
       0.69686985, 0.6985173 , 0.67051071, 0.65733114, 0.67215815,
       0.62602965, 0.71004942, 0.66556837, 0.66227348, 0.6276771 ,
       0.68204283, 0.59143328, 0.61614498, 0.59472817, 0.59637562,
       0.59143328, 0.69522241, 0.66392092, 0.63261944, 0.62602965,
       0.68863262, 0.60461285, 0.68698517, 0.59143328, 0.59143328,
       0.59472817, 0.60955519, 0.71334432, 0.59637562, 0.67710049,
       0.65897858, 0.67874794, 0.65733114, 0.77100494, 0.6985173 ,
       0.65733114, 0.62932455, 0.67710049, 0.70345964, 0.6985173 ,
       0.60131796, 0.63920923, 0.59802306, 0.61779242, 0.70181219,
       0.71004942, 0.64250412, 0.62932455, 0.71334432, 0.71004942,
       0.59143328, 0.65074135, 0.60461285, 0.69357496, 0.6276771 ,
       0.71663921, 0.62932455, 0.59143328, 0.65568369, 0.60790774,
       0.61285008, 0.59143328, 0.67051071, 0.62273476, 0.59967051,
       0.65733114, 0.68204283, 0.68204283, 0.70840198, 0.71499176,
       0.66227348, 0.67215815, 0.62932455, 0.69522241, 0.6029654 ,
       0.68863262, 0.69686985, 0.6523888 , 0.6985173 , 0.61120264,
       0.62438221, 0.62273476, 0.59143328, 0.59472817, 0.64415157,
       0.66556837, 0.66392092, 0.62438221, 0.6985173 , 0.723229  ,
       0.65568369, 0.79571664, 0.70181219, 0.61614498, 0.65403624,
       0.64085667, 0.68204283, 0.60790774, 0.67051071, 0.63097199,
       0.69357496, 0.59472817, 0.59143328, 0.59472817, 0.64415157,
       0.59472817, 0.64744646, 0.59143328, 0.65897858, 0.59143328,
       0.63426689, 0.6276771 , 0.72817133, 0.62273476, 0.62273476,
       0.64744646, 0.61779242, 0.66721582, 0.78583196, 0.61614498,
       0.71004942, 0.72652389, 0.66062603, 0.70840198, 0.67710049,
       0.65568369, 0.61943987, 0.59967051, 0.59472817, 0.67710049,
       0.61449753, 0.71828666, 0.71828666, 0.63261944, 0.65074135,
       0.6029654 , 0.59143328, 0.71334432, 0.59143328, 0.62932455,
       0.75123558, 0.71828666, 0.59143328, 0.74958814, 0.74629325,
       0.71169687, 0.66556837, 0.68204283, 0.6029654 , 0.70345964]), 'params': [{'max_features': 'auto', 'oob_score': True, 'max_depth': 440, 'max_leaf_nodes': 16, 'min_samples_split': 10, 'n_estimators': 360, 'min_samples_leaf': 49, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 130, 'max_leaf_nodes': 41, 'min_samples_split': 46, 'n_estimators': 480, 'min_samples_leaf': 54, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 470, 'max_leaf_nodes': 51, 'min_samples_split': 116, 'n_estimators': 180, 'min_samples_leaf': 34, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 60, 'max_leaf_nodes': 29, 'min_samples_split': 7, 'n_estimators': 490, 'min_samples_leaf': 52, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 210, 'max_leaf_nodes': 40, 'min_samples_split': 149, 'n_estimators': 410, 'min_samples_leaf': 8, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 380, 'max_leaf_nodes': 35, 'min_samples_split': 55, 'n_estimators': 110, 'min_samples_leaf': 47, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 380, 'max_leaf_nodes': 42, 'min_samples_split': 128, 'n_estimators': 370, 'min_samples_leaf': 33, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 310, 'max_leaf_nodes': 55, 'min_samples_split': 60, 'n_estimators': 310, 'min_samples_leaf': 33, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 180, 'max_leaf_nodes': 8, 'min_samples_split': 27, 'n_estimators': 120, 'min_samples_leaf': 28, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 120, 'max_leaf_nodes': 13, 'min_samples_split': 123, 'n_estimators': 330, 'min_samples_leaf': 17, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 40, 'max_leaf_nodes': 16, 'min_samples_split': 137, 'n_estimators': 370, 'min_samples_leaf': 39, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 240, 'max_leaf_nodes': 9, 'min_samples_split': 109, 'n_estimators': 330, 'min_samples_leaf': 49, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 390, 'max_leaf_nodes': 48, 'min_samples_split': 33, 'n_estimators': 470, 'min_samples_leaf': 18, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 40, 'max_leaf_nodes': 43, 'min_samples_split': 102, 'n_estimators': 140, 'min_samples_leaf': 49, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 140, 'max_leaf_nodes': 45, 'min_samples_split': 149, 'n_estimators': 120, 'min_samples_leaf': 37, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 100, 'max_leaf_nodes': 56, 'min_samples_split': 87, 'n_estimators': 470, 'min_samples_leaf': 30, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 490, 'max_leaf_nodes': 46, 'min_samples_split': 146, 'n_estimators': 290, 'min_samples_leaf': 20, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 380, 'max_leaf_nodes': 3, 'min_samples_split': 64, 'n_estimators': 150, 'min_samples_leaf': 12, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 300, 'max_leaf_nodes': 40, 'min_samples_split': 64, 'n_estimators': 450, 'min_samples_leaf': 37, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 310, 'max_leaf_nodes': 57, 'min_samples_split': 94, 'n_estimators': 290, 'min_samples_leaf': 21, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 10, 'max_leaf_nodes': 25, 'min_samples_split': 146, 'n_estimators': 170, 'min_samples_leaf': 31, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 450, 'max_leaf_nodes': 27, 'min_samples_split': 115, 'n_estimators': 320, 'min_samples_leaf': 8, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 230, 'max_leaf_nodes': 19, 'min_samples_split': 6, 'n_estimators': 180, 'min_samples_leaf': 18, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 220, 'max_leaf_nodes': 9, 'min_samples_split': 23, 'n_estimators': 160, 'min_samples_leaf': 9, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 320, 'max_leaf_nodes': 28, 'min_samples_split': 56, 'n_estimators': 50, 'min_samples_leaf': 15, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 350, 'max_leaf_nodes': 2, 'min_samples_split': 9, 'n_estimators': 110, 'min_samples_leaf': 2, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 320, 'max_leaf_nodes': 37, 'min_samples_split': 71, 'n_estimators': 450, 'min_samples_leaf': 49, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 310, 'max_leaf_nodes': 49, 'min_samples_split': 2, 'n_estimators': 370, 'min_samples_leaf': 4, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 220, 'max_leaf_nodes': 37, 'min_samples_split': 16, 'n_estimators': 290, 'min_samples_leaf': 21, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 340, 'max_leaf_nodes': 33, 'min_samples_split': 28, 'n_estimators': 220, 'min_samples_leaf': 2, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 440, 'max_leaf_nodes': 59, 'min_samples_split': 32, 'n_estimators': 110, 'min_samples_leaf': 45, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 310, 'max_leaf_nodes': 31, 'min_samples_split': 95, 'n_estimators': 130, 'min_samples_leaf': 57, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 240, 'max_leaf_nodes': 23, 'min_samples_split': 83, 'n_estimators': 140, 'min_samples_leaf': 50, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 70, 'max_leaf_nodes': 6, 'min_samples_split': 59, 'n_estimators': 20, 'min_samples_leaf': 39, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 10, 'max_leaf_nodes': 23, 'min_samples_split': 46, 'n_estimators': 90, 'min_samples_leaf': 50, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 240, 'max_leaf_nodes': 55, 'min_samples_split': 67, 'n_estimators': 150, 'min_samples_leaf': 9, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 490, 'max_leaf_nodes': 34, 'min_samples_split': 106, 'n_estimators': 60, 'min_samples_leaf': 21, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 160, 'max_leaf_nodes': 37, 'min_samples_split': 102, 'n_estimators': 160, 'min_samples_leaf': 48, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 130, 'max_leaf_nodes': 37, 'min_samples_split': 4, 'n_estimators': 200, 'min_samples_leaf': 27, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 140, 'max_leaf_nodes': 21, 'min_samples_split': 99, 'n_estimators': 210, 'min_samples_leaf': 46, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 210, 'max_leaf_nodes': 33, 'min_samples_split': 84, 'n_estimators': 440, 'min_samples_leaf': 24, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 250, 'max_leaf_nodes': 26, 'min_samples_split': 13, 'n_estimators': 220, 'min_samples_leaf': 42, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 90, 'max_leaf_nodes': 8, 'min_samples_split': 112, 'n_estimators': 480, 'min_samples_leaf': 4, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 80, 'max_leaf_nodes': 28, 'min_samples_split': 144, 'n_estimators': 280, 'min_samples_leaf': 36, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 90, 'max_leaf_nodes': 43, 'min_samples_split': 66, 'n_estimators': 300, 'min_samples_leaf': 5, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 160, 'max_leaf_nodes': 32, 'min_samples_split': 101, 'n_estimators': 480, 'min_samples_leaf': 50, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 280, 'max_leaf_nodes': 48, 'min_samples_split': 76, 'n_estimators': 220, 'min_samples_leaf': 25, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 160, 'max_leaf_nodes': 34, 'min_samples_split': 89, 'n_estimators': 370, 'min_samples_leaf': 21, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 320, 'max_leaf_nodes': 42, 'min_samples_split': 87, 'n_estimators': 90, 'min_samples_leaf': 38, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 440, 'max_leaf_nodes': 52, 'min_samples_split': 75, 'n_estimators': 130, 'min_samples_leaf': 11, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 300, 'max_leaf_nodes': 40, 'min_samples_split': 102, 'n_estimators': 470, 'min_samples_leaf': 33, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 490, 'max_leaf_nodes': 55, 'min_samples_split': 149, 'n_estimators': 120, 'min_samples_leaf': 52, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 380, 'max_leaf_nodes': 6, 'min_samples_split': 67, 'n_estimators': 20, 'min_samples_leaf': 31, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 110, 'max_leaf_nodes': 14, 'min_samples_split': 101, 'n_estimators': 110, 'min_samples_leaf': 25, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 360, 'max_leaf_nodes': 59, 'min_samples_split': 78, 'n_estimators': 90, 'min_samples_leaf': 16, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 460, 'max_leaf_nodes': 9, 'min_samples_split': 109, 'n_estimators': 400, 'min_samples_leaf': 39, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 30, 'max_leaf_nodes': 18, 'min_samples_split': 42, 'n_estimators': 70, 'min_samples_leaf': 37, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 220, 'max_leaf_nodes': 19, 'min_samples_split': 14, 'n_estimators': 180, 'min_samples_leaf': 58, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 270, 'max_leaf_nodes': 45, 'min_samples_split': 3, 'n_estimators': 290, 'min_samples_leaf': 15, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 30, 'max_leaf_nodes': 37, 'min_samples_split': 136, 'n_estimators': 300, 'min_samples_leaf': 7, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 250, 'max_leaf_nodes': 46, 'min_samples_split': 149, 'n_estimators': 290, 'min_samples_leaf': 53, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 250, 'max_leaf_nodes': 27, 'min_samples_split': 124, 'n_estimators': 30, 'min_samples_leaf': 48, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 60, 'max_leaf_nodes': 57, 'min_samples_split': 91, 'n_estimators': 240, 'min_samples_leaf': 24, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 150, 'max_leaf_nodes': 2, 'min_samples_split': 136, 'n_estimators': 440, 'min_samples_leaf': 49, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 250, 'max_leaf_nodes': 8, 'min_samples_split': 88, 'n_estimators': 330, 'min_samples_leaf': 46, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 70, 'max_leaf_nodes': 50, 'min_samples_split': 109, 'n_estimators': 230, 'min_samples_leaf': 6, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 110, 'max_leaf_nodes': 41, 'min_samples_split': 44, 'n_estimators': 10, 'min_samples_leaf': 21, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 10, 'max_leaf_nodes': 46, 'min_samples_split': 13, 'n_estimators': 380, 'min_samples_leaf': 39, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 230, 'max_leaf_nodes': 35, 'min_samples_split': 5, 'n_estimators': 410, 'min_samples_leaf': 8, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 90, 'max_leaf_nodes': 33, 'min_samples_split': 25, 'n_estimators': 310, 'min_samples_leaf': 49, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 20, 'max_leaf_nodes': 43, 'min_samples_split': 14, 'n_estimators': 190, 'min_samples_leaf': 20, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 60, 'max_leaf_nodes': 22, 'min_samples_split': 28, 'n_estimators': 430, 'min_samples_leaf': 24, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 230, 'max_leaf_nodes': 49, 'min_samples_split': 79, 'n_estimators': 330, 'min_samples_leaf': 10, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 380, 'max_leaf_nodes': 44, 'min_samples_split': 93, 'n_estimators': 470, 'min_samples_leaf': 8, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 40, 'max_leaf_nodes': 4, 'min_samples_split': 140, 'n_estimators': 450, 'min_samples_leaf': 5, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 220, 'max_leaf_nodes': 50, 'min_samples_split': 129, 'n_estimators': 90, 'min_samples_leaf': 3, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 60, 'max_leaf_nodes': 30, 'min_samples_split': 147, 'n_estimators': 170, 'min_samples_leaf': 5, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 220, 'max_leaf_nodes': 58, 'min_samples_split': 17, 'n_estimators': 100, 'min_samples_leaf': 12, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 320, 'max_leaf_nodes': 14, 'min_samples_split': 68, 'n_estimators': 120, 'min_samples_leaf': 10, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 470, 'max_leaf_nodes': 30, 'min_samples_split': 50, 'n_estimators': 40, 'min_samples_leaf': 5, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 140, 'max_leaf_nodes': 50, 'min_samples_split': 148, 'n_estimators': 430, 'min_samples_leaf': 43, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 100, 'max_leaf_nodes': 58, 'min_samples_split': 63, 'n_estimators': 100, 'min_samples_leaf': 32, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 340, 'max_leaf_nodes': 46, 'min_samples_split': 130, 'n_estimators': 270, 'min_samples_leaf': 18, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 270, 'max_leaf_nodes': 30, 'min_samples_split': 109, 'n_estimators': 380, 'min_samples_leaf': 53, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 190, 'max_leaf_nodes': 13, 'min_samples_split': 58, 'n_estimators': 240, 'min_samples_leaf': 31, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 40, 'max_leaf_nodes': 36, 'min_samples_split': 12, 'n_estimators': 460, 'min_samples_leaf': 27, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 10, 'max_leaf_nodes': 23, 'min_samples_split': 4, 'n_estimators': 430, 'min_samples_leaf': 31, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 390, 'max_leaf_nodes': 39, 'min_samples_split': 4, 'n_estimators': 350, 'min_samples_leaf': 39, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 130, 'max_leaf_nodes': 55, 'min_samples_split': 20, 'n_estimators': 60, 'min_samples_leaf': 30, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 40, 'max_leaf_nodes': 17, 'min_samples_split': 138, 'n_estimators': 370, 'min_samples_leaf': 30, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 290, 'max_leaf_nodes': 49, 'min_samples_split': 28, 'n_estimators': 280, 'min_samples_leaf': 22, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 250, 'max_leaf_nodes': 46, 'min_samples_split': 115, 'n_estimators': 450, 'min_samples_leaf': 54, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 490, 'max_leaf_nodes': 27, 'min_samples_split': 51, 'n_estimators': 170, 'min_samples_leaf': 36, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 110, 'max_leaf_nodes': 39, 'min_samples_split': 91, 'n_estimators': 160, 'min_samples_leaf': 57, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 130, 'max_leaf_nodes': 20, 'min_samples_split': 112, 'n_estimators': 140, 'min_samples_leaf': 7, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 30, 'max_leaf_nodes': 45, 'min_samples_split': 135, 'n_estimators': 490, 'min_samples_leaf': 17, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 380, 'max_leaf_nodes': 52, 'min_samples_split': 58, 'n_estimators': 170, 'min_samples_leaf': 37, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 90, 'max_leaf_nodes': 59, 'min_samples_split': 31, 'n_estimators': 310, 'min_samples_leaf': 50, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 410, 'max_leaf_nodes': 46, 'min_samples_split': 22, 'n_estimators': 480, 'min_samples_leaf': 34, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 150, 'max_leaf_nodes': 29, 'min_samples_split': 54, 'n_estimators': 60, 'min_samples_leaf': 47, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 340, 'max_leaf_nodes': 48, 'min_samples_split': 35, 'n_estimators': 160, 'min_samples_leaf': 25, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 50, 'max_leaf_nodes': 25, 'min_samples_split': 135, 'n_estimators': 440, 'min_samples_leaf': 26, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 10, 'max_leaf_nodes': 12, 'min_samples_split': 121, 'n_estimators': 450, 'min_samples_leaf': 2, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 210, 'max_leaf_nodes': 29, 'min_samples_split': 5, 'n_estimators': 330, 'min_samples_leaf': 57, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 440, 'max_leaf_nodes': 30, 'min_samples_split': 82, 'n_estimators': 40, 'min_samples_leaf': 7, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 120, 'max_leaf_nodes': 29, 'min_samples_split': 112, 'n_estimators': 160, 'min_samples_leaf': 43, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 230, 'max_leaf_nodes': 4, 'min_samples_split': 55, 'n_estimators': 280, 'min_samples_leaf': 24, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 440, 'max_leaf_nodes': 44, 'min_samples_split': 81, 'n_estimators': 340, 'min_samples_leaf': 2, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 300, 'max_leaf_nodes': 15, 'min_samples_split': 55, 'n_estimators': 140, 'min_samples_leaf': 8, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 490, 'max_leaf_nodes': 40, 'min_samples_split': 62, 'n_estimators': 400, 'min_samples_leaf': 36, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 70, 'max_leaf_nodes': 33, 'min_samples_split': 32, 'n_estimators': 390, 'min_samples_leaf': 48, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 110, 'max_leaf_nodes': 42, 'min_samples_split': 139, 'n_estimators': 450, 'min_samples_leaf': 51, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 140, 'max_leaf_nodes': 27, 'min_samples_split': 28, 'n_estimators': 360, 'min_samples_leaf': 11, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 160, 'max_leaf_nodes': 26, 'min_samples_split': 135, 'n_estimators': 200, 'min_samples_leaf': 6, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 300, 'max_leaf_nodes': 13, 'min_samples_split': 75, 'n_estimators': 100, 'min_samples_leaf': 27, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 40, 'max_leaf_nodes': 49, 'min_samples_split': 57, 'n_estimators': 370, 'min_samples_leaf': 51, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 170, 'max_leaf_nodes': 46, 'min_samples_split': 19, 'n_estimators': 40, 'min_samples_leaf': 16, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 460, 'max_leaf_nodes': 7, 'min_samples_split': 50, 'n_estimators': 130, 'min_samples_leaf': 51, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 330, 'max_leaf_nodes': 46, 'min_samples_split': 50, 'n_estimators': 330, 'min_samples_leaf': 54, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 40, 'max_leaf_nodes': 30, 'min_samples_split': 76, 'n_estimators': 280, 'min_samples_leaf': 13, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 10, 'max_leaf_nodes': 36, 'min_samples_split': 80, 'n_estimators': 200, 'min_samples_leaf': 18, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 110, 'max_leaf_nodes': 29, 'min_samples_split': 41, 'n_estimators': 120, 'min_samples_leaf': 37, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 430, 'max_leaf_nodes': 51, 'min_samples_split': 48, 'n_estimators': 380, 'min_samples_leaf': 17, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 260, 'max_leaf_nodes': 21, 'min_samples_split': 101, 'n_estimators': 410, 'min_samples_leaf': 44, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 70, 'max_leaf_nodes': 8, 'min_samples_split': 131, 'n_estimators': 30, 'min_samples_leaf': 49, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 120, 'max_leaf_nodes': 45, 'min_samples_split': 93, 'n_estimators': 50, 'min_samples_leaf': 58, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 290, 'max_leaf_nodes': 52, 'min_samples_split': 58, 'n_estimators': 380, 'min_samples_leaf': 30, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 100, 'max_leaf_nodes': 5, 'min_samples_split': 90, 'n_estimators': 270, 'min_samples_leaf': 58, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 50, 'max_leaf_nodes': 18, 'min_samples_split': 8, 'n_estimators': 400, 'min_samples_leaf': 58, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 300, 'max_leaf_nodes': 50, 'min_samples_split': 32, 'n_estimators': 90, 'min_samples_leaf': 55, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 320, 'max_leaf_nodes': 57, 'min_samples_split': 94, 'n_estimators': 120, 'min_samples_leaf': 56, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 450, 'max_leaf_nodes': 23, 'min_samples_split': 142, 'n_estimators': 260, 'min_samples_leaf': 30, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 80, 'max_leaf_nodes': 25, 'min_samples_split': 72, 'n_estimators': 240, 'min_samples_leaf': 33, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 120, 'max_leaf_nodes': 43, 'min_samples_split': 59, 'n_estimators': 230, 'min_samples_leaf': 4, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 10, 'max_leaf_nodes': 50, 'min_samples_split': 13, 'n_estimators': 370, 'min_samples_leaf': 38, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 220, 'max_leaf_nodes': 33, 'min_samples_split': 36, 'n_estimators': 160, 'min_samples_leaf': 45, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 280, 'max_leaf_nodes': 28, 'min_samples_split': 33, 'n_estimators': 240, 'min_samples_leaf': 4, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 460, 'max_leaf_nodes': 43, 'min_samples_split': 8, 'n_estimators': 10, 'min_samples_leaf': 36, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 120, 'max_leaf_nodes': 52, 'min_samples_split': 90, 'n_estimators': 140, 'min_samples_leaf': 40, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 210, 'max_leaf_nodes': 53, 'min_samples_split': 68, 'n_estimators': 90, 'min_samples_leaf': 58, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 130, 'max_leaf_nodes': 40, 'min_samples_split': 60, 'n_estimators': 50, 'min_samples_leaf': 12, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 170, 'max_leaf_nodes': 22, 'min_samples_split': 88, 'n_estimators': 400, 'min_samples_leaf': 18, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 20, 'max_leaf_nodes': 38, 'min_samples_split': 113, 'n_estimators': 470, 'min_samples_leaf': 41, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 440, 'max_leaf_nodes': 54, 'min_samples_split': 142, 'n_estimators': 40, 'min_samples_leaf': 58, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 90, 'max_leaf_nodes': 45, 'min_samples_split': 31, 'n_estimators': 360, 'min_samples_leaf': 9, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 430, 'max_leaf_nodes': 53, 'min_samples_split': 43, 'n_estimators': 330, 'min_samples_leaf': 50, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 280, 'max_leaf_nodes': 25, 'min_samples_split': 97, 'n_estimators': 90, 'min_samples_leaf': 14, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 20, 'max_leaf_nodes': 4, 'min_samples_split': 35, 'n_estimators': 40, 'min_samples_leaf': 46, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 300, 'max_leaf_nodes': 26, 'min_samples_split': 96, 'n_estimators': 110, 'min_samples_leaf': 23, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 190, 'max_leaf_nodes': 42, 'min_samples_split': 91, 'n_estimators': 190, 'min_samples_leaf': 56, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 40, 'max_leaf_nodes': 3, 'min_samples_split': 107, 'n_estimators': 120, 'min_samples_leaf': 32, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 110, 'max_leaf_nodes': 28, 'min_samples_split': 108, 'n_estimators': 410, 'min_samples_leaf': 32, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 460, 'max_leaf_nodes': 14, 'min_samples_split': 41, 'n_estimators': 180, 'min_samples_leaf': 9, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 10, 'max_leaf_nodes': 37, 'min_samples_split': 99, 'n_estimators': 320, 'min_samples_leaf': 14, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 140, 'max_leaf_nodes': 50, 'min_samples_split': 38, 'n_estimators': 120, 'min_samples_leaf': 9, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 410, 'max_leaf_nodes': 18, 'min_samples_split': 108, 'n_estimators': 160, 'min_samples_leaf': 51, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 230, 'max_leaf_nodes': 30, 'min_samples_split': 47, 'n_estimators': 310, 'min_samples_leaf': 4, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 140, 'max_leaf_nodes': 17, 'min_samples_split': 142, 'n_estimators': 20, 'min_samples_leaf': 45, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 440, 'max_leaf_nodes': 14, 'min_samples_split': 118, 'n_estimators': 60, 'min_samples_leaf': 10, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 20, 'max_leaf_nodes': 16, 'min_samples_split': 36, 'n_estimators': 220, 'min_samples_leaf': 13, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 370, 'max_leaf_nodes': 9, 'min_samples_split': 82, 'n_estimators': 260, 'min_samples_leaf': 24, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 300, 'max_leaf_nodes': 4, 'min_samples_split': 7, 'n_estimators': 280, 'min_samples_leaf': 10, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 320, 'max_leaf_nodes': 38, 'min_samples_split': 32, 'n_estimators': 140, 'min_samples_leaf': 15, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 40, 'max_leaf_nodes': 39, 'min_samples_split': 58, 'n_estimators': 250, 'min_samples_leaf': 35, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 410, 'max_leaf_nodes': 46, 'min_samples_split': 77, 'n_estimators': 180, 'min_samples_leaf': 26, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 180, 'max_leaf_nodes': 30, 'min_samples_split': 107, 'n_estimators': 120, 'min_samples_leaf': 58, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 250, 'max_leaf_nodes': 50, 'min_samples_split': 118, 'n_estimators': 110, 'min_samples_leaf': 27, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 190, 'max_leaf_nodes': 52, 'min_samples_split': 3, 'n_estimators': 390, 'min_samples_leaf': 45, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 460, 'max_leaf_nodes': 2, 'min_samples_split': 135, 'n_estimators': 50, 'min_samples_leaf': 39, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 390, 'max_leaf_nodes': 4, 'min_samples_split': 13, 'n_estimators': 190, 'min_samples_leaf': 52, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 360, 'max_leaf_nodes': 13, 'min_samples_split': 33, 'n_estimators': 400, 'min_samples_leaf': 43, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 440, 'max_leaf_nodes': 14, 'min_samples_split': 31, 'n_estimators': 190, 'min_samples_leaf': 42, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 270, 'max_leaf_nodes': 18, 'min_samples_split': 30, 'n_estimators': 30, 'min_samples_leaf': 54, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 200, 'max_leaf_nodes': 46, 'min_samples_split': 123, 'n_estimators': 270, 'min_samples_leaf': 27, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 330, 'max_leaf_nodes': 59, 'min_samples_split': 130, 'n_estimators': 210, 'min_samples_leaf': 8, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 90, 'max_leaf_nodes': 8, 'min_samples_split': 5, 'n_estimators': 250, 'min_samples_leaf': 14, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 340, 'max_leaf_nodes': 35, 'min_samples_split': 144, 'n_estimators': 150, 'min_samples_leaf': 28, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 440, 'max_leaf_nodes': 21, 'min_samples_split': 37, 'n_estimators': 220, 'min_samples_leaf': 25, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 410, 'max_leaf_nodes': 15, 'min_samples_split': 24, 'n_estimators': 90, 'min_samples_leaf': 12, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 160, 'max_leaf_nodes': 37, 'min_samples_split': 94, 'n_estimators': 100, 'min_samples_leaf': 12, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 410, 'max_leaf_nodes': 15, 'min_samples_split': 41, 'n_estimators': 260, 'min_samples_leaf': 24, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 430, 'max_leaf_nodes': 36, 'min_samples_split': 112, 'n_estimators': 70, 'min_samples_leaf': 16, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 100, 'max_leaf_nodes': 56, 'min_samples_split': 97, 'n_estimators': 490, 'min_samples_leaf': 28, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 280, 'max_leaf_nodes': 9, 'min_samples_split': 75, 'n_estimators': 30, 'min_samples_leaf': 49, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 300, 'max_leaf_nodes': 54, 'min_samples_split': 71, 'n_estimators': 40, 'min_samples_leaf': 39, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 420, 'max_leaf_nodes': 41, 'min_samples_split': 49, 'n_estimators': 160, 'min_samples_leaf': 47, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 80, 'max_leaf_nodes': 7, 'min_samples_split': 63, 'n_estimators': 420, 'min_samples_leaf': 30, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 420, 'max_leaf_nodes': 24, 'min_samples_split': 128, 'n_estimators': 220, 'min_samples_leaf': 59, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 70, 'max_leaf_nodes': 25, 'min_samples_split': 95, 'n_estimators': 20, 'min_samples_leaf': 56, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 210, 'max_leaf_nodes': 31, 'min_samples_split': 27, 'n_estimators': 260, 'min_samples_leaf': 52, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 180, 'max_leaf_nodes': 36, 'min_samples_split': 98, 'n_estimators': 320, 'min_samples_leaf': 20, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 390, 'max_leaf_nodes': 14, 'min_samples_split': 102, 'n_estimators': 250, 'min_samples_leaf': 58, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 110, 'max_leaf_nodes': 54, 'min_samples_split': 88, 'n_estimators': 90, 'min_samples_leaf': 26, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 430, 'max_leaf_nodes': 35, 'min_samples_split': 118, 'n_estimators': 310, 'min_samples_leaf': 30, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 280, 'max_leaf_nodes': 59, 'min_samples_split': 82, 'n_estimators': 140, 'min_samples_leaf': 35, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 430, 'max_leaf_nodes': 13, 'min_samples_split': 130, 'n_estimators': 180, 'min_samples_leaf': 18, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 340, 'max_leaf_nodes': 9, 'min_samples_split': 55, 'n_estimators': 270, 'min_samples_leaf': 40, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 120, 'max_leaf_nodes': 29, 'min_samples_split': 8, 'n_estimators': 140, 'min_samples_leaf': 50, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 310, 'max_leaf_nodes': 18, 'min_samples_split': 79, 'n_estimators': 110, 'min_samples_leaf': 58, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 200, 'max_leaf_nodes': 21, 'min_samples_split': 77, 'n_estimators': 150, 'min_samples_leaf': 33, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 130, 'max_leaf_nodes': 34, 'min_samples_split': 57, 'n_estimators': 150, 'min_samples_leaf': 27, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 350, 'max_leaf_nodes': 30, 'min_samples_split': 15, 'n_estimators': 290, 'min_samples_leaf': 56, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 200, 'max_leaf_nodes': 24, 'min_samples_split': 114, 'n_estimators': 170, 'min_samples_leaf': 46, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 180, 'max_leaf_nodes': 25, 'min_samples_split': 28, 'n_estimators': 50, 'min_samples_leaf': 40, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 140, 'max_leaf_nodes': 18, 'min_samples_split': 14, 'n_estimators': 420, 'min_samples_leaf': 58, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 140, 'max_leaf_nodes': 17, 'min_samples_split': 19, 'n_estimators': 440, 'min_samples_leaf': 53, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 150, 'max_leaf_nodes': 22, 'min_samples_split': 89, 'n_estimators': 330, 'min_samples_leaf': 13, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 270, 'max_leaf_nodes': 14, 'min_samples_split': 140, 'n_estimators': 200, 'min_samples_leaf': 48, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 240, 'max_leaf_nodes': 13, 'min_samples_split': 7, 'n_estimators': 140, 'min_samples_leaf': 27, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 440, 'max_leaf_nodes': 59, 'min_samples_split': 86, 'n_estimators': 340, 'min_samples_leaf': 52, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 230, 'max_leaf_nodes': 28, 'min_samples_split': 125, 'n_estimators': 40, 'min_samples_leaf': 30, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 90, 'max_leaf_nodes': 29, 'min_samples_split': 12, 'n_estimators': 110, 'min_samples_leaf': 41, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 30, 'max_leaf_nodes': 41, 'min_samples_split': 51, 'n_estimators': 150, 'min_samples_leaf': 27, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 150, 'max_leaf_nodes': 43, 'min_samples_split': 79, 'n_estimators': 240, 'min_samples_leaf': 50, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 380, 'max_leaf_nodes': 3, 'min_samples_split': 61, 'n_estimators': 420, 'min_samples_leaf': 36, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 300, 'max_leaf_nodes': 2, 'min_samples_split': 106, 'n_estimators': 190, 'min_samples_leaf': 39, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 280, 'max_leaf_nodes': 58, 'min_samples_split': 88, 'n_estimators': 360, 'min_samples_leaf': 34, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 110, 'max_leaf_nodes': 40, 'min_samples_split': 13, 'n_estimators': 90, 'min_samples_leaf': 34, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 330, 'max_leaf_nodes': 6, 'min_samples_split': 90, 'n_estimators': 10, 'min_samples_leaf': 19, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 470, 'max_leaf_nodes': 46, 'min_samples_split': 42, 'n_estimators': 90, 'min_samples_leaf': 44, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 400, 'max_leaf_nodes': 34, 'min_samples_split': 117, 'n_estimators': 130, 'min_samples_leaf': 21, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 270, 'max_leaf_nodes': 52, 'min_samples_split': 41, 'n_estimators': 380, 'min_samples_leaf': 34, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 130, 'max_leaf_nodes': 15, 'min_samples_split': 9, 'n_estimators': 310, 'min_samples_leaf': 43, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 320, 'max_leaf_nodes': 19, 'min_samples_split': 63, 'n_estimators': 300, 'min_samples_leaf': 38, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 130, 'max_leaf_nodes': 4, 'min_samples_split': 135, 'n_estimators': 430, 'min_samples_leaf': 37, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 170, 'max_leaf_nodes': 25, 'min_samples_split': 104, 'n_estimators': 240, 'min_samples_leaf': 29, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 280, 'max_leaf_nodes': 4, 'min_samples_split': 84, 'n_estimators': 470, 'min_samples_leaf': 4, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 450, 'max_leaf_nodes': 8, 'min_samples_split': 122, 'n_estimators': 260, 'min_samples_leaf': 27, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 150, 'max_leaf_nodes': 50, 'min_samples_split': 97, 'n_estimators': 90, 'min_samples_leaf': 59, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 60, 'max_leaf_nodes': 58, 'min_samples_split': 30, 'n_estimators': 260, 'min_samples_leaf': 21, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 90, 'max_leaf_nodes': 16, 'min_samples_split': 30, 'n_estimators': 270, 'min_samples_leaf': 32, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 120, 'max_leaf_nodes': 4, 'min_samples_split': 95, 'n_estimators': 40, 'min_samples_leaf': 4, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 470, 'max_leaf_nodes': 51, 'min_samples_split': 109, 'n_estimators': 110, 'min_samples_leaf': 37, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 20, 'max_leaf_nodes': 43, 'min_samples_split': 35, 'n_estimators': 90, 'min_samples_leaf': 6, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 390, 'max_leaf_nodes': 28, 'min_samples_split': 149, 'n_estimators': 40, 'min_samples_leaf': 36, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 190, 'max_leaf_nodes': 35, 'min_samples_split': 80, 'n_estimators': 200, 'min_samples_leaf': 10, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 250, 'max_leaf_nodes': 20, 'min_samples_split': 65, 'n_estimators': 220, 'min_samples_leaf': 42, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 60, 'max_leaf_nodes': 28, 'min_samples_split': 19, 'n_estimators': 200, 'min_samples_leaf': 20, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 420, 'max_leaf_nodes': 12, 'min_samples_split': 77, 'n_estimators': 280, 'min_samples_leaf': 29, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 90, 'max_leaf_nodes': 6, 'min_samples_split': 74, 'n_estimators': 220, 'min_samples_leaf': 56, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 130, 'max_leaf_nodes': 44, 'min_samples_split': 28, 'n_estimators': 480, 'min_samples_leaf': 58, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 490, 'max_leaf_nodes': 47, 'min_samples_split': 78, 'n_estimators': 190, 'min_samples_leaf': 15, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 380, 'max_leaf_nodes': 23, 'min_samples_split': 116, 'n_estimators': 490, 'min_samples_leaf': 34, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 30, 'max_leaf_nodes': 59, 'min_samples_split': 72, 'n_estimators': 20, 'min_samples_leaf': 19, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 440, 'max_leaf_nodes': 47, 'min_samples_split': 32, 'n_estimators': 470, 'min_samples_leaf': 40, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 110, 'max_leaf_nodes': 12, 'min_samples_split': 121, 'n_estimators': 230, 'min_samples_leaf': 48, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 440, 'max_leaf_nodes': 19, 'min_samples_split': 5, 'n_estimators': 410, 'min_samples_leaf': 7, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 330, 'max_leaf_nodes': 39, 'min_samples_split': 51, 'n_estimators': 120, 'min_samples_leaf': 30, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 410, 'max_leaf_nodes': 42, 'min_samples_split': 26, 'n_estimators': 250, 'min_samples_leaf': 45, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 370, 'max_leaf_nodes': 24, 'min_samples_split': 87, 'n_estimators': 200, 'min_samples_leaf': 34, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 440, 'max_leaf_nodes': 42, 'min_samples_split': 119, 'n_estimators': 270, 'min_samples_leaf': 39, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 310, 'max_leaf_nodes': 56, 'min_samples_split': 89, 'n_estimators': 460, 'min_samples_leaf': 42, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 420, 'max_leaf_nodes': 33, 'min_samples_split': 16, 'n_estimators': 240, 'min_samples_leaf': 14, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 260, 'max_leaf_nodes': 56, 'min_samples_split': 2, 'n_estimators': 330, 'min_samples_leaf': 6, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 450, 'max_leaf_nodes': 39, 'min_samples_split': 148, 'n_estimators': 370, 'min_samples_leaf': 3, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 80, 'max_leaf_nodes': 15, 'min_samples_split': 117, 'n_estimators': 210, 'min_samples_leaf': 3, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 200, 'max_leaf_nodes': 30, 'min_samples_split': 119, 'n_estimators': 140, 'min_samples_leaf': 44, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 230, 'max_leaf_nodes': 55, 'min_samples_split': 116, 'n_estimators': 230, 'min_samples_leaf': 8, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 140, 'max_leaf_nodes': 7, 'min_samples_split': 126, 'n_estimators': 150, 'min_samples_leaf': 55, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 250, 'max_leaf_nodes': 54, 'min_samples_split': 78, 'n_estimators': 220, 'min_samples_leaf': 46, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 480, 'max_leaf_nodes': 24, 'min_samples_split': 92, 'n_estimators': 40, 'min_samples_leaf': 8, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 10, 'max_leaf_nodes': 57, 'min_samples_split': 125, 'n_estimators': 180, 'min_samples_leaf': 2, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 300, 'max_leaf_nodes': 7, 'min_samples_split': 47, 'n_estimators': 210, 'min_samples_leaf': 42, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 10, 'max_leaf_nodes': 24, 'min_samples_split': 4, 'n_estimators': 410, 'min_samples_leaf': 21, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 480, 'max_leaf_nodes': 47, 'min_samples_split': 68, 'n_estimators': 30, 'min_samples_leaf': 5, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 300, 'max_leaf_nodes': 24, 'min_samples_split': 22, 'n_estimators': 150, 'min_samples_leaf': 25, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 390, 'max_leaf_nodes': 16, 'min_samples_split': 49, 'n_estimators': 190, 'min_samples_leaf': 40, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 340, 'max_leaf_nodes': 37, 'min_samples_split': 129, 'n_estimators': 210, 'min_samples_leaf': 40, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 170, 'max_leaf_nodes': 31, 'min_samples_split': 24, 'n_estimators': 220, 'min_samples_leaf': 38, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 150, 'max_leaf_nodes': 57, 'min_samples_split': 61, 'n_estimators': 430, 'min_samples_leaf': 7, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 450, 'max_leaf_nodes': 2, 'min_samples_split': 138, 'n_estimators': 460, 'min_samples_leaf': 52, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 20, 'max_leaf_nodes': 19, 'min_samples_split': 5, 'n_estimators': 180, 'min_samples_leaf': 14, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 390, 'max_leaf_nodes': 11, 'min_samples_split': 103, 'n_estimators': 380, 'min_samples_leaf': 27, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 470, 'max_leaf_nodes': 31, 'min_samples_split': 98, 'n_estimators': 320, 'min_samples_leaf': 46, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 400, 'max_leaf_nodes': 55, 'min_samples_split': 116, 'n_estimators': 420, 'min_samples_leaf': 51, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 160, 'max_leaf_nodes': 57, 'min_samples_split': 26, 'n_estimators': 180, 'min_samples_leaf': 45, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 450, 'max_leaf_nodes': 23, 'min_samples_split': 2, 'n_estimators': 180, 'min_samples_leaf': 56, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 110, 'max_leaf_nodes': 17, 'min_samples_split': 16, 'n_estimators': 240, 'min_samples_leaf': 37, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 190, 'max_leaf_nodes': 43, 'min_samples_split': 114, 'n_estimators': 50, 'min_samples_leaf': 50, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 260, 'max_leaf_nodes': 40, 'min_samples_split': 25, 'n_estimators': 50, 'min_samples_leaf': 13, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 50, 'max_leaf_nodes': 6, 'min_samples_split': 24, 'n_estimators': 270, 'min_samples_leaf': 56, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 210, 'max_leaf_nodes': 34, 'min_samples_split': 123, 'n_estimators': 10, 'min_samples_leaf': 53, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 390, 'max_leaf_nodes': 29, 'min_samples_split': 96, 'n_estimators': 470, 'min_samples_leaf': 26, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 200, 'max_leaf_nodes': 29, 'min_samples_split': 117, 'n_estimators': 50, 'min_samples_leaf': 45, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 250, 'max_leaf_nodes': 38, 'min_samples_split': 76, 'n_estimators': 450, 'min_samples_leaf': 27, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 320, 'max_leaf_nodes': 3, 'min_samples_split': 76, 'n_estimators': 120, 'min_samples_leaf': 15, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 310, 'max_leaf_nodes': 13, 'min_samples_split': 21, 'n_estimators': 250, 'min_samples_leaf': 54, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 280, 'max_leaf_nodes': 14, 'min_samples_split': 2, 'n_estimators': 140, 'min_samples_leaf': 46, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 280, 'max_leaf_nodes': 27, 'min_samples_split': 43, 'n_estimators': 10, 'min_samples_leaf': 21, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 250, 'max_leaf_nodes': 48, 'min_samples_split': 47, 'n_estimators': 260, 'min_samples_leaf': 29, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 60, 'max_leaf_nodes': 53, 'min_samples_split': 19, 'n_estimators': 290, 'min_samples_leaf': 13, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 70, 'max_leaf_nodes': 38, 'min_samples_split': 60, 'n_estimators': 270, 'min_samples_leaf': 22, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 100, 'max_leaf_nodes': 13, 'min_samples_split': 112, 'n_estimators': 330, 'min_samples_leaf': 27, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 310, 'max_leaf_nodes': 10, 'min_samples_split': 62, 'n_estimators': 30, 'min_samples_leaf': 16, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 230, 'max_leaf_nodes': 56, 'min_samples_split': 95, 'n_estimators': 390, 'min_samples_leaf': 7, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 420, 'max_leaf_nodes': 50, 'min_samples_split': 146, 'n_estimators': 470, 'min_samples_leaf': 16, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 320, 'max_leaf_nodes': 42, 'min_samples_split': 52, 'n_estimators': 120, 'min_samples_leaf': 45, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 240, 'max_leaf_nodes': 20, 'min_samples_split': 99, 'n_estimators': 120, 'min_samples_leaf': 4, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 350, 'max_leaf_nodes': 35, 'min_samples_split': 117, 'n_estimators': 430, 'min_samples_leaf': 44, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 430, 'max_leaf_nodes': 37, 'min_samples_split': 4, 'n_estimators': 210, 'min_samples_leaf': 51, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 180, 'max_leaf_nodes': 28, 'min_samples_split': 132, 'n_estimators': 370, 'min_samples_leaf': 7, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 110, 'max_leaf_nodes': 18, 'min_samples_split': 91, 'n_estimators': 320, 'min_samples_leaf': 34, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 90, 'max_leaf_nodes': 11, 'min_samples_split': 10, 'n_estimators': 100, 'min_samples_leaf': 29, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 80, 'max_leaf_nodes': 10, 'min_samples_split': 148, 'n_estimators': 110, 'min_samples_leaf': 37, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 410, 'max_leaf_nodes': 42, 'min_samples_split': 19, 'n_estimators': 200, 'min_samples_leaf': 33, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 230, 'max_leaf_nodes': 17, 'min_samples_split': 113, 'n_estimators': 140, 'min_samples_leaf': 34, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 470, 'max_leaf_nodes': 50, 'min_samples_split': 89, 'n_estimators': 170, 'min_samples_leaf': 32, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 10, 'max_leaf_nodes': 13, 'min_samples_split': 88, 'n_estimators': 210, 'min_samples_leaf': 48, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 120, 'max_leaf_nodes': 4, 'min_samples_split': 30, 'n_estimators': 390, 'min_samples_leaf': 10, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 310, 'max_leaf_nodes': 18, 'min_samples_split': 27, 'n_estimators': 290, 'min_samples_leaf': 43, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 60, 'max_leaf_nodes': 14, 'min_samples_split': 113, 'n_estimators': 200, 'min_samples_leaf': 52, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 20, 'max_leaf_nodes': 15, 'min_samples_split': 45, 'n_estimators': 280, 'min_samples_leaf': 48, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 440, 'max_leaf_nodes': 22, 'min_samples_split': 101, 'n_estimators': 150, 'min_samples_leaf': 18, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 170, 'max_leaf_nodes': 38, 'min_samples_split': 122, 'n_estimators': 440, 'min_samples_leaf': 54, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 230, 'max_leaf_nodes': 44, 'min_samples_split': 142, 'n_estimators': 40, 'min_samples_leaf': 26, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 330, 'max_leaf_nodes': 52, 'min_samples_split': 16, 'n_estimators': 270, 'min_samples_leaf': 59, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 330, 'max_leaf_nodes': 56, 'min_samples_split': 130, 'n_estimators': 310, 'min_samples_leaf': 53, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 20, 'max_leaf_nodes': 10, 'min_samples_split': 121, 'n_estimators': 300, 'min_samples_leaf': 31, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 350, 'max_leaf_nodes': 56, 'min_samples_split': 62, 'n_estimators': 250, 'min_samples_leaf': 49, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 410, 'max_leaf_nodes': 53, 'min_samples_split': 77, 'n_estimators': 400, 'min_samples_leaf': 39, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 130, 'max_leaf_nodes': 56, 'min_samples_split': 73, 'n_estimators': 220, 'min_samples_leaf': 5, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 400, 'max_leaf_nodes': 53, 'min_samples_split': 25, 'n_estimators': 30, 'min_samples_leaf': 47, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 150, 'max_leaf_nodes': 34, 'min_samples_split': 99, 'n_estimators': 470, 'min_samples_leaf': 15, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 390, 'max_leaf_nodes': 24, 'min_samples_split': 57, 'n_estimators': 20, 'min_samples_leaf': 32, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 370, 'max_leaf_nodes': 5, 'min_samples_split': 142, 'n_estimators': 170, 'min_samples_leaf': 59, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 470, 'max_leaf_nodes': 5, 'min_samples_split': 107, 'n_estimators': 130, 'min_samples_leaf': 45, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 300, 'max_leaf_nodes': 17, 'min_samples_split': 42, 'n_estimators': 210, 'min_samples_leaf': 44, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 240, 'max_leaf_nodes': 19, 'min_samples_split': 74, 'n_estimators': 190, 'min_samples_leaf': 57, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 110, 'max_leaf_nodes': 28, 'min_samples_split': 101, 'n_estimators': 340, 'min_samples_leaf': 59, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 280, 'max_leaf_nodes': 31, 'min_samples_split': 148, 'n_estimators': 70, 'min_samples_leaf': 55, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 390, 'max_leaf_nodes': 43, 'min_samples_split': 23, 'n_estimators': 160, 'min_samples_leaf': 21, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 190, 'max_leaf_nodes': 54, 'min_samples_split': 127, 'n_estimators': 370, 'min_samples_leaf': 52, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 360, 'max_leaf_nodes': 41, 'min_samples_split': 114, 'n_estimators': 470, 'min_samples_leaf': 9, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 470, 'max_leaf_nodes': 42, 'min_samples_split': 133, 'n_estimators': 460, 'min_samples_leaf': 2, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 440, 'max_leaf_nodes': 32, 'min_samples_split': 36, 'n_estimators': 450, 'min_samples_leaf': 2, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 80, 'max_leaf_nodes': 6, 'min_samples_split': 83, 'n_estimators': 490, 'min_samples_leaf': 35, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 70, 'max_leaf_nodes': 22, 'min_samples_split': 140, 'n_estimators': 100, 'min_samples_leaf': 11, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 110, 'max_leaf_nodes': 31, 'min_samples_split': 127, 'n_estimators': 30, 'min_samples_leaf': 11, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 150, 'max_leaf_nodes': 3, 'min_samples_split': 63, 'n_estimators': 230, 'min_samples_leaf': 3, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 70, 'max_leaf_nodes': 25, 'min_samples_split': 20, 'n_estimators': 320, 'min_samples_leaf': 43, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 360, 'max_leaf_nodes': 2, 'min_samples_split': 126, 'n_estimators': 150, 'min_samples_leaf': 47, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 270, 'max_leaf_nodes': 44, 'min_samples_split': 120, 'n_estimators': 160, 'min_samples_leaf': 27, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 140, 'max_leaf_nodes': 24, 'min_samples_split': 146, 'n_estimators': 110, 'min_samples_leaf': 50, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 470, 'max_leaf_nodes': 30, 'min_samples_split': 104, 'n_estimators': 430, 'min_samples_leaf': 8, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 250, 'max_leaf_nodes': 41, 'min_samples_split': 132, 'n_estimators': 430, 'min_samples_leaf': 30, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 400, 'max_leaf_nodes': 54, 'min_samples_split': 136, 'n_estimators': 10, 'min_samples_leaf': 39, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 120, 'max_leaf_nodes': 4, 'min_samples_split': 11, 'n_estimators': 300, 'min_samples_leaf': 33, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 80, 'max_leaf_nodes': 21, 'min_samples_split': 38, 'n_estimators': 460, 'min_samples_leaf': 33, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 420, 'max_leaf_nodes': 45, 'min_samples_split': 32, 'n_estimators': 370, 'min_samples_leaf': 5, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 250, 'max_leaf_nodes': 22, 'min_samples_split': 47, 'n_estimators': 280, 'min_samples_leaf': 54, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 470, 'max_leaf_nodes': 26, 'min_samples_split': 127, 'n_estimators': 210, 'min_samples_leaf': 9, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 30, 'max_leaf_nodes': 9, 'min_samples_split': 55, 'n_estimators': 200, 'min_samples_leaf': 13, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 110, 'max_leaf_nodes': 22, 'min_samples_split': 30, 'n_estimators': 360, 'min_samples_leaf': 32, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 160, 'max_leaf_nodes': 33, 'min_samples_split': 126, 'n_estimators': 310, 'min_samples_leaf': 32, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 400, 'max_leaf_nodes': 21, 'min_samples_split': 39, 'n_estimators': 360, 'min_samples_leaf': 32, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 420, 'max_leaf_nodes': 28, 'min_samples_split': 125, 'n_estimators': 470, 'min_samples_leaf': 44, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 20, 'max_leaf_nodes': 27, 'min_samples_split': 64, 'n_estimators': 420, 'min_samples_leaf': 31, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 140, 'max_leaf_nodes': 35, 'min_samples_split': 112, 'n_estimators': 400, 'min_samples_leaf': 27, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 390, 'max_leaf_nodes': 55, 'min_samples_split': 30, 'n_estimators': 220, 'min_samples_leaf': 35, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 410, 'max_leaf_nodes': 36, 'min_samples_split': 78, 'n_estimators': 330, 'min_samples_leaf': 34, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 300, 'max_leaf_nodes': 13, 'min_samples_split': 136, 'n_estimators': 250, 'min_samples_leaf': 41, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 40, 'max_leaf_nodes': 2, 'min_samples_split': 36, 'n_estimators': 120, 'min_samples_leaf': 53, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 170, 'max_leaf_nodes': 54, 'min_samples_split': 91, 'n_estimators': 430, 'min_samples_leaf': 52, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 440, 'max_leaf_nodes': 10, 'min_samples_split': 39, 'n_estimators': 10, 'min_samples_leaf': 56, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 350, 'max_leaf_nodes': 40, 'min_samples_split': 144, 'n_estimators': 20, 'min_samples_leaf': 55, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 190, 'max_leaf_nodes': 2, 'min_samples_split': 79, 'n_estimators': 240, 'min_samples_leaf': 19, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 340, 'max_leaf_nodes': 10, 'min_samples_split': 16, 'n_estimators': 490, 'min_samples_leaf': 46, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 230, 'max_leaf_nodes': 37, 'min_samples_split': 89, 'n_estimators': 20, 'min_samples_leaf': 25, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 80, 'max_leaf_nodes': 12, 'min_samples_split': 78, 'n_estimators': 110, 'min_samples_leaf': 50, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 280, 'max_leaf_nodes': 48, 'min_samples_split': 36, 'n_estimators': 350, 'min_samples_leaf': 36, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 250, 'max_leaf_nodes': 21, 'min_samples_split': 59, 'n_estimators': 320, 'min_samples_leaf': 43, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 100, 'max_leaf_nodes': 11, 'min_samples_split': 37, 'n_estimators': 140, 'min_samples_leaf': 45, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 350, 'max_leaf_nodes': 9, 'min_samples_split': 37, 'n_estimators': 90, 'min_samples_leaf': 11, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 130, 'max_leaf_nodes': 41, 'min_samples_split': 21, 'n_estimators': 150, 'min_samples_leaf': 53, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 40, 'max_leaf_nodes': 24, 'min_samples_split': 27, 'n_estimators': 240, 'min_samples_leaf': 59, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 80, 'max_leaf_nodes': 42, 'min_samples_split': 113, 'n_estimators': 160, 'min_samples_leaf': 51, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 360, 'max_leaf_nodes': 31, 'min_samples_split': 149, 'n_estimators': 410, 'min_samples_leaf': 29, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 280, 'max_leaf_nodes': 33, 'min_samples_split': 80, 'n_estimators': 280, 'min_samples_leaf': 9, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 470, 'max_leaf_nodes': 12, 'min_samples_split': 87, 'n_estimators': 20, 'min_samples_leaf': 53, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 10, 'max_leaf_nodes': 40, 'min_samples_split': 16, 'n_estimators': 330, 'min_samples_leaf': 29, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 360, 'max_leaf_nodes': 58, 'min_samples_split': 68, 'n_estimators': 490, 'min_samples_leaf': 37, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 460, 'max_leaf_nodes': 47, 'min_samples_split': 68, 'n_estimators': 170, 'min_samples_leaf': 51, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 450, 'max_leaf_nodes': 40, 'min_samples_split': 138, 'n_estimators': 280, 'min_samples_leaf': 17, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 390, 'max_leaf_nodes': 52, 'min_samples_split': 18, 'n_estimators': 160, 'min_samples_leaf': 17, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 350, 'max_leaf_nodes': 44, 'min_samples_split': 46, 'n_estimators': 420, 'min_samples_leaf': 23, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 380, 'max_leaf_nodes': 50, 'min_samples_split': 113, 'n_estimators': 150, 'min_samples_leaf': 32, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 180, 'max_leaf_nodes': 33, 'min_samples_split': 47, 'n_estimators': 350, 'min_samples_leaf': 46, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 110, 'max_leaf_nodes': 13, 'min_samples_split': 146, 'n_estimators': 430, 'min_samples_leaf': 33, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 140, 'max_leaf_nodes': 20, 'min_samples_split': 124, 'n_estimators': 170, 'min_samples_leaf': 7, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 160, 'max_leaf_nodes': 16, 'min_samples_split': 103, 'n_estimators': 320, 'min_samples_leaf': 9, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 140, 'max_leaf_nodes': 52, 'min_samples_split': 68, 'n_estimators': 10, 'min_samples_leaf': 35, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 220, 'max_leaf_nodes': 9, 'min_samples_split': 6, 'n_estimators': 110, 'min_samples_leaf': 45, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 490, 'max_leaf_nodes': 37, 'min_samples_split': 73, 'n_estimators': 350, 'min_samples_leaf': 44, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 170, 'max_leaf_nodes': 48, 'min_samples_split': 104, 'n_estimators': 80, 'min_samples_leaf': 57, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 120, 'max_leaf_nodes': 39, 'min_samples_split': 119, 'n_estimators': 130, 'min_samples_leaf': 9, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 390, 'max_leaf_nodes': 37, 'min_samples_split': 14, 'n_estimators': 270, 'min_samples_leaf': 32, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 160, 'max_leaf_nodes': 7, 'min_samples_split': 112, 'n_estimators': 20, 'min_samples_leaf': 36, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 250, 'max_leaf_nodes': 19, 'min_samples_split': 56, 'n_estimators': 250, 'min_samples_leaf': 46, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 90, 'max_leaf_nodes': 21, 'min_samples_split': 49, 'n_estimators': 190, 'min_samples_leaf': 16, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 90, 'max_leaf_nodes': 31, 'min_samples_split': 93, 'n_estimators': 360, 'min_samples_leaf': 9, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 330, 'max_leaf_nodes': 2, 'min_samples_split': 20, 'n_estimators': 340, 'min_samples_leaf': 52, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 350, 'max_leaf_nodes': 20, 'min_samples_split': 139, 'n_estimators': 100, 'min_samples_leaf': 30, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 220, 'max_leaf_nodes': 50, 'min_samples_split': 131, 'n_estimators': 280, 'min_samples_leaf': 39, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 240, 'max_leaf_nodes': 46, 'min_samples_split': 108, 'n_estimators': 80, 'min_samples_leaf': 12, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 40, 'max_leaf_nodes': 14, 'min_samples_split': 31, 'n_estimators': 470, 'min_samples_leaf': 47, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 400, 'max_leaf_nodes': 22, 'min_samples_split': 85, 'n_estimators': 420, 'min_samples_leaf': 8, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 30, 'max_leaf_nodes': 17, 'min_samples_split': 58, 'n_estimators': 290, 'min_samples_leaf': 48, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 60, 'max_leaf_nodes': 42, 'min_samples_split': 42, 'n_estimators': 440, 'min_samples_leaf': 55, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 190, 'max_leaf_nodes': 53, 'min_samples_split': 138, 'n_estimators': 470, 'min_samples_leaf': 27, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 270, 'max_leaf_nodes': 4, 'min_samples_split': 75, 'n_estimators': 480, 'min_samples_leaf': 26, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 50, 'max_leaf_nodes': 4, 'min_samples_split': 111, 'n_estimators': 320, 'min_samples_leaf': 39, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 260, 'max_leaf_nodes': 28, 'min_samples_split': 23, 'n_estimators': 170, 'min_samples_leaf': 53, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 160, 'max_leaf_nodes': 37, 'min_samples_split': 126, 'n_estimators': 210, 'min_samples_leaf': 12, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 170, 'max_leaf_nodes': 5, 'min_samples_split': 127, 'n_estimators': 60, 'min_samples_leaf': 44, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 440, 'max_leaf_nodes': 31, 'min_samples_split': 91, 'n_estimators': 20, 'min_samples_leaf': 58, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 450, 'max_leaf_nodes': 51, 'min_samples_split': 82, 'n_estimators': 220, 'min_samples_leaf': 37, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 90, 'max_leaf_nodes': 50, 'min_samples_split': 55, 'n_estimators': 180, 'min_samples_leaf': 50, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 420, 'max_leaf_nodes': 56, 'min_samples_split': 142, 'n_estimators': 430, 'min_samples_leaf': 44, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 240, 'max_leaf_nodes': 55, 'min_samples_split': 138, 'n_estimators': 170, 'min_samples_leaf': 5, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 160, 'max_leaf_nodes': 9, 'min_samples_split': 100, 'n_estimators': 150, 'min_samples_leaf': 2, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 90, 'max_leaf_nodes': 59, 'min_samples_split': 105, 'n_estimators': 80, 'min_samples_leaf': 32, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 80, 'max_leaf_nodes': 18, 'min_samples_split': 146, 'n_estimators': 330, 'min_samples_leaf': 20, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 90, 'max_leaf_nodes': 28, 'min_samples_split': 126, 'n_estimators': 40, 'min_samples_leaf': 44, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 70, 'max_leaf_nodes': 50, 'min_samples_split': 8, 'n_estimators': 300, 'min_samples_leaf': 42, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 50, 'max_leaf_nodes': 4, 'min_samples_split': 44, 'n_estimators': 450, 'min_samples_leaf': 21, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 340, 'max_leaf_nodes': 22, 'min_samples_split': 68, 'n_estimators': 290, 'min_samples_leaf': 18, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 390, 'max_leaf_nodes': 54, 'min_samples_split': 81, 'n_estimators': 480, 'min_samples_leaf': 30, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 160, 'max_leaf_nodes': 15, 'min_samples_split': 23, 'n_estimators': 60, 'min_samples_leaf': 33, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 330, 'max_leaf_nodes': 31, 'min_samples_split': 32, 'n_estimators': 290, 'min_samples_leaf': 38, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 120, 'max_leaf_nodes': 29, 'min_samples_split': 110, 'n_estimators': 330, 'min_samples_leaf': 58, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 30, 'max_leaf_nodes': 5, 'min_samples_split': 120, 'n_estimators': 90, 'min_samples_leaf': 27, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 280, 'max_leaf_nodes': 19, 'min_samples_split': 18, 'n_estimators': 190, 'min_samples_leaf': 57, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 350, 'max_leaf_nodes': 3, 'min_samples_split': 124, 'n_estimators': 130, 'min_samples_leaf': 36, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 230, 'max_leaf_nodes': 7, 'min_samples_split': 85, 'n_estimators': 110, 'min_samples_leaf': 52, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 80, 'max_leaf_nodes': 50, 'min_samples_split': 135, 'n_estimators': 410, 'min_samples_leaf': 23, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 330, 'max_leaf_nodes': 9, 'min_samples_split': 138, 'n_estimators': 10, 'min_samples_leaf': 13, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 90, 'max_leaf_nodes': 47, 'min_samples_split': 38, 'n_estimators': 420, 'min_samples_leaf': 32, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 170, 'max_leaf_nodes': 29, 'min_samples_split': 144, 'n_estimators': 290, 'min_samples_leaf': 45, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 300, 'max_leaf_nodes': 12, 'min_samples_split': 38, 'n_estimators': 160, 'min_samples_leaf': 22, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 380, 'max_leaf_nodes': 22, 'min_samples_split': 43, 'n_estimators': 480, 'min_samples_leaf': 15, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 430, 'max_leaf_nodes': 22, 'min_samples_split': 47, 'n_estimators': 110, 'min_samples_leaf': 33, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 60, 'max_leaf_nodes': 33, 'min_samples_split': 13, 'n_estimators': 60, 'min_samples_leaf': 8, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 310, 'max_leaf_nodes': 18, 'min_samples_split': 117, 'n_estimators': 270, 'min_samples_leaf': 8, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 200, 'max_leaf_nodes': 6, 'min_samples_split': 56, 'n_estimators': 480, 'min_samples_leaf': 34, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 380, 'max_leaf_nodes': 57, 'min_samples_split': 145, 'n_estimators': 450, 'min_samples_leaf': 27, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 350, 'max_leaf_nodes': 38, 'min_samples_split': 9, 'n_estimators': 160, 'min_samples_leaf': 33, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 390, 'max_leaf_nodes': 55, 'min_samples_split': 119, 'n_estimators': 120, 'min_samples_leaf': 14, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 260, 'max_leaf_nodes': 4, 'min_samples_split': 115, 'n_estimators': 30, 'min_samples_leaf': 25, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 240, 'max_leaf_nodes': 7, 'min_samples_split': 31, 'n_estimators': 400, 'min_samples_leaf': 28, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 420, 'max_leaf_nodes': 18, 'min_samples_split': 109, 'n_estimators': 240, 'min_samples_leaf': 31, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 430, 'max_leaf_nodes': 41, 'min_samples_split': 36, 'n_estimators': 30, 'min_samples_leaf': 22, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 80, 'max_leaf_nodes': 15, 'min_samples_split': 27, 'n_estimators': 400, 'min_samples_leaf': 48, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 480, 'max_leaf_nodes': 30, 'min_samples_split': 139, 'n_estimators': 470, 'min_samples_leaf': 50, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 170, 'max_leaf_nodes': 31, 'min_samples_split': 61, 'n_estimators': 440, 'min_samples_leaf': 49, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 50, 'max_leaf_nodes': 7, 'min_samples_split': 134, 'n_estimators': 490, 'min_samples_leaf': 36, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 350, 'max_leaf_nodes': 26, 'min_samples_split': 79, 'n_estimators': 360, 'min_samples_leaf': 49, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 30, 'max_leaf_nodes': 5, 'min_samples_split': 27, 'n_estimators': 50, 'min_samples_leaf': 25, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 200, 'max_leaf_nodes': 2, 'min_samples_split': 82, 'n_estimators': 10, 'min_samples_leaf': 45, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 160, 'max_leaf_nodes': 19, 'min_samples_split': 92, 'n_estimators': 290, 'min_samples_leaf': 23, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 330, 'max_leaf_nodes': 3, 'min_samples_split': 68, 'n_estimators': 60, 'min_samples_leaf': 15, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 330, 'max_leaf_nodes': 22, 'min_samples_split': 123, 'n_estimators': 10, 'min_samples_leaf': 31, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 430, 'max_leaf_nodes': 52, 'min_samples_split': 72, 'n_estimators': 320, 'min_samples_leaf': 48, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 130, 'max_leaf_nodes': 41, 'min_samples_split': 57, 'n_estimators': 410, 'min_samples_leaf': 20, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 450, 'max_leaf_nodes': 56, 'min_samples_split': 84, 'n_estimators': 280, 'min_samples_leaf': 50, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 380, 'max_leaf_nodes': 26, 'min_samples_split': 138, 'n_estimators': 300, 'min_samples_leaf': 48, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 10, 'max_leaf_nodes': 54, 'min_samples_split': 68, 'n_estimators': 450, 'min_samples_leaf': 29, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 180, 'max_leaf_nodes': 42, 'min_samples_split': 104, 'n_estimators': 330, 'min_samples_leaf': 52, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 220, 'max_leaf_nodes': 48, 'min_samples_split': 78, 'n_estimators': 290, 'min_samples_leaf': 34, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 280, 'max_leaf_nodes': 30, 'min_samples_split': 6, 'n_estimators': 250, 'min_samples_leaf': 8, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 130, 'max_leaf_nodes': 5, 'min_samples_split': 136, 'n_estimators': 440, 'min_samples_leaf': 22, 'criterion': 'gini'}, {'max_features': None, 'oob_score': True, 'max_depth': 290, 'max_leaf_nodes': 12, 'min_samples_split': 43, 'n_estimators': 270, 'min_samples_leaf': 33, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 440, 'max_leaf_nodes': 22, 'min_samples_split': 75, 'n_estimators': 310, 'min_samples_leaf': 5, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 70, 'max_leaf_nodes': 23, 'min_samples_split': 35, 'n_estimators': 150, 'min_samples_leaf': 37, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 70, 'max_leaf_nodes': 18, 'min_samples_split': 67, 'n_estimators': 30, 'min_samples_leaf': 25, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 480, 'max_leaf_nodes': 6, 'min_samples_split': 123, 'n_estimators': 300, 'min_samples_leaf': 48, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 130, 'max_leaf_nodes': 28, 'min_samples_split': 108, 'n_estimators': 60, 'min_samples_leaf': 29, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 30, 'max_leaf_nodes': 48, 'min_samples_split': 63, 'n_estimators': 220, 'min_samples_leaf': 57, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 480, 'max_leaf_nodes': 22, 'min_samples_split': 21, 'n_estimators': 240, 'min_samples_leaf': 47, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': True, 'max_depth': 290, 'max_leaf_nodes': 54, 'min_samples_split': 50, 'n_estimators': 330, 'min_samples_leaf': 50, 'criterion': 'gini'}, {'max_features': None, 'oob_score': False, 'max_depth': 340, 'max_leaf_nodes': 6, 'min_samples_split': 92, 'n_estimators': 50, 'min_samples_leaf': 17, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 280, 'max_leaf_nodes': 26, 'min_samples_split': 7, 'n_estimators': 440, 'min_samples_leaf': 56, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 330, 'max_leaf_nodes': 47, 'min_samples_split': 90, 'n_estimators': 270, 'min_samples_leaf': 7, 'criterion': 'gini'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 80, 'max_leaf_nodes': 27, 'min_samples_split': 76, 'n_estimators': 100, 'min_samples_leaf': 8, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 410, 'max_leaf_nodes': 45, 'min_samples_split': 14, 'n_estimators': 400, 'min_samples_leaf': 46, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': True, 'max_depth': 420, 'max_leaf_nodes': 3, 'min_samples_split': 104, 'n_estimators': 360, 'min_samples_leaf': 28, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 350, 'max_leaf_nodes': 34, 'min_samples_split': 37, 'n_estimators': 420, 'min_samples_leaf': 59, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 360, 'max_leaf_nodes': 2, 'min_samples_split': 92, 'n_estimators': 340, 'min_samples_leaf': 19, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 420, 'max_leaf_nodes': 22, 'min_samples_split': 105, 'n_estimators': 490, 'min_samples_leaf': 5, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 490, 'max_leaf_nodes': 3, 'min_samples_split': 58, 'n_estimators': 240, 'min_samples_leaf': 17, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 130, 'max_leaf_nodes': 34, 'min_samples_split': 109, 'n_estimators': 140, 'min_samples_leaf': 51, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 70, 'max_leaf_nodes': 34, 'min_samples_split': 59, 'n_estimators': 470, 'min_samples_leaf': 4, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 150, 'max_leaf_nodes': 12, 'min_samples_split': 49, 'n_estimators': 310, 'min_samples_leaf': 9, 'criterion': 'entropy'}, {'max_features': 'log2', 'oob_score': False, 'max_depth': 130, 'max_leaf_nodes': 2, 'min_samples_split': 7, 'n_estimators': 490, 'min_samples_leaf': 24, 'criterion': 'gini'}, {'max_features': 'sqrt', 'oob_score': True, 'max_depth': 400, 'max_leaf_nodes': 55, 'min_samples_split': 31, 'n_estimators': 90, 'min_samples_leaf': 11, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 170, 'max_leaf_nodes': 48, 'min_samples_split': 70, 'n_estimators': 200, 'min_samples_leaf': 2, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 380, 'max_leaf_nodes': 14, 'min_samples_split': 39, 'n_estimators': 130, 'min_samples_leaf': 28, 'criterion': 'entropy'}, {'max_features': 'auto', 'oob_score': False, 'max_depth': 430, 'max_leaf_nodes': 32, 'min_samples_split': 58, 'n_estimators': 310, 'min_samples_leaf': 35, 'criterion': 'entropy'}, {'max_features': None, 'oob_score': False, 'max_depth': 480, 'max_leaf_nodes': 53, 'min_samples_split': 134, 'n_estimators': 470, 'min_samples_leaf': 9, 'criterion': 'entropy'}, {'max_features': 'sqrt', 'oob_score': False, 'max_depth': 470, 'max_leaf_nodes': 51, 'min_samples_split': 144, 'n_estimators': 20, 'min_samples_leaf': 58, 'criterion': 'gini'}, {'max_features': 'auto', 'oob_score': True, 'max_depth': 320, 'max_leaf_nodes': 41, 'min_samples_split': 131, 'n_estimators': 100, 'min_samples_leaf': 13, 'criterion': 'entropy'}], 'split1_test_score': array([0.59868421, 0.58881579, 0.58223684, 0.58881579, 0.61513158,
       0.61842105, 0.58552632, 0.58881579, 0.59210526, 0.63157895,
       0.61184211, 0.59868421, 0.62828947, 0.59210526, 0.60855263,
       0.61842105, 0.60855263, 0.58881579, 0.59539474, 0.59868421,
       0.59539474, 0.62828947, 0.62171053, 0.61184211, 0.62171053,
       0.59210526, 0.60855263, 0.58552632, 0.60855263, 0.58223684,
       0.60526316, 0.59210526, 0.59210526, 0.60855263, 0.59210526,
       0.63157895, 0.62171053, 0.59539474, 0.58223684, 0.59210526,
       0.61513158, 0.58552632, 0.62171053, 0.59539474, 0.63157895,
       0.60197368, 0.61842105, 0.62828947, 0.59210526, 0.63157895,
       0.58881579, 0.59210526, 0.62171053, 0.59539474, 0.61184211,
       0.58552632, 0.58881579, 0.59868421, 0.60197368, 0.61842105,
       0.59210526, 0.62171053, 0.60526316, 0.59210526, 0.59868421,
       0.63157895, 0.57565789, 0.61842105, 0.63486842, 0.61184211,
       0.61842105, 0.62171053, 0.63815789, 0.63815789, 0.58881579,
       0.61184211, 0.61513158, 0.60855263, 0.625     , 0.63486842,
       0.60855263, 0.58552632, 0.63486842, 0.60197368, 0.57894737,
       0.61184211, 0.58552632, 0.57236842, 0.58223684, 0.59539474,
       0.61842105, 0.58881579, 0.61184211, 0.59210526, 0.61513158,
       0.625     , 0.57894737, 0.59539474, 0.59539474, 0.60855263,
       0.61842105, 0.59868421, 0.62828947, 0.59868421, 0.60855263,
       0.58881579, 0.63815789, 0.59210526, 0.63486842, 0.58552632,
       0.59539474, 0.59210526, 0.59868421, 0.60855263, 0.59539474,
       0.59868421, 0.63486842, 0.59210526, 0.59210526, 0.61513158,
       0.59868421, 0.61513158, 0.60526316, 0.59868421, 0.62828947,
       0.61842105, 0.60855263, 0.59210526, 0.59210526, 0.59539474,
       0.59539474, 0.59210526, 0.59210526, 0.59539474, 0.61842105,
       0.61513158, 0.61842105, 0.59868421, 0.59210526, 0.61842105,
       0.61842105, 0.62828947, 0.59539474, 0.59210526, 0.60855263,
       0.59210526, 0.63815789, 0.59210526, 0.62828947, 0.59210526,
       0.59210526, 0.60197368, 0.60526316, 0.63486842, 0.60855263,
       0.61513158, 0.61513158, 0.64144737, 0.60855263, 0.62171053,
       0.62171053, 0.62171053, 0.61513158, 0.59210526, 0.59868421,
       0.61184211, 0.61184211, 0.59539474, 0.59210526, 0.59210526,
       0.58223684, 0.58881579, 0.59210526, 0.61842105, 0.62171053,
       0.61184211, 0.59210526, 0.62171053, 0.59539474, 0.64473684,
       0.60855263, 0.64144737, 0.60855263, 0.58881579, 0.59539474,
       0.58552632, 0.60197368, 0.59210526, 0.625     , 0.60526316,
       0.60526316, 0.59868421, 0.60526316, 0.61184211, 0.58881579,
       0.63157895, 0.58223684, 0.61513158, 0.59210526, 0.58881579,
       0.61513158, 0.59210526, 0.60855263, 0.61513158, 0.59210526,
       0.58881579, 0.63157895, 0.59210526, 0.59210526, 0.59539474,
       0.60197368, 0.58223684, 0.59868421, 0.59210526, 0.59210526,
       0.59210526, 0.58881579, 0.57894737, 0.59210526, 0.58223684,
       0.60526316, 0.60197368, 0.58552632, 0.59210526, 0.59210526,
       0.61184211, 0.59210526, 0.58223684, 0.61184211, 0.60526316,
       0.58552632, 0.63157895, 0.58552632, 0.60855263, 0.59539474,
       0.63157895, 0.61513158, 0.58881579, 0.59868421, 0.59210526,
       0.59210526, 0.625     , 0.60855263, 0.62171053, 0.58881579,
       0.59868421, 0.61842105, 0.61184211, 0.58881579, 0.58223684,
       0.61513158, 0.58552632, 0.61842105, 0.62171053, 0.625     ,
       0.60855263, 0.59210526, 0.61842105, 0.59539474, 0.58881579,
       0.61513158, 0.60526316, 0.58881579, 0.61513158, 0.61842105,
       0.62171053, 0.58881579, 0.60855263, 0.58881579, 0.59210526,
       0.59210526, 0.62828947, 0.60526316, 0.59539474, 0.60197368,
       0.58223684, 0.58881579, 0.58552632, 0.59868421, 0.61184211,
       0.60197368, 0.59210526, 0.62171053, 0.59210526, 0.58881579,
       0.59210526, 0.59868421, 0.59539474, 0.60197368, 0.59210526,
       0.60855263, 0.62828947, 0.61842105, 0.60855263, 0.60855263,
       0.60855263, 0.60855263, 0.59868421, 0.60197368, 0.59868421,
       0.63157895, 0.59539474, 0.59210526, 0.58881579, 0.59210526,
       0.60855263, 0.59868421, 0.59210526, 0.63486842, 0.58881579,
       0.59210526, 0.59539474, 0.62828947, 0.59210526, 0.63486842,
       0.60197368, 0.59210526, 0.61513158, 0.60855263, 0.61513158,
       0.60197368, 0.59539474, 0.61184211, 0.60526316, 0.59210526,
       0.60197368, 0.57894737, 0.58881579, 0.59210526, 0.58881579,
       0.59539474, 0.59210526, 0.63815789, 0.63157895, 0.62171053,
       0.61513158, 0.60526316, 0.62828947, 0.59210526, 0.58881579,
       0.59210526, 0.59868421, 0.59210526, 0.64473684, 0.58552632,
       0.59210526, 0.61842105, 0.58881579, 0.61842105, 0.60526316,
       0.62828947, 0.62828947, 0.59868421, 0.58881579, 0.60197368,
       0.60197368, 0.59868421, 0.61513158, 0.59210526, 0.59210526,
       0.60855263, 0.59210526, 0.58881579, 0.59210526, 0.59539474,
       0.59210526, 0.60855263, 0.59868421, 0.60855263, 0.59539474,
       0.61184211, 0.59210526, 0.625     , 0.59210526, 0.59210526,
       0.59210526, 0.59868421, 0.63486842, 0.59868421, 0.61842105,
       0.57894737, 0.60526316, 0.59868421, 0.60197368, 0.61842105,
       0.59210526, 0.59868421, 0.62171053, 0.61184211, 0.61184211,
       0.59210526, 0.59868421, 0.58881579, 0.59210526, 0.62171053,
       0.58552632, 0.59210526, 0.58552632, 0.61184211, 0.63815789,
       0.59210526, 0.58552632, 0.59210526, 0.60197368, 0.60526316,
       0.65131579, 0.59539474, 0.59210526, 0.59210526, 0.59210526,
       0.59210526, 0.59210526, 0.60526316, 0.60855263, 0.59210526,
       0.58223684, 0.60526316, 0.60855263, 0.61513158, 0.63157895,
       0.59868421, 0.61513158, 0.59210526, 0.60855263, 0.59210526,
       0.60855263, 0.61184211, 0.60197368, 0.62171053, 0.58881579,
       0.60197368, 0.58881579, 0.59210526, 0.59210526, 0.59210526,
       0.63157895, 0.60197368, 0.59210526, 0.60526316, 0.61184211,
       0.59868421, 0.60197368, 0.62828947, 0.59210526, 0.59210526,
       0.59210526, 0.61513158, 0.59539474, 0.60526316, 0.58552632,
       0.61842105, 0.59210526, 0.59210526, 0.59210526, 0.58881579,
       0.59210526, 0.59210526, 0.59210526, 0.59210526, 0.59210526,
       0.59210526, 0.59539474, 0.59539474, 0.59539474, 0.59210526,
       0.58552632, 0.59210526, 0.59210526, 0.60855263, 0.59210526,
       0.58223684, 0.63157895, 0.57894737, 0.60855263, 0.59868421,
       0.59539474, 0.58881579, 0.59210526, 0.59210526, 0.61184211,
       0.59210526, 0.60526316, 0.62171053, 0.59868421, 0.60855263,
       0.59210526, 0.59210526, 0.64144737, 0.59210526, 0.59539474,
       0.64144737, 0.61842105, 0.59210526, 0.59539474, 0.64144737,
       0.57894737, 0.59210526, 0.61842105, 0.59210526, 0.61842105]), 'std_test_score': array([0.00897373, 0.00220857, 0.00521324, 0.00410336, 0.01698706,
       0.0236095 , 0.00220229, 0.00379024, 0.01266704, 0.01758739,
       0.0102158 , 0.00853145, 0.01909111, 0.00221487, 0.0107268 ,
       0.02093503, 0.01042039, 0.00302971, 0.0045869 , 0.0104027 ,
       0.00755753, 0.01722584, 0.01758095, 0.00943897, 0.01747535,
       0.00081251, 0.0207529 , 0.01271769, 0.00791478, 0.00886294,
       0.0101022 , 0.00081251, 0.00337954, 0.01188749, 0.00081251,
       0.02279305, 0.02176441, 0.00630336, 0.00631877, 0.00233776,
       0.01097059, 0.00157264, 0.02017286, 0.00893983, 0.02267243,
       0.0193125 , 0.01432676, 0.01577141, 0.00490421, 0.02018022,
       0.00257141, 0.00081251, 0.02078303, 0.00643611, 0.01695118,
       0.0047896 , 0.00256298, 0.01165031, 0.01640352, 0.01399968,
       0.00337954, 0.01958816, 0.01697179, 0.00081251, 0.01722658,
       0.02018022, 0.01545653, 0.01557659, 0.02618924, 0.02405573,
       0.01696121, 0.01954007, 0.02421215, 0.02517823, 0.00257141,
       0.01574886, 0.01107542, 0.02313861, 0.02868978, 0.02018849,
       0.01166017, 0.00630813, 0.0206073 , 0.02617968, 0.00218978,
       0.01349838, 0.01194886, 0.00218978, 0.01230724, 0.00755753,
       0.01163277, 0.00080992, 0.0157046 , 0.00347729, 0.01303752,
       0.01576825, 0.00192446, 0.00489737, 0.00478336, 0.02468071,
       0.02357546, 0.00698166, 0.02516809, 0.01639413, 0.01641677,
       0.00526099, 0.02619113, 0.01385999, 0.02267356, 0.00853062,
       0.0071804 , 0.00081251, 0.00374702, 0.01311309, 0.01008133,
       0.00747335, 0.0279549 , 0.00081251, 0.00388322, 0.00944046,
       0.006823  , 0.0182491 , 0.0076377 , 0.01048988, 0.01827981,
       0.01692631, 0.00943749, 0.00337954, 0.00347729, 0.00595907,
       0.00698138, 0.00543167, 0.00900333, 0.00681573, 0.01837174,
       0.02253063, 0.01654027, 0.01943946, 0.00615464, 0.02200711,
       0.02369983, 0.01827981, 0.00898011, 0.00543167, 0.01250356,
       0.00221487, 0.03026404, 0.00337954, 0.02018946, 0.00615464,
       0.00081251, 0.01341331, 0.00885013, 0.02496402, 0.01096804,
       0.02155466, 0.01250578, 0.02373547, 0.01558362, 0.01758095,
       0.01404637, 0.01783416, 0.01908324, 0.00518703, 0.01337782,
       0.01860752, 0.01400109, 0.01011922, 0.00081251, 0.00081251,
       0.00721229, 0.00526099, 0.00221487, 0.01715903, 0.01292213,
       0.01391524, 0.01225555, 0.01867367, 0.0086917 , 0.03037708,
       0.01311309, 0.02317732, 0.01250356, 0.0068012 , 0.00491065,
       0.00339238, 0.0100817 , 0.00329509, 0.02136455, 0.02502026,
       0.01447089, 0.01387741, 0.01004978, 0.01558438, 0.01528529,
       0.01758739, 0.00233526, 0.02369475, 0.00478542, 0.00799532,
       0.01899725, 0.00347729, 0.01490304, 0.00936729, 0.00484804,
       0.00410336, 0.01867591, 0.01320028, 0.01133333, 0.00630336,
       0.00762963, 0.01342471, 0.00222752, 0.00221487, 0.00081251,
       0.00081251, 0.00601738, 0.00961255, 0.00378141, 0.0071804 ,
       0.0071585 , 0.01400324, 0.00602298, 0.00337954, 0.00337954,
       0.01245523, 0.00615464, 0.00917963, 0.02309265, 0.00617139,
       0.00667635, 0.01692198, 0.00411154, 0.01694617, 0.00189863,
       0.02372018, 0.01947349, 0.00814497, 0.00894536, 0.00081251,
       0.00233776, 0.01863091, 0.0131825 , 0.0157651 , 0.0034733 ,
       0.01074638, 0.02103386, 0.01560739, 0.00220857, 0.00721229,
       0.01908324, 0.00817884, 0.01841348, 0.01608318, 0.02575478,
       0.01697889, 0.00484804, 0.01306853, 0.00630336, 0.00666776,
       0.02176316, 0.01431294, 0.00372628, 0.01166663, 0.01830689,
       0.02458765, 0.00372628, 0.01190116, 0.00257141, 0.00407883,
       0.00081251, 0.01200184, 0.00895642, 0.00873126, 0.01624181,
       0.00258826, 0.00329808, 0.00337314, 0.0054324 , 0.01965131,
       0.01421974, 0.00388322, 0.01908717, 0.00347729, 0.0047875 ,
       0.00081251, 0.00739914, 0.00595907, 0.01586464, 0.00755415,
       0.01554856, 0.01799928, 0.01554663, 0.01554856, 0.01390826,
       0.0153579 , 0.01275931, 0.01387741, 0.00746728, 0.00897373,
       0.02362792, 0.01038168, 0.00517829, 0.00408701, 0.00665916,
       0.01021094, 0.00884162, 0.00233776, 0.02328672, 0.00526099,
       0.00221487, 0.00967263, 0.01899016, 0.00190375, 0.02618924,
       0.01779084, 0.00081251, 0.01557189, 0.02098697, 0.01690029,
       0.00780902, 0.00491065, 0.01714772, 0.01041449, 0.00337954,
       0.0079666 , 0.00521324, 0.00519576, 0.00081251, 0.00410336,
       0.00560743, 0.00081251, 0.02632366, 0.02396185, 0.01908717,
       0.01653871, 0.00188346, 0.01966991, 0.00081251, 0.00526099,
       0.00081251, 0.01470188, 0.0056396 , 0.02689884, 0.0047896 ,
       0.00302971, 0.00886722, 0.00606109, 0.01783405, 0.02180735,
       0.01700152, 0.0201104 , 0.01048647, 0.00719635, 0.01198458,
       0.01106412, 0.00836589, 0.0134068 , 0.01096179, 0.00518703,
       0.00936935, 0.00081251, 0.00410336, 0.00388322, 0.00930456,
       0.00081251, 0.02153904, 0.00639895, 0.01558362, 0.00337314,
       0.01451675, 0.00233776, 0.02395575, 0.00081251, 0.00081251,
       0.00081251, 0.00884162, 0.02421108, 0.01188269, 0.01867293,
       0.00381675, 0.02307705, 0.01008151, 0.00631877, 0.01459389,
       0.00798814, 0.00996571, 0.01199749, 0.01162045, 0.01049627,
       0.00388322, 0.01135117, 0.00372628, 0.00459163, 0.01690896,
       0.00694436, 0.00329509, 0.0052045 , 0.01023966, 0.0246805 ,
       0.00081251, 0.00720432, 0.00630087, 0.01014252, 0.01004978,
       0.02486282, 0.00815343, 0.00081251, 0.00388322, 0.00630087,
       0.00646726, 0.00081251, 0.01198672, 0.01008209, 0.00929798,
       0.00453204, 0.02085846, 0.01096804, 0.01846362, 0.02328714,
       0.00897373, 0.01428835, 0.00893431, 0.01339688, 0.00484804,
       0.01198886, 0.01806454, 0.00791125, 0.02093608, 0.00220857,
       0.00698195, 0.00519576, 0.00081251, 0.00081251, 0.00459163,
       0.01909309, 0.01189116, 0.00665916, 0.00853191, 0.01311596,
       0.00739914, 0.01984009, 0.01807165, 0.00751385, 0.00596273,
       0.0081619 , 0.01162575, 0.01388036, 0.01152911, 0.00563156,
       0.02769553, 0.00233776, 0.00081251, 0.00081251, 0.00719635,
       0.00221487, 0.00728292, 0.00081251, 0.00606925, 0.00081251,
       0.01453094, 0.0071804 , 0.0037401 , 0.00600618, 0.00646726,
       0.01454251, 0.00490421, 0.01562498, 0.0115334 , 0.00543167,
       0.00373318, 0.02176631, 0.00233689, 0.01290676, 0.0153343 ,
       0.00740208, 0.00379024, 0.00233776, 0.00221487, 0.02651638,
       0.00233776, 0.01071884, 0.01824854, 0.00996571, 0.01190116,
       0.00630087, 0.00081251, 0.03130087, 0.00081251, 0.0045869 ,
       0.02542835, 0.01432676, 0.00081251, 0.00761349, 0.02952384,
       0.00489668, 0.01197821, 0.01429348, 0.00233776, 0.01571545])}
HBox(children=(IntProgress(value=1, bar_style='info', max=1), HTML(value='')))

/media/schoolsofthought/32B6D9C0B6D9852F/Users/schoolsofthought/Desktop/Code/springboard/Capstone_1
Process ForkPoolWorker-7:
Traceback (most recent call last):
  File "/usr/lib/python3.5/multiprocessing/pool.py", line 125, in worker
    put((job, i, result))
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 386, in put
    return send(obj)
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 372, in send
    self._writer.send_bytes(buffer.getvalue())
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.5/multiprocessing/process.py", line 249, in _bootstrap
    self.run()
  File "/usr/lib/python3.5/multiprocessing/process.py", line 93, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.5/multiprocessing/pool.py", line 130, in worker
    put((job, i, (False, wrapped)))
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 386, in put
    return send(obj)
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 372, in send
    self._writer.send_bytes(buffer.getvalue())
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Process ForkPoolWorker-1:
Traceback (most recent call last):
  File "/usr/lib/python3.5/multiprocessing/pool.py", line 125, in worker
    put((job, i, result))
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 386, in put
    return send(obj)
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 372, in send
    self._writer.send_bytes(buffer.getvalue())
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.5/multiprocessing/process.py", line 249, in _bootstrap
    self.run()
  File "/usr/lib/python3.5/multiprocessing/process.py", line 93, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.5/multiprocessing/pool.py", line 130, in worker
    put((job, i, (False, wrapped)))
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 386, in put
    return send(obj)
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 372, in send
    self._writer.send_bytes(buffer.getvalue())
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Process ForkPoolWorker-2:
Traceback (most recent call last):
  File "/usr/lib/python3.5/multiprocessing/pool.py", line 125, in worker
    put((job, i, result))
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 386, in put
    return send(obj)
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 372, in send
    self._writer.send_bytes(buffer.getvalue())
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.5/multiprocessing/process.py", line 249, in _bootstrap
    self.run()
  File "/usr/lib/python3.5/multiprocessing/process.py", line 93, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.5/multiprocessing/pool.py", line 130, in worker
    put((job, i, (False, wrapped)))
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 386, in put
    return send(obj)
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 372, in send
    self._writer.send_bytes(buffer.getvalue())
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Process ForkPoolWorker-3:
Traceback (most recent call last):
  File "/usr/lib/python3.5/multiprocessing/pool.py", line 125, in worker
    put((job, i, result))
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 386, in put
    return send(obj)
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 372, in send
    self._writer.send_bytes(buffer.getvalue())
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.5/multiprocessing/process.py", line 249, in _bootstrap
    self.run()
  File "/usr/lib/python3.5/multiprocessing/process.py", line 93, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.5/multiprocessing/pool.py", line 130, in worker
    put((job, i, (False, wrapped)))
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 386, in put
    return send(obj)
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 372, in send
    self._writer.send_bytes(buffer.getvalue())
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Process ForkPoolWorker-4:
Traceback (most recent call last):
  File "/usr/lib/python3.5/multiprocessing/pool.py", line 125, in worker
    put((job, i, result))
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 386, in put
    return send(obj)
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 372, in send
    self._writer.send_bytes(buffer.getvalue())
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.5/multiprocessing/process.py", line 249, in _bootstrap
    self.run()
  File "/usr/lib/python3.5/multiprocessing/process.py", line 93, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.5/multiprocessing/pool.py", line 130, in worker
    put((job, i, (False, wrapped)))
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 386, in put
    return send(obj)
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 372, in send
    self._writer.send_bytes(buffer.getvalue())
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Process ForkPoolWorker-6:
Traceback (most recent call last):
  File "/usr/lib/python3.5/multiprocessing/pool.py", line 125, in worker
    put((job, i, result))
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 386, in put
    return send(obj)
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 372, in send
    self._writer.send_bytes(buffer.getvalue())
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.5/multiprocessing/process.py", line 249, in _bootstrap
    self.run()
  File "/usr/lib/python3.5/multiprocessing/process.py", line 93, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.5/multiprocessing/pool.py", line 130, in worker
    put((job, i, (False, wrapped)))
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 386, in put
    return send(obj)
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 372, in send
    self._writer.send_bytes(buffer.getvalue())
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Process ForkPoolWorker-8:
Traceback (most recent call last):
  File "/usr/lib/python3.5/multiprocessing/pool.py", line 125, in worker
    put((job, i, result))
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 386, in put
    return send(obj)
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 372, in send
    self._writer.send_bytes(buffer.getvalue())
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.5/multiprocessing/process.py", line 249, in _bootstrap
    self.run()
  File "/usr/lib/python3.5/multiprocessing/process.py", line 93, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.5/multiprocessing/pool.py", line 130, in worker
    put((job, i, (False, wrapped)))
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 386, in put
    return send(obj)
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 372, in send
    self._writer.send_bytes(buffer.getvalue())
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Process ForkPoolWorker-5:
Traceback (most recent call last):
  File "/usr/lib/python3.5/multiprocessing/pool.py", line 125, in worker
    put((job, i, result))
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 386, in put
    return send(obj)
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 372, in send
    self._writer.send_bytes(buffer.getvalue())
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.5/multiprocessing/process.py", line 249, in _bootstrap
    self.run()
  File "/usr/lib/python3.5/multiprocessing/process.py", line 93, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.5/multiprocessing/pool.py", line 130, in worker
    put((job, i, (False, wrapped)))
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 386, in put
    return send(obj)
  File "/home/schoolsofthought/virtualenvs/Capstone_1/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py", line 372, in send
    self._writer.send_bytes(buffer.getvalue())
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.5/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
HBox(children=(IntProgress(value=1, bar_style='info', max=1), HTML(value='')))

/media/schoolsofthought/32B6D9C0B6D9852F/Users/schoolsofthought/Desktop/Code/springboard/Capstone_1
{'max_features': 'log2', 'criterion': 'entropy', 'n_estimators': 100, 'max_leaf_nodes': 28, 'max_depth': 60, 'min_samples_split': 2, 'min_samples_leaf': 12, 'oob_score': False}
RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=60, max_features='log2', max_leaf_nodes=28,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=12, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=1,
            oob_score=False, random_state=42, verbose=0, warm_start=False)
0.6112531969309463
[[ 43  34]
 [118 196]]
[[0.5765512  0.4234488 ]
 [0.47883785 0.52116215]
 [0.61402539 0.38597461]
 [0.52537888 0.47462112]
 [0.50600593 0.49399407]
 [0.49379003 0.50620997]
 [0.49004719 0.50995281]
 [0.54197808 0.45802192]
 [0.48726444 0.51273556]
 [0.51105942 0.48894058]
 [0.53892511 0.46107489]
 [0.25054163 0.74945837]
 [0.32151301 0.67848699]
 [0.52345093 0.47654907]
 [0.46168907 0.53831093]
 [0.3678462  0.6321538 ]
 [0.49961637 0.50038363]
 [0.49249779 0.50750221]
 [0.48219814 0.51780186]
 [0.27921498 0.72078502]
 [0.46522014 0.53477986]
 [0.47754504 0.52245496]
 [0.30372209 0.69627791]
 [0.447868   0.552132  ]
 [0.47764278 0.52235722]
 [0.53765173 0.46234827]
 [0.44517399 0.55482601]
 [0.44798287 0.55201713]
 [0.17237795 0.82762205]
 [0.22836509 0.77163491]
 [0.28391196 0.71608804]
 [0.32145087 0.67854913]
 [0.56133257 0.43866743]
 [0.37944558 0.62055442]
 [0.45695821 0.54304179]
 [0.4845792  0.5154208 ]
 [0.31115735 0.68884265]
 [0.50160835 0.49839165]
 [0.44317873 0.55682127]
 [0.46286013 0.53713987]
 [0.47020324 0.52979676]
 [0.18643253 0.81356747]
 [0.53303665 0.46696335]
 [0.48482852 0.51517148]
 [0.50601296 0.49398704]
 [0.26670682 0.73329318]
 [0.16203306 0.83796694]
 [0.51316859 0.48683141]
 [0.44634996 0.55365004]
 [0.39563025 0.60436975]
 [0.43805556 0.56194444]
 [0.44145724 0.55854276]
 [0.4068588  0.5931412 ]
 [0.34941632 0.65058368]
 [0.49866214 0.50133786]
 [0.37175248 0.62824752]
 [0.32458216 0.67541784]
 [0.333948   0.666052  ]
 [0.50978631 0.49021369]
 [0.39911734 0.60088266]
 [0.40204983 0.59795017]
 [0.34752907 0.65247093]
 [0.55270543 0.44729457]
 [0.28794698 0.71205302]
 [0.18173764 0.81826236]
 [0.21748187 0.78251813]
 [0.20042652 0.79957348]
 [0.53517692 0.46482308]
 [0.20842728 0.79157272]
 [0.48423008 0.51576992]
 [0.5638324  0.4361676 ]
 [0.30659611 0.69340389]
 [0.29844702 0.70155298]
 [0.43868017 0.56131983]
 [0.54435509 0.45564491]
 [0.47280946 0.52719054]
 [0.33974228 0.66025772]
 [0.46745025 0.53254975]
 [0.44058146 0.55941854]
 [0.46251153 0.53748847]
 [0.29205714 0.70794286]
 [0.3229541  0.6770459 ]
 [0.41821921 0.58178079]
 [0.50112024 0.49887976]
 [0.23619846 0.76380154]
 [0.48594935 0.51405065]
 [0.33815104 0.66184896]
 [0.41772431 0.58227569]
 [0.46844482 0.53155518]
 [0.42224888 0.57775112]
 [0.54700798 0.45299202]
 [0.45322113 0.54677887]
 [0.49156949 0.50843051]
 [0.1865621  0.8134379 ]
 [0.3658975  0.6341025 ]
 [0.56905384 0.43094616]
 [0.41805365 0.58194635]
 [0.48384527 0.51615473]
 [0.22494541 0.77505459]
 [0.2933193  0.7066807 ]
 [0.35648509 0.64351491]
 [0.56115373 0.43884627]
 [0.47466195 0.52533805]
 [0.41011241 0.58988759]
 [0.18329185 0.81670815]
 [0.51584876 0.48415124]
 [0.23721019 0.76278981]
 [0.46286899 0.53713101]
 [0.51290628 0.48709372]
 [0.55607642 0.44392358]
 [0.44911261 0.55088739]
 [0.33709195 0.66290805]
 [0.34661355 0.65338645]
 [0.47773358 0.52226642]
 [0.37218863 0.62781137]
 [0.48476827 0.51523173]
 [0.5373347  0.4626653 ]
 [0.17732929 0.82267071]
 [0.42625719 0.57374281]
 [0.40579138 0.59420862]
 [0.53204488 0.46795512]
 [0.47334434 0.52665566]
 [0.49464098 0.50535902]
 [0.43906717 0.56093283]
 [0.20722696 0.79277304]
 [0.38504072 0.61495928]
 [0.48602896 0.51397104]
 [0.28819539 0.71180461]
 [0.29185228 0.70814772]
 [0.55171225 0.44828775]
 [0.18062384 0.81937616]
 [0.51754924 0.48245076]
 [0.44286178 0.55713822]
 [0.47345577 0.52654423]
 [0.43225159 0.56774841]
 [0.36119553 0.63880447]
 [0.51282465 0.48717535]
 [0.45386146 0.54613854]
 [0.4832739  0.5167261 ]
 [0.31981077 0.68018923]
 [0.43996032 0.56003968]
 [0.43577485 0.56422515]
 [0.50103916 0.49896084]
 [0.3501262  0.6498738 ]
 [0.44012895 0.55987105]
 [0.46013207 0.53986793]
 [0.48308104 0.51691896]
 [0.2214361  0.7785639 ]
 [0.45552713 0.54447287]
 [0.53855105 0.46144895]
 [0.46899447 0.53100553]
 [0.19014422 0.80985578]
 [0.17854001 0.82145999]
 [0.47876413 0.52123587]
 [0.49826723 0.50173277]
 [0.50044837 0.49955163]
 [0.34658318 0.65341682]
 [0.42563207 0.57436793]
 [0.32073908 0.67926092]
 [0.49805097 0.50194903]
 [0.40952673 0.59047327]
 [0.45085712 0.54914288]
 [0.31731033 0.68268967]
 [0.18243786 0.81756214]
 [0.47993038 0.52006962]
 [0.35543634 0.64456366]
 [0.29467828 0.70532172]
 [0.3435897  0.6564103 ]
 [0.42658558 0.57341442]
 [0.36117299 0.63882701]
 [0.34735861 0.65264139]
 [0.38865664 0.61134336]
 [0.38880821 0.61119179]
 [0.50910214 0.49089786]
 [0.40770301 0.59229699]
 [0.42868295 0.57131705]
 [0.32791288 0.67208712]
 [0.17052986 0.82947014]
 [0.50907765 0.49092235]
 [0.51500101 0.48499899]
 [0.29086122 0.70913878]
 [0.33722412 0.66277588]
 [0.39965319 0.60034681]
 [0.34767071 0.65232929]
 [0.33592188 0.66407812]
 [0.37970571 0.62029429]
 [0.35736455 0.64263545]
 [0.48722242 0.51277758]
 [0.32539917 0.67460083]
 [0.46008435 0.53991565]
 [0.46261118 0.53738882]
 [0.29489021 0.70510979]
 [0.46461076 0.53538924]
 [0.37762656 0.62237344]
 [0.54775111 0.45224889]
 [0.38376001 0.61623999]
 [0.55521664 0.44478336]
 [0.32705236 0.67294764]
 [0.53488982 0.46511018]
 [0.50879576 0.49120424]
 [0.18316385 0.81683615]
 [0.38202642 0.61797358]
 [0.35027774 0.64972226]
 [0.45162581 0.54837419]
 [0.27980752 0.72019248]
 [0.27932216 0.72067784]
 [0.53098456 0.46901544]
 [0.49349005 0.50650995]
 [0.16779524 0.83220476]
 [0.28122708 0.71877292]
 [0.5913785  0.4086215 ]
 [0.38651481 0.61348519]
 [0.38223524 0.61776476]
 [0.54013474 0.45986526]
 [0.20138997 0.79861003]
 [0.44273931 0.55726069]
 [0.32806358 0.67193642]
 [0.51508054 0.48491946]
 [0.46463202 0.53536798]
 [0.41971315 0.58028685]
 [0.46507377 0.53492623]
 [0.17791851 0.82208149]
 [0.49884367 0.50115633]
 [0.31552733 0.68447267]
 [0.34281998 0.65718002]
 [0.52228591 0.47771409]
 [0.45716375 0.54283625]
 [0.38417195 0.61582805]
 [0.45611273 0.54388727]
 [0.2369248  0.7630752 ]
 [0.39704784 0.60295216]
 [0.31369857 0.68630143]
 [0.28079275 0.71920725]
 [0.51983447 0.48016553]
 [0.30726494 0.69273506]
 [0.53283049 0.46716951]
 [0.38786913 0.61213087]
 [0.18273529 0.81726471]
 [0.12593194 0.87406806]
 [0.42148645 0.57851355]
 [0.47357536 0.52642464]
 [0.26643336 0.73356664]
 [0.34646606 0.65353394]
 [0.46908331 0.53091669]
 [0.20606955 0.79393045]
 [0.46314481 0.53685519]
 [0.48272547 0.51727453]
 [0.40865117 0.59134883]
 [0.59805598 0.40194402]
 [0.51924331 0.48075669]
 [0.50886608 0.49113392]
 [0.36495899 0.63504101]
 [0.26868989 0.73131011]
 [0.52571923 0.47428077]
 [0.18044648 0.81955352]
 [0.37695285 0.62304715]
 [0.4088274  0.5911726 ]
 [0.39711208 0.60288792]
 [0.31041672 0.68958328]
 [0.46247379 0.53752621]
 [0.47592896 0.52407104]
 [0.45918916 0.54081084]
 [0.4286274  0.5713726 ]
 [0.46075652 0.53924348]
 [0.15696067 0.84303933]
 [0.43267534 0.56732466]
 [0.55445222 0.44554778]
 [0.54992357 0.45007643]
 [0.40883912 0.59116088]
 [0.31258771 0.68741229]
 [0.49928644 0.50071356]
 [0.45841805 0.54158195]
 [0.48410964 0.51589036]
 [0.35365385 0.64634615]
 [0.27133521 0.72866479]
 [0.2665388  0.7334612 ]
 [0.51533195 0.48466805]
 [0.41380204 0.58619796]
 [0.34425357 0.65574643]
 [0.46099388 0.53900612]
 [0.40142097 0.59857903]
 [0.53956084 0.46043916]
 [0.45944514 0.54055486]
 [0.44008429 0.55991571]
 [0.36225424 0.63774576]
 [0.4591771  0.5408229 ]
 [0.26639008 0.73360992]
 [0.48280786 0.51719214]
 [0.31029914 0.68970086]
 [0.33706601 0.66293399]
 [0.40309753 0.59690247]
 [0.39224638 0.60775362]
 [0.22865265 0.77134735]
 [0.41669407 0.58330593]
 [0.36969902 0.63030098]
 [0.51872334 0.48127666]
 [0.54230888 0.45769112]
 [0.28968328 0.71031672]
 [0.32067448 0.67932552]
 [0.45250945 0.54749055]
 [0.47412013 0.52587987]
 [0.59954469 0.40045531]
 [0.36818274 0.63181726]
 [0.347609   0.652391  ]
 [0.29558651 0.70441349]
 [0.29640086 0.70359914]
 [0.54793441 0.45206559]
 [0.45232304 0.54767696]
 [0.24432669 0.75567331]
 [0.219933   0.780067  ]
 [0.48194206 0.51805794]
 [0.17513001 0.82486999]
 [0.45505446 0.54494554]
 [0.51899724 0.48100276]
 [0.44199494 0.55800506]
 [0.48607707 0.51392293]
 [0.36029213 0.63970787]
 [0.36692833 0.63307167]
 [0.40953911 0.59046089]
 [0.2690245  0.7309755 ]
 [0.20667122 0.79332878]
 [0.20102692 0.79897308]
 [0.52000053 0.47999947]
 [0.32127995 0.67872005]
 [0.47389105 0.52610895]
 [0.44802527 0.55197473]
 [0.35565454 0.64434546]
 [0.37049565 0.62950435]
 [0.25142164 0.74857836]
 [0.47163636 0.52836364]
 [0.51982234 0.48017766]
 [0.47862772 0.52137228]
 [0.42732374 0.57267626]
 [0.3347234  0.6652766 ]
 [0.22063269 0.77936731]
 [0.1781314  0.8218686 ]
 [0.24878861 0.75121139]
 [0.46910299 0.53089701]
 [0.25166182 0.74833818]
 [0.50938961 0.49061039]
 [0.54591766 0.45408234]
 [0.55781879 0.44218121]
 [0.51816086 0.48183914]
 [0.45217622 0.54782378]
 [0.36817418 0.63182582]
 [0.51846182 0.48153818]
 [0.38528408 0.61471592]
 [0.17653089 0.82346911]
 [0.51895524 0.48104476]
 [0.44211963 0.55788037]
 [0.40042609 0.59957391]
 [0.48383691 0.51616309]
 [0.47134197 0.52865803]
 [0.37004849 0.62995151]
 [0.23345884 0.76654116]
 [0.35241109 0.64758891]
 [0.37904356 0.62095644]
 [0.51997531 0.48002469]
 [0.54134066 0.45865934]
 [0.40511478 0.59488522]
 [0.47801884 0.52198116]
 [0.50395689 0.49604311]
 [0.37278991 0.62721009]
 [0.49335661 0.50664339]
 [0.34703893 0.65296107]
 [0.27771876 0.72228124]
 [0.35297025 0.64702975]
 [0.35961683 0.64038317]
 [0.24128011 0.75871989]
 [0.13231011 0.86768989]
 [0.3620699  0.6379301 ]
 [0.29322264 0.70677736]
 [0.54849774 0.45150226]
 [0.53101018 0.46898982]
 [0.52045052 0.47954948]
 [0.1629229  0.8370771 ]
 [0.51136166 0.48863834]
 [0.34095138 0.65904862]
 [0.42775364 0.57224636]
 [0.31960188 0.68039812]
 [0.34537391 0.65462609]
 [0.42617266 0.57382734]
 [0.36151111 0.63848889]
 [0.44083734 0.55916266]
 [0.49638816 0.50361184]
 [0.51200929 0.48799071]
 [0.42790304 0.57209696]
 [0.45865324 0.54134676]
 [0.20539972 0.79460028]
 [0.43345689 0.56654311]
 [0.34393987 0.65606013]]
('budget', 0.12796172514235327)
('runtime', 0.1008451620104022)
('release_year', 0.11498994563121558)
('action', 0.00861917448172825)
('adventure', 0.0030087989240923894)
('animation', 0.0044449423426463994)
('comedy', 0.012475977134955542)
('crime', 0.0037335526030854767)
('documentary', 8.243532877201292e-05)
('drama', 0.01853897578067274)
('family', 0.012706158535413103)
('fantasy', 0.002705290945804474)
('foreign', 0.0)
('history', 0.0009982875475177228)
('horror', 0.00966490420167928)
('music', 0.0004953613765734008)
('mystery', 0.004136897620419297)
('romance', 0.006537969496532161)
('science fiction', 0.0058010446851843814)
('tv movie', 0.0)
('thriller', 0.0076363438574546414)
('war', 0.0)
('western', 0.0)
('genre_count', 0.030837773597710047)
('director_unknown', 0.006560127901981116)
('director_male', 0.009645533423664436)
('director_female', 0.00084192406666264)
('director_credits', 0.06614862325750655)
('director_net_to_date', 0.08874647840707318)
('actor_unknown', 0.007635186313244245)
('actor_male', 0.008599736381177708)
('actor_female', 0.014601026780681748)
('actor_credits', 0.042559399894686024)
('actor_net_to_date', 0.08601462674350005)
('writer_unknown', 0.011117323665496184)
('writer_male', 0.010452776896221752)
('writer_female', 0.00421762045314659)
('writer_credits', 0.019428402764125195)
('writer_net_to_date', 0.03546049725646166)
('language_count', 0.012482204837429647)
('January', 0.004732340794561502)
('February', 0.0017869392347714744)
('March', 0.0024614392940472867)
('April', 0.008897489131837372)
('May', 0.004325226551543772)
('June', 0.0019942872936119646)
('July', 0.004388386245643522)
('August', 0.0039711562172233365)
('September', 0.008538097018439127)
('October', 0.002358267771880753)
('November', 0.0005813476128761289)
('December', 0.0025352687752034555)
('Monday', 0.002078292096500993)
('Tuesday', 0.0024039215854265495)
('Wednesday', 0.018046049871374002)
('Thursday', 0.007076298656470138)
('Friday', 0.021144979501984938)
('Saturday', 0.00015657659748595246)
('Sunday', 0.0017914254618466617)
